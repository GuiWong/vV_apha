     1                                  %include "vVc/assembly/w_runtime/vV_defines.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> ;------------------Variables From Project-------------
     5                              <1> 
     6                              <1> 	;------------------Should come from io module(need refactoring)
     7                              <1> 
     8                              <1> 
     9                              <1> 	%define vV_input_buffer_size 255
    10                              <1> 	%define vV_output_buffer_size 255
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;------------------Implementation Relative-------------
    15                              <1> 
    16                              <1> %deftok vV_sp 'r15'
    17                              <1> 
    18                              <1> %deftok vV_spS 'r14'
    19                              <1> 
    20                              <1> %deftok vV_sdir '-'
    21                              <1> 
    22                              <1> 
    23                              <1> 
    24                              <1> 
    25                              <1> ;------------------Stack Shortcuts--------------------
    26                              <1> 
    27                              <1> %define cell(a) (a*4)
    28                              <1> 
    29                              <1> 
    30                              <1> %define vV_top [vV_sp vV_sdir %+ cell(1)]
    31                              <1> %define vV_2nd [vV_sp vV_sdir %+ cell(2)]
    32                              <1> 
    33                              <1> %define vV_stack_v(a) ([vV_sp vV_sdir %+ cell(a)])
    34                              <1> 
    35                              <1> 
    36                              <1> ;-------------------Out_Format Pointer------------------
    37                              <1> 
    38                              <1> %deftok vV_FORMAT_BIN "vV_ascii_int_to_bin"
    39                              <1> %deftok vV_FORMAT_DEC "vV_ascii_int_to_dec"
    40                              <1> %deftok vV_FORMAT_HEX "vV_ascii_int_to_hex"
    41                              <1> 
    42                              <1> 
    43                              <1> 
    44                              <1> ;--------------------Op Macros--------------------------
    45                              <1> 
    46                              <1> %macro vV_push 1
    47                              <1> 
    48                              <1> 	mov DWORD[vV_sp] , %1
    49                              <1> 	add vV_sp , 4
    50                              <1> 
    51                              <1> %endmacro
    52                              <1> 
    53                              <1> %macro vV_pop 1
    54                              <1> 
    55                              <1> 	sub vV_sp , 4
    56                              <1> 	mov %1 , [vV_sp]
    57                              <1> 	
    58                              <1> %endmacro
    59                              <1> 
    60                              <1> %macro vV_swap 0
    61                              <1> 
    62                              <1> 	mov edx , [vV_sp-4]
    63                              <1> 	mov eax , [vV_sp-8]
    64                              <1> 	mov [vV_sp-8] , edx 
    65                              <1> 	mov [vV_sp-4] , eax 
    66                              <1> 	
    67                              <1> %endmacro
    68                              <1> 
    69                              <1> %macro vV_dup 1
    70                              <1> 
    71                              <1> 	mov ecx , %1
    72                              <1> 	lea rsi , [vV_sp-cell(%1)]
    73                              <1> 	mov rdi , vV_sp
    74                              <1> 		
    75                              <1> 	rep movsd
    76                              <1> 	
    77                              <1> 	add vV_sp , cell(%1)
    78                              <1> 	
    79                              <1> %endmacro
    80                              <1> 
    81                              <1> 
    82                              <1> %macro vV_dec_sp 1
    83                              <1> 
    84                              <1> 	sub vV_sp , cell(%1)
    85                              <1> 	
    86                              <1> %endmacro
    87                              <1> 	
     2                                  %include "vVc/assembly/w_runtime/vV_error_code.asm"		
     1                              <1> 
     2                              <1> %define vV_ERR_IO_I_OVERFLOW 1
     3                              <1> %define vV_ERR_IO_O_OVERFLOW 2
     4                              <1> %define vV_ERR_IO_I_UNVALID 3
     5                              <1> %define vV_ERR_IO_O_UNVALID 4
     6                              <1> %define vV_ERR_IO_I_VALUE_OVERFLOW 5
     7                              <1> 
     8                              <1> 
     9                              <1> %define vV_ERR_VALUE_OVERFLOW 8
    10                              <1> 
    11                              <1> 
    12                              <1> %define vV_ERR_MEMORY_BUFFER_LIMIT 16
     3                                  %include "vVc/assembly/w_runtime/vV_runtime.asm"		
     1                              <1> %define SYS_EXIT 60
     2                              <1> 
     3                              <1> 
     4                              <1> ;%include "vVc/assembly/w_runtime/vV_errors.asm"
     5                              <1> ;%include "vVc/assembly/w_runtime/vV_system00.asm"
     6                              <1> ;%include "vVc/assembly/w_runtime/vV_system10.asm"
     7                              <1> ;%include "vVc/assembly/w_runtime/vV_system90.asm"
     8                              <1> 
     9                              <1> 
    10                              <1> global _start
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;extern vV_entry_point			;Defined by main program
    15                              <1> 
    16                              <1> 
    17                              <1> 
    18                              <1> 	
    19                              <1> segment .data 
    20                              <1> 
    21                              <1> 
    22                              <1> 	
    23                              <1> 
    24                              <1> segment .text 
    25                              <1> 
    26                              <1> 
    27                              <1> 	vV_forced_exit:				;rax hold exit code
    28                              <1> 							;Removed default error printing
    29                              <1> 							;This will now happens in errors module
    30                              <1> 
    31 00000000 4889C7              <1> 		mov rdi, rax
    32 00000003 B83C000000          <1> 		mov rax, SYS_EXIT
    33 00000008 0F05                <1> 		syscall
    34                              <1> 		
    35                              <1> 		
    36                              <1> 
    37                              <1> 
    38                              <1> 	save_regs:			;In case called from other process
    39                              <1> 	
    40 0000000A 58                  <1> 		pop rax
    41                              <1> 	
    42 0000000B 53                  <1> 		push rbx
    43 0000000C 4154                <1> 		push r12
    44 0000000E 4155                <1> 		push r13
    45 00000010 4156                <1> 		push r14
    46 00000012 4157                <1> 		push r15
    47                              <1> 		
    48 00000014 50                  <1> 		push rax
    49                              <1> 		
    50 00000015 C3                  <1> 		ret
    51                              <1> 		
    52                              <1> 	restore_regs:
    53                              <1> 	
    54 00000016 58                  <1> 		pop rax
    55                              <1> 	
    56 00000017 415F                <1> 		pop r15
    57 00000019 415E                <1> 		pop r14
    58 0000001B 415D                <1> 		pop r13
    59 0000001D 415C                <1> 		pop r12
    60 0000001F 5B                  <1> 		pop rbx
    61                              <1> 		
    62 00000020 50                  <1> 		push rax
    63                              <1> 		
    64 00000021 C3                  <1> 		ret
    65                              <1> 		
    66                              <1> 	setup_memory:
    67                              <1> 	
    68 00000022 C70425[80000000]00- <1> 		mov DWORD [vV_input_buffer_content] , 0
    68 0000002A 000000              <1>
    69 0000002D C70425[83010000]00- <1> 		mov DWORD [vV_output_buffer_content] , 0
    69 00000035 000000              <1>
    70                              <1> 		
    71                              <1> 		;mov DWORD [endofline] , 0xa
    72                              <1> 		
    73 00000038 C70425[14010000]-   <1> 		mov DWORD[vV_sys_format_mode] , vV_ascii_int_to_dec
    73 0000003F [01040000]          <1>
    74                              <1> 		
    75 00000043 C3                  <1> 		ret
    76                              <1> 		
    77                              <1> 		
    78                              <1> 	
    79                              <1> 		
    80                              <1> _start:				;Entry point of Every Program
    81                              <1> 	
    82                              <1> 		
    83                              <1> 
    84 00000044 4889E5              <1> 	mov rbp, rsp				;Setup Stack Frame
    85                              <1> 	
    86 00000047 49BF-               <1> 	mov r15 , fake_stack_start			;setup fake data stack
    86 00000049 [8602040000000000]  <1>
    87                              <1> 	
    88 00000051 E8B4FFFFFF          <1> 	call save_regs				;just in case
    89                              <1> 	
    90                              <1> 	
    91 00000056 E8C7FFFFFF          <1> 	call setup_memory			;all memory setup at start
    92                              <1> 	
    93                              <1> 	
    94                              <1> 	
    95 0000005B E86E0C0000          <1> 	call vV_entry_point			;Start the program 
    96                              <1> 	
    97                              <1> 	
    98 00000060 E8B1FFFFFF          <1> 	call restore_regs
    99                              <1> 	
   100                              <1> 
   101                              <1> ;------------------------------------------------------------------------------
   102                              <1> 
   103 00000065 B83C000000          <1> 	mov rax, SYS_EXIT
   104 0000006A BF00000000          <1> 	mov rdi, 0		;Normal exit procedure (no code returned from main)
   105 0000006F 0F05                <1> 	syscall
   106                              <1> 	
   107                              <1> 	
   108                              <1> 	
   109                              <1> 	
   110                              <1> 	
     4                                  %include "vVc/assembly/w_runtime/vV_system00.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5 00000000 <res 00000040>      <1> 	vV_sys_start:	resd 16		;not used now
     6                              <1> 
     7                              <1> 	
     8                              <1> 	
     9                              <1> segment .data
    10                              <1> 
    11                              <1> 
    12                              <1> ;--Start of Memory----------------------------------------------------------
    13                              <1> 
    14                              <1> 	ALIGN 8
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;---------------------Error Managment----------
    18                              <1> 
    19                              <1> 
    20                              <1> ;error vectors	
    21                              <1> 	
    22                              <1> 	vV_error_vectors:
    23 00000000 [8D00000000000000]- <1> 	times 32 dq vV_error_unhandeled
    23 00000000 <rept>              <1>
    24                              <1> 	
    25                              <1> 	
    26                              <1> 	
    27                              <1> segment .text
    28                              <1> 
    29                              <1> 
    30                              <1> vV_error:
    31                              <1> 
    32 00000071 52                  <1> 	push rdx
    33                              <1> 	
    34 00000072 4831D2              <1> 	xor rdx , rdx
    35                              <1> 	
    36 00000075 88E2                <1> 	mov dl , ah
    37                              <1> 	
    38 00000077 C0E203              <1> 	shl dl , 3
    39                              <1> 	
    40 0000007A 67FF92[00000000]    <1> 	call [vV_error_vectors + edx]
    41                              <1> 	
    42                              <1> 	
    43 00000081 5A                  <1> 	pop rdx
    44                              <1> 	
    45 00000082 C3                  <1> 	ret
    46                              <1> 	
    47                              <1> 	
    48                              <1> vV_error_fatal:
    49                              <1> 
    50                              <1> 	
    51 00000083 88D0                <1> 	mov al , dl
    52                              <1> 	
    53 00000085 C0E803              <1> 	shr al , 3
    54                              <1> 
    55 00000088 E873FFFFFF          <1> 	call vV_forced_exit
    56                              <1> 	
    57                              <1> 	
    58                              <1> 	
    59                              <1> 	
    60                              <1> 	
    61                              <1> 	
    62                              <1> 
    63                              <1> 	
     5                                  %include "vVc/assembly/w_runtime/vV_errors.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> segment .bss
     5                              <1> 
     6                              <1> 
     7                              <1> 	ALIGNB 4
     8                              <1> 		
     9                              <1> 	vV_error_buffer:
    10 00000040 <res 00000040>      <1> 	resb 64
    11                              <1> 	vV_end_err_buff:
    12                              <1> 	vV_error_buffer_size equ vV_end_err_buff-vV_error_buffer
    13                              <1> 
    14                              <1> 
    15                              <1> 
    16                              <1> 
    17                              <1> segment .data
    18                              <1> 
    19                              <1> ;Error String	
    20                              <1> 
    21                              <1> 	
    22                              <1> 	vV_error_msg:
    23 00000100 556E68616E64656C65- <1> 	.default: db "Unhandeled Error "
    23 00000109 64204572726F7220    <1>
    24                              <1> 	default_size equ $-.default
    25                              <1> 
    26                              <1> 
    27                              <1> 
    28                              <1> segment .text
    29                              <1> 
    30                              <1> 
    31                              <1> 
    32                              <1> 
    33                              <1> 	
    34                              <1> vV_error_unhandeled:
    35                              <1> 
    36                              <1> 
    37 0000008D 56                  <1> 	push rsi
    38 0000008E 57                  <1> 	push rdi	;Save reg used by syscall
    39 0000008F 4151                <1> 	push r9	;and by conversion func
    40                              <1> 	
    41                              <1> 	
    42                              <1> ;push rax	;Save flags ( and value)
    43                              <1> 
    44 00000091 53                  <1> 	push rbx	;Save Arg
    45 00000092 52                  <1> push rdx		;Save error code
    46                              <1> 	
    47                              <1> 	
    48 00000093 BA11000000          <1> 	mov edx , default_size				;string lenght
    49 00000098 48BE-               <1> 	mov rsi , vV_error_msg.default			;strng ptr
    49 0000009A [0001000000000000]  <1>
    50 000000A2 BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    51 000000A7 B801000000          <1> 	mov rax , 1				; Write sysCall
    52 000000AC 0F05                <1> 	syscall	
    53                              <1> 	
    54                              <1> 	
    55 000000AE 58                  <1> pop rax	;error code
    56                              <1> 
    57                              <1> 
    58 000000AF C0E803              <1> 	shr al , 3
    59                              <1> 	
    60                              <1> 	
    61 000000B2 BF[40000000]        <1> 	mov edi , vV_error_buffer
    62 000000B7 41B940000000        <1> 	mov r9d , vV_error_buffer_size
    63                              <1> 	
    64                              <1> 
    65 000000BD E83F030000          <1> 	call vV_ascii_int_to_dec	
    66                              <1> 	
    67                              <1> 		
    68                              <1> 	
    69 000000C2 67C680[40000000]20  <1> 	mov BYTE[vV_error_buffer + eax] , ' '
    70                              <1> 	
    71                              <1> 	
    72 000000CA 67488DB8[41000000]  <1> 	lea rdi , [vV_error_buffer + eax + 1]
    73 000000D2 4129F9              <1> 	sub r9d , edi
    74                              <1> 	
    75 000000D5 58                  <1> 	pop rax
    76                              <1> 	
    77 000000D6 E826030000          <1> 	call vV_ascii_int_to_dec
    78                              <1> 	
    79 000000DB 674C8D0C07          <1> 	lea r9 , [edi + eax]
    80                              <1> 	
    81 000000E0 41C6010A            <1> 	mov BYTE[r9] , 0xa
    82                              <1> 	
    83 000000E4 49FFC1              <1> 	inc r9
    84                              <1> 	
    85 000000E7 4981E9[40000000]    <1> 	sub r9 , vV_error_buffer
    86                              <1> 	
    87 000000EE 4489CA              <1> 	mov edx , r9d				;string lenght
    88 000000F1 48BE-               <1> 	mov rsi , vV_error_buffer			;strng ptr
    88 000000F3 [4000000000000000]  <1>
    89 000000FB BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    90 00000100 B801000000          <1> 	mov rax , 1				; Write sysCall
    91 00000105 0F05                <1> 	syscall
    92                              <1> 	
    93 00000107 4159                <1> 	pop r9
    94 00000109 5F                  <1> 	pop rdi
    95 0000010A 5E                  <1> 	pop rsi
    96                              <1> 	
    97                              <1> 	
    98                              <1> 	
    99                              <1> 	
   100 0000010B C3                  <1> 	ret
   101                              <1> 	
   102                              <1> 	
   103                              <1> 	
   104                              <1> 		
   105                              <1> 		
   106                              <1> 		
   107                              <1> 		
   108                              <1> 		
   109                              <1> 		
   110                              <1> 		
   111                              <1> 		
   112                              <1> 		
   113                              <1> 		
   114                              <1> 		
   115                              <1> 		
   116                              <1> 		
   117                              <1> 		
   118                              <1> 		
   119                              <1> 		
   120                              <1> 		
   121                              <1> 		
   122                              <1> 		
   123                              <1> 
     6                                  %include "vVc/assembly/w_runtime/vV_system10.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5                              <1> 	
     6                              <1> 	
     7                              <1> 	;------------Input Buffer
     8                              <1> 
     9                              <1> 
    10                              <1> 	
    11 00000080 <res 00000004>      <1> 	vV_input_buffer_content: resb 4			;Input Buffer current content
    12 00000084 <res 000000FF>      <1> 	vV_input_buffer: resb vV_input_buffer_size		;Input Buffer of 256 char
    13                              <1> 	
    14                              <1> 	
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;------------Output Buffer
    18                              <1> 
    19                              <1> 
    20                              <1> 
    21                              <1> 	
    22 00000183 <res 00000004>      <1> 	vV_output_buffer_content: resb 4			;Output Buffer current content
    23 00000187 <res 000000FF>      <1> 	vV_output_buffer: resb vV_output_buffer_size		;Output Buffer of 256 char
    24                              <1> 	
    25                              <1> 	
    26                              <1> 	
    27                              <1> 	
    28                              <1> ;------------Number Buffer
    29                              <1> 
    30                              <1> 
    31                              <1> 	
    32                              <1> 	
    33                              <1> 	;w_number_buffer: resb 10				;Todo: Handle Bigger Numbers
    34                              <1> 	;endofline: resb 1					;Maybe Not Needed
    35                              <1> 	
    36                              <1> 
    37                              <1> 
    38                              <1> segment .data
    39 00000111 90<rept>            <1> 	ALIGN 4
    40 00000114 [01040000]          <1> 	vV_sys_format_mode: dd vV_ascii_int_to_dec
     7                                  %include "vVc/assembly/w_runtime/vV_io.asm"			
     1                              <1> 
     2                              <1> 
     3                              <1> ;%include "vVc/assembly/w_runtime/vV_ascii.asm"
     4                              <1> 
     5                              <1> 
     6                              <1> ;Group all read/wrie syscalls
     7                              <1> 
     8                              <1> ;global convert_to_string
     9                              <1> ;global convert_to_int
    10                              <1> 
    11                              <1> ;extern vV_input_buffer
    12                              <1> ;extern vV_output_buffer
    13                              <1> ;extern w_number_buffer
    14                              <1> 
    15                              <1> global wio_out
    16                              <1> global wio_get
    17                              <1> global wio_get_str_raw
    18                              <1> global wio_get_str_null
    19                              <1> global wio_get_str_nline
    20                              <1> global wio_move_in_to_out
    21                              <1> 
    22                              <1> 
    23                              <1> segment .text 
    24                              <1> 
    25                              <1> 
    26                              <1> 
    27                              <1> 
    28                              <1> 
    29                              <1> vV_io_flush:
    30                              <1> 	
    31                              <1> 	
    32                              <1> 	
    33 0000010C 8B1425[83010000]    <1> 	mov edx , DWORD[vV_output_buffer_content]			;string lenght	
    34                              <1> 	
    35 00000113 C70425[83010000]00- <1> 	mov DWORD[vV_output_buffer_content] , 0
    35 0000011B 000000              <1>
    36                              <1> 	
    37 0000011E 48BE-               <1> 	mov rsi , vV_output_buffer			;strng ptr
    37 00000120 [8701000000000000]  <1>
    38                              <1> 		
    39 00000128 67C682[87010000]0A  <1> 	mov BYTE[vV_output_buffer + edx] , 0xa
    40 00000130 FFC2                <1> 	inc edx
    41                              <1> 		
    42 00000132 BF01000000          <1> 	mov rdi , 1					;file descriptor, stdout
    43 00000137 B801000000          <1> 	mov rax , 1					; Write sysCall
    44 0000013C 0F05                <1> 	syscall
    45                              <1> 	
    46                              <1> 	
    47                              <1> 	
    48 0000013E C3                  <1> 	ret
    49                              <1> 	
    50                              <1> 		
    51                              <1> ;-------------------------------------------------------------------------------
    52                              <1> ;-------------------------------------------------------------------------------
    53                              <1> 	
    54                              <1> vV_io_out_buffer_default:
    55                              <1> 
    56 0000013F 448B1425[14010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    57 00000147 E80F000000          <1> 	call vV_io_out_buffer
    58 0000014C C3                  <1> 	ret
    59                              <1> 	
    60                              <1> vV_io_out_default:
    61                              <1> 
    62 0000014D 448B1425[14010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    63 00000155 E80C000000          <1> 	call vV_io_out
    64 0000015A C3                  <1> 	ret
    65                              <1> 
    66                              <1> ;-------------------------------------------------------------------------------
    67                              <1> ;-------------------------------------------------------------------------------
    68                              <1> 	
    69                              <1> vV_io_out_buffer:				;print str repr of Top Of Stack element
    70                              <1> 						
    71                              <1> 						
    72 0000015B E811000000          <1> 	call vV_io_out01			
    73 00000160 E84A000000          <1> 	call vV_io_out_buffer_end
    74 00000165 C3                  <1> 	ret
    75                              <1> 
    76                              <1> ;-------------------------------------------------------------------------------
    77                              <1> 		
    78                              <1> vV_io_out:					;print str repr of Top Of Stack element
    79                              <1> 
    80                              <1> 
    81 00000166 E806000000          <1> 	call vV_io_out01					
    82 0000016B E826000000          <1> 	call vV_io_out_direct_end
    83 00000170 C3                  <1> 	ret
    84                              <1> 
    85                              <1> ;-------------------------------------------------------------------------------	
    86                              <1> ;-------------------------------------------------------------------------------	
    87                              <1> 
    88                              <1> vV_io_out01:					;print str repr of Top Of Stack element
    89                              <1> 
    90                              <1> 
    91                              <1> 	vV_pop eax				;get value in eax
    91                              <2> 
    91 00000171 4983EF04            <2>  sub vV_sp , 4
    91 00000175 418B07              <2>  mov %1 , [vV_sp]
    91                              <2> 
    92                              <1> 	
    93 00000178 BF[87010000]        <1> 	mov edi , vV_output_buffer		;set dest as O_buff
    94 0000017D 033C25[83010000]    <1> 	add edi ,DWORD[vV_output_buffer_content]		;set offset to start of freespace
    95                              <1> 	
    96 00000184 57                  <1> push rdi					;Save buffer origin
    97                              <1> 	
    98 00000185 41B9FF000000        <1> 	mov r9 , 255				;set Max buffer available	
    99 0000018B 4129F9              <1> 	sub r9d , edi				;#TODO: Stop HardCoding VALUES!!!!
   100 0000018E 41FFD2              <1> 		call r10			;call current conversion format function
   101 00000191 4831FF              <1> 	xor rdi , rdi
   102                              <1> 	
   103 00000194 5F                  <1> pop rdi						;recover Buffer origin
   104                              <1> 	
   105 00000195 C3                  <1> 	ret
   106                              <1> 
   107                              <1> ;-------------------------------------------------------------------------------	
   108                              <1> 	
   109                              <1> vV_io_out_direct_end:
   110                              <1> 
   111                              <1> 
   112                              <1> 
   113 00000196 67C604070A          <1> 	mov BYTE[edi + eax] , 0xa		;add new_line
   114                              <1> 		
   115 0000019B FFC0                <1> 		inc eax
   116                              <1> 		
   117 0000019D 89C2                <1> 		mov edx , eax				;string lenght		
   118 0000019F 4889FE              <1> 		mov rsi , rdi				;strng ptr
   119 000001A2 BF01000000          <1> 		mov rdi , 1				;file descriptor, stdout
   120 000001A7 B801000000          <1> 		mov rax , 1				; Write sysCall
   121 000001AC 0F05                <1> 		syscall
   122                              <1> 	
   123 000001AE C3                  <1> 		ret
   124                              <1> 
   125                              <1> ;-------------------------------------------------------------------------------		
   126                              <1> 		
   127                              <1> vV_io_out_buffer_end:
   128                              <1> 
   129 000001AF 010425[83010000]    <1> 	add [vV_output_buffer_content] , eax
   130                              <1> 
   131 000001B6 C3                  <1> 	ret
   132                              <1> 
   133                              <1> ;-------------------------------------------------------------------------------
   134                              <1> 
   135                              <1> vV_io_out_char:
   136                              <1> 
   137                              <1> 	
   138 000001B7 E827000000          <1> 	call vV_io_read_char
   139 000001BC E8D5FFFFFF          <1> 	call vV_io_out_direct_end
   140                              <1> 	
   141 000001C1 C3                  <1> 	ret
   142                              <1> 	
   143                              <1> vV_io_out_packed_char:
   144                              <1> 
   145                              <1> 	
   146 000001C2 E842000000          <1> 	call vV_io_read_packed_char
   147                              <1> 	
   148 000001C7 E8CAFFFFFF          <1> 	call vV_io_out_direct_end
   149                              <1> 	
   150 000001CC C3                  <1> 	ret
   151                              <1> 	
   152                              <1> vV_io_out_char_buffer:
   153                              <1> 
   154 000001CD E811000000          <1> 	call vV_io_read_char
   155                              <1> 	
   156 000001D2 E8D8FFFFFF          <1> 	call vV_io_out_buffer_end
   157                              <1> 	
   158 000001D7 C3                  <1> 	ret
   159                              <1> 	
   160                              <1> vV_io_out_packed_char_buffer:
   161                              <1> 
   162 000001D8 E82C000000          <1> 	call vV_io_read_packed_char
   163                              <1> 	
   164 000001DD E8CDFFFFFF          <1> 	call vV_io_out_buffer_end
   165                              <1> 	
   166 000001E2 C3                  <1> 	ret
   167                              <1> 	
   168                              <1> vV_io_read_char:
   169                              <1> 
   170                              <1> 	vV_pop eax
   170                              <2> 
   170 000001E3 4983EF04            <2>  sub vV_sp , 4
   170 000001E7 418B07              <2>  mov %1 , [vV_sp]
   170                              <2> 
   171                              <1> 	
   172 000001EA 48BF-               <1> 	mov rdi , vV_output_buffer
   172 000001EC [8701000000000000]  <1>
   173 000001F4 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   174                              <1> 	
   175 000001FB 678807              <1> 	mov [edi] , al
   176                              <1> 	
   177 000001FE BF[87010000]        <1> 	mov edi , vV_output_buffer
   178 00000203 B801000000          <1> 	mov eax , 1
   179                              <1> 	
   180 00000208 C3                  <1> 	ret	
   181                              <1> 	
   182                              <1> vV_io_read_packed_char:
   183                              <1> 
   184                              <1> 	vV_pop eax
   184                              <2> 
   184 00000209 4983EF04            <2>  sub vV_sp , 4
   184 0000020D 418B07              <2>  mov %1 , [vV_sp]
   184                              <2> 
   185                              <1> 	
   186 00000210 48BF-               <1> 	mov rdi , vV_output_buffer
   186 00000212 [8701000000000000]  <1>
   187 0000021A 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   188                              <1> 	
   189 00000221 678907              <1> 	mov [edi] , eax
   190                              <1> 	
   191 00000224 BF[87010000]        <1> 	mov edi , vV_output_buffer
   192 00000229 B804000000          <1> 	mov eax , 4	
   193                              <1> 	
   194 0000022E C3                  <1> 	ret
   195                              <1> 		
   196                              <1> ;-------------------------------------------------------------------------------
   197                              <1> ;-------------------------------------------------------------------------------
   198                              <1> ;-------------------------------------------------------------------------------
   199                              <1> ;-------------------------------------------------------------------------------
   200                              <1> ;-------------------------------------------------------------------------------
   201                              <1> ;-------------------------------------------------------------------------------
   202                              <1> ;-------------------------------------------------------------------------------
   203                              <1> 	
   204                              <1> vV_io_read:
   205                              <1> 
   206                              <1> 								
   207 0000022F 48BE-               <1> 		mov rsi , vV_input_buffer		;ptr to string destination	
   207 00000231 [8400000000000000]  <1>
   208 00000239 BAFF000000          <1> 		mov edx , vV_input_buffer_size				;string lenght	
   209 0000023E BF00000000          <1> 		mov rdi , 0				;file descriptor, stdin
   210 00000243 B800000000          <1> 		mov rax , 0				; read sysCall
   211                              <1> 		
   212 00000248 0F05                <1> 		syscall
   213                              <1> 	
   214                              <1> ;-------------Buffer_Overflow_Execption  
   215                              <1> 
   216                              <1> 
   217                              <1> 
   218 0000024A 3DFF000000          <1> 		cmp eax , 255				;Check if Buffer Is Full
   219                              <1> 		
   220 0000024F 721F                <1> 			jb .no_overflow
   221                              <1> 			
   222 00000251 803C25[82010000]0A  <1> 		cmp BYTE[vV_input_buffer + vV_input_buffer_size-1] , 0xa	;Check if Buffer end with "\n"
   223                              <1> 		
   224 00000259 7415                <1> 			je .no_overflow
   225                              <1> 		
   226                              <1> 		
   227 0000025B 50                  <1> 			push rax
   228 0000025C 53                  <1> 			push rbx
   229                              <1> 		
   230 0000025D B401                <1> 			mov ah , vV_ERR_IO_I_OVERFLOW
   231 0000025F 6683C800            <1> 			or ax , 0
   232 00000263 4831DB              <1> 			xor rbx , rbx
   233 00000266 4889F3              <1> 			mov rbx , rsi
   234                              <1> 		
   235 00000269 E803FEFFFF          <1> 			call vV_error
   236                              <1> 		
   237 0000026E 5B                  <1> 			pop rbx
   238 0000026F 58                  <1> 			pop rax
   239                              <1> 		
   240                              <1> 			;ret
   241                              <1> 		
   242                              <1> 		.no_overflow:
   243                              <1> 		
   244 00000270 C3                  <1> 			ret
   245                              <1> 		
   246                              <1> 		
   247                              <1> 	
   248                              <1> 	
   249                              <1> vV_io_get_default:
   250                              <1> 
   251 00000271 41BA[11030000]      <1> 	mov r10d , vV_ascii_as_dec			;TODO: default settings
   252 00000277 E801000000          <1> 	call vV_io_get
   253 0000027C C3                  <1> 	ret
   254                              <1> 	
   255                              <1> 	
   256                              <1> vV_io_get:						;convert inputed value to 
   257                              <1> 							;32bit int, push it on
   258                              <1> 							;the stack
   259 0000027D E8ADFFFFFF          <1> 	call vV_io_read
   260                              <1> 		
   261                              <1> ;----------------------------------------------	
   262                              <1> 
   263 00000282 53                  <1> 	push rbx				;Save rbx (conversion uses it) 
   264                              <1> 
   265 00000283 89C3                <1> 		mov ebx , eax 			;send char count by ebx
   266 00000285 31FF                <1> 		xor edi , edi 			;zero out counter
   267 00000287 BE[84000000]        <1> 		mov esi , vV_input_buffer	;Set source to I_buffer
   268                              <1> 		
   269                              <1> 
   270 0000028C 41FFD2              <1> 		call r10
   271                              <1> 		
   272 0000028F 5B                  <1> 	pop rbx
   273                              <1> 	
   274                              <1> 		vV_push eax
   274                              <2> 
   274 00000290 418907              <2>  mov DWORD[vV_sp] , %1
   274 00000293 4983C704            <2>  add vV_sp , 4
   274                              <2> 
   275                              <1> 		
   276 00000297 C3                  <1> 		ret
   277                              <1> 
   278                              <1> 
   279                              <1> ;-------------------------------------------------------------------------------
   280                              <1> ;-------------------------------------------------------------------------------
   281                              <1> 
   282                              <1> 
   283                              <1> vV_io_get_char:
   284                              <1> 
   285                              <1> 
   286 00000298 E892FFFFFF          <1> 	call vV_io_read
   287                              <1> 	
   288 0000029D 31D2                <1> 	xor edx , edx
   289                              <1> 	
   290 0000029F 8A1425[84000000]    <1> 	mov dl , [vV_input_buffer]
   291                              <1> 	
   292                              <1> 	vV_push edx
   292                              <2> 
   292 000002A6 418917              <2>  mov DWORD[vV_sp] , %1
   292 000002A9 4983C704            <2>  add vV_sp , 4
   292                              <2> 
   293                              <1> 	
   294 000002AD C3                  <1> 	ret
   295                              <1> 	
   296                              <1> vV_io_get_packed_char:
   297                              <1> 
   298 000002AE C70425[84000000]00- <1> 	mov DWORD [vV_input_buffer] , 0
   298 000002B6 000000              <1>
   299                              <1> 
   300 000002B9 E871FFFFFF          <1> 	call vV_io_read
   301                              <1> 	
   302 000002BE 31D2                <1> 	xor edx , edx
   303                              <1> 	
   304 000002C0 8B1425[84000000]    <1> 	mov edx, [vV_input_buffer]
   305                              <1> 	
   306                              <1> 	vV_push edx
   306                              <2> 
   306 000002C7 418917              <2>  mov DWORD[vV_sp] , %1
   306 000002CA 4983C704            <2>  add vV_sp , 4
   306                              <2> 
   307                              <1> 	
   308 000002CE C3                  <1> 	ret
   309                              <1> 	
   310                              <1> 		
   311                              <1> 		
   312                              <1> 
   313                              <1> 
   314                              <1> 
     8                                  %include "vVc/assembly/w_runtime/vV_ascii.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> segment .text 
     4                              <1> 
     5                              <1> 
     6                              <1> 
     7                              <1> 
     8                              <1> vV_ascii_as_hex2:						;Jumped to from parse_num OR called
     9                              <1> 								;use edi as counter/offset in string !Set if direct call
    10                              <1> 								;use esi as source string
    11                              <1> 								;concatenate result in eax
    12                              <1> 								;parse digit in cl
    13                              <1> 								
    14                              <1> 								;use r8 for base
    15                              <1> 								;use r9 for max_value
    16                              <1> 								
    17                              <1> 							
    18                              <1> 	;mov r8 , 16	
    19                              <1> 	
    20                              <1> 	.start_loop:
    21                              <1> 	
    22 000002CF 678A0C3E            <1> 		mov cl , [esi + edi]
    23                              <1> 	
    24                              <1> 		
    25 000002D3 80F930              <1> 		cmp cl , 48
    26                              <1> 		
    27 000002D6 7265                <1> 			jb vV_ascii_unvalid
    28                              <1> 			
    29 000002D8 80F93A              <1> 		cmp cl , 58
    30                              <1> 		
    31 000002DB 720D                <1> 			jb .pass_int
    32                              <1> 			
    33 000002DD 80F966              <1> 			cmp cl , 'f'
    34                              <1> 			
    35 000002E0 775B                <1> 				ja vV_ascii_unvalid
    36                              <1> 			
    37 000002E2 80F961              <1> 			cmp cl , 'a'
    38                              <1> 			
    39 000002E5 7256                <1> 				jb vV_ascii_unvalid
    40                              <1> 				
    41 000002E7 80E927              <1> 			sub cl , 39
    42                              <1> 				
    43                              <1> 			
    44                              <1> 		.pass_int:	
    45                              <1> 			
    46 000002EA 80E930              <1> 		sub cl , '0'
    47                              <1> 		
    48                              <1> 		
    49                              <1> 		
    50 000002ED 31D2                <1> 		xor edx , edx
    51                              <1> 		
    52 000002EF F8                  <1> 		clc
    53                              <1> 		
    54 000002F0 41F7E0              <1> 		mul r8d
    55                              <1> 		
    56 000002F3 725D                <1> 		jc vV_ascii_overflow
    57                              <1> 		
    58 000002F5 01C8                <1> 		add eax , ecx
    59                              <1> 		
    60                              <1> 		.pass02:
    61                              <1> 		
    62 000002F7 FFC7                <1> 		inc edi
    63                              <1> 		
    64 000002F9 39DF                <1> 		cmp edi , ebx
    65                              <1> 		
    66 000002FB 72D2                <1> 		jb .start_loop
    67                              <1> 
    68                              <1> 		
    69 000002FD C3                  <1> 		ret	
    70                              <1> 		
    71                              <1> 		
    72                              <1> ;
    73                              <1> ;				ebx		esi
    74                              <1> ;	ascii_to_format( buffer_size , buffer_adress ) 
    75                              <1> ;		
    76                              <1> ;
    77                              <1> ;	set:	rcx,rdx (rax) to 0
    78                              <1> ;		r8,r9
    79                              <1> ;		
    80                              <1> ;	call: specialized dexodefunction
    81                              <1> 		
    82                              <1> vV_ascii_as_hex:
    83                              <1> 	
    84 000002FE FFCB                <1> 	dec ebx
    85 00000300 41B810000000        <1> 	mov r8 , 16	
    86 00000306 4831C0              <1> 	xor rax , rax 		;(just in case not switching from dec mode)			
    87 00000309 4831C9              <1> 	xor rcx , rcx
    88 0000030C 4831D2              <1> 	xor rdx , rdx
    89 0000030F EBBE                <1> 	jmp vV_ascii_as_hex2
    90                              <1> 
    91                              <1> vV_ascii_as_dec:
    92                              <1> 
    93 00000311 FFCB                <1> 	dec ebx
    94 00000313 41B80A000000        <1> 	mov r8 , 10			
    95 00000319 41B93A000000        <1> 	mov r9 , 58
    96 0000031F 4831C9              <1> 	xor rcx , rcx
    97 00000322 4831D2              <1> 	xor rdx , rdx
    98 00000325 EB5E                <1> 	jmp vV_ascii_as_decbin
    99                              <1> 
   100                              <1> vV_ascii_as_bin:
   101                              <1> 
   102 00000327 FFCB                <1> 	dec ebx
   103 00000329 41B802000000        <1> 	mov r8 , 2			
   104 0000032F 41B932000000        <1> 	mov r9 , 50
   105 00000335 4831C9              <1> 	xor rcx , rcx
   106 00000338 4831D2              <1> 	xor rdx , rdx
   107                              <1> 	
   108 0000033B EB48                <1> 	jmp vV_ascii_as_decbin
   109                              <1> 	
   110                              <1> vV_ascii_unvalid:
   111                              <1> 	
   112                              <1> 		;mov rax , 24;	#TODO: Defined Errors code/ data in file
   113                              <1> 		;xor rdx , rdx
   114                              <1> 		;mov dl , cl
   115                              <1> 		
   116                              <1> 		;call w_forced_exit
   117                              <1> 		
   118 0000033D 50                  <1> 		push rax
   119 0000033E 53                  <1> 		push rbx
   120                              <1> 		
   121 0000033F B403                <1> 		mov ah , vV_ERR_IO_I_UNVALID
   122 00000341 6683C800            <1> 		or ax , 0
   123 00000345 4831DB              <1> 		xor rbx , rbx
   124 00000348 88CB                <1> 		mov bl , cl
   125                              <1> 		
   126 0000034A E822FDFFFF          <1> 		call vV_error
   127                              <1> 		
   128 0000034F 5B                  <1> 		pop rbx
   129 00000350 58                  <1> 		pop rax
   130                              <1> 		
   131 00000351 C3                  <1> 		ret
   132                              <1> 		
   133                              <1> 		
   134                              <1> 		
   135                              <1> 		
   136                              <1> vV_ascii_overflow:
   137                              <1> 	
   138 00000352 50                  <1> 		push rax
   139 00000353 53                  <1> 		push rbx
   140                              <1> 		
   141 00000354 4831DB              <1> 		xor rbx , rbx
   142 00000357 4889C3              <1> 		mov rbx , rax
   143                              <1> 		
   144                              <1> 		;or rbx , 0x00010000
   145                              <1> 		
   146 0000035A B401                <1> 		mov ah , vV_ERR_IO_I_OVERFLOW
   147 0000035C 6683C800            <1> 		or ax , 0
   148                              <1> 		
   149                              <1> 		
   150                              <1> 		
   151 00000360 E80CFDFFFF          <1> 		call vV_error
   152                              <1> 		
   153 00000365 5B                  <1> 		pop rbx
   154 00000366 58                  <1> 		pop rax
   155                              <1> 		
   156                              <1> 		;TODO: Maybe use vV_error return value for decision making
   157                              <1> 		
   158 00000367 B8FFFFFFFF          <1> 		mov eax , -1
   159                              <1> 		
   160 0000036C C3                  <1> 		ret
   161                              <1> 		
   162                              <1> 		
   163                              <1> vV_ascii_change_to_hex:
   164                              <1> 		
   165 0000036D 83F800              <1> 		cmp eax , 0
   166                              <1> 			
   167 00000370 75CB                <1> 			jne vV_ascii_unvalid
   168                              <1> 			
   169 00000372 41B810000000        <1> 		mov r8 , 16
   170 00000378 4831C9              <1> 		xor rcx , rcx
   171 0000037B 4831C0              <1> 		xor rax ,rax
   172                              <1> 				
   173 0000037E FFC7                <1> 		inc edi
   174 00000380 E94AFFFFFF          <1> 		jmp vV_ascii_as_hex2		
   175                              <1> 		
   176                              <1> 	
   177                              <1> 
   178                              <1> 
   179                              <1> vV_ascii_as_decbin:						;ebx: number of char to read
   180                              <1> 
   181                              <1> 	
   182                              <1> 
   183                              <1> 								;use edi as counter/offset in string
   184                              <1> 								;concatenate result in eax
   185                              <1> 								;parse digit in cl
   186                              <1> 								
   187                              <1> 								;use r8 for base
   188                              <1> 								;use r9 for max_value					
   189                              <1> 								;itou
   190                              <1> 	;xor edi, edi			;should be set by caller
   191 00000385 4831C0              <1> 	xor rax , rax
   192                              <1> 	
   193 00000388 4831C9              <1> 	xor rcx , rcx
   194                              <1> 	
   195 0000038B 4831D2              <1> 	xor rdx , rdx
   196                              <1> 	
   197                              <1> 	
   198                              <1> 	.start_loop:
   199                              <1> 	
   200 0000038E 678A0C3E            <1> 		mov cl , [esi + edi]
   201                              <1> 		
   202                              <1> 		
   203 00000392 80F962              <1> 		cmp cl , 'b'										
   204 00000395 7513                <1> 			jne .pass01
   205                              <1> 		
   206                              <1> 		.format_change:
   207                              <1> 			
   208 00000397 83F800              <1> 			cmp eax , 0
   209                              <1> 			
   210 0000039A 75A1                <1> 				jne vV_ascii_unvalid
   211                              <1> 				
   212 0000039C 41B802000000        <1> 			mov r8 , 2
   213                              <1> 			
   214 000003A2 41B932000000        <1> 			mov r9 , 50
   215                              <1> 	
   216 000003A8 EB26                <1> 			jmp .pass02
   217                              <1> 		
   218                              <1> 		
   219                              <1> 	
   220                              <1> 		.pass01:
   221                              <1> 		
   222 000003AA 80F968              <1> 		cmp cl , 'h'											
   223 000003AD 74BE                <1> 			je vV_ascii_change_to_hex
   224 000003AF 80F978              <1> 		cmp cl , 'x'											
   225 000003B2 74B9                <1> 			je vV_ascii_change_to_hex
   226                              <1> 			
   227                              <1> 			
   228 000003B4 4438C9              <1> 		cmp cl , r9b
   229                              <1> 		
   230 000003B7 7384                <1> 			jae vV_ascii_unvalid
   231                              <1> 		
   232 000003B9 80F930              <1> 		cmp cl , 48
   233                              <1> 		
   234 000003BC 0F827BFFFFFF        <1> 			jb vV_ascii_unvalid
   235                              <1> 			
   236                              <1> 		
   237                              <1> 			
   238 000003C2 80E930              <1> 		sub cl , 48
   239                              <1> 		
   240 000003C5 4831D2              <1> 		xor rdx , rdx
   241 000003C8 F8                  <1> 		clc
   242                              <1> 		
   243 000003C9 41F7E0              <1> 		mul r8d
   244                              <1> 		
   245 000003CC 7284                <1> 		jc vV_ascii_overflow
   246                              <1> 		
   247 000003CE 01C8                <1> 		add eax , ecx
   248                              <1> 		
   249                              <1> 		.pass02:
   250                              <1> 		
   251 000003D0 FFC7                <1> 		inc edi
   252                              <1> 		
   253 000003D2 39DF                <1> 		cmp edi , ebx
   254                              <1> 		
   255 000003D4 72B8                <1> 		jb .start_loop
   256                              <1> 		
   257                              <1> 		
   258 000003D6 C3                  <1> 		ret			; result should be in eax
   259                              <1> 		
   260                              <1> 
   261                              <1> 	
   262                              <1> ;------------------------------------------------------------------------------------------
   263                              <1> ;------------------------------------------------------------------------------------------
   264                              <1> 
   265                              <1> 
   266                              <1> 
   267                              <1> vV_ascii_int_to_hex:					;value in eax
   268                              <1> 						;dest in rdi
   269                              <1> 
   270                              <1> 
   271                              <1> 
   272 000003D7 31C9                <1> 	xor ecx , ecx	
   273                              <1> 	
   274 000003D9 BE10000000          <1> 	mov esi , 16
   275                              <1> 
   276                              <1> 	
   277                              <1> 	.loop01:
   278                              <1> 	
   279 000003DE 4831D2              <1> 		xor rdx , rdx
   280                              <1> 		
   281 000003E1 F7F6                <1> 		div esi
   282                              <1> 		
   283                              <1> 		
   284 000003E3 80FA0A              <1> 		cmp dl , 10
   285                              <1> 		
   286 000003E6 7203                <1> 		jb .dec
   287                              <1> 		
   288 000003E8 80C207              <1> 			add dl , 7
   289                              <1> 		
   290                              <1> 		.dec:
   291                              <1> 		
   292 000003EB 80C230              <1> 			add dl , '0'
   293                              <1> 		
   294                              <1> 		
   295 000003EE 52                  <1> 		push rdx
   296                              <1> 		
   297 000003EF FFC1                <1> 		inc ecx
   298                              <1> 		
   299 000003F1 39F0                <1> 		cmp eax , esi
   300                              <1> 		
   301 000003F3 73E9                <1> 		jae .loop01
   302                              <1> 	
   303                              <1> 	
   304 000003F5 3C0A                <1> 	cmp al , 10
   305                              <1> 		
   306 000003F7 7202                <1> 		jb .dec2
   307                              <1> 		
   308 000003F9 0407                <1> 			add al , 7
   309                              <1> 		
   310                              <1> 		.dec2:
   311                              <1> 		
   312 000003FB 0430                <1> 			add al , '0'	
   313 000003FD 8807                <1> 	mov [rdi] , al
   314                              <1> 	
   315 000003FF EB1B                <1> 	jmp vV_ascii_pop_digits
   316                              <1> 		
   317                              <1> 	
   318                              <1> 	
   319                              <1> 	
   320                              <1> vV_ascii_int_to_dec:					;value in eax
   321                              <1> 						;dest in rdi
   322                              <1> 						;max_dest_size in r9d
   323                              <1> 
   324                              <1> 
   325                              <1> 
   326 00000401 31C9                <1> 	xor ecx , ecx	
   327                              <1> 	
   328 00000403 BE0A000000          <1> 	mov esi , 10
   329                              <1> 	
   330                              <1> 
   331                              <1> 
   332                              <1> 	
   333                              <1> 	.loop01:
   334                              <1> 	
   335 00000408 4831D2              <1> 		xor rdx , rdx
   336                              <1> 		
   337 0000040B F7F6                <1> 		div esi
   338                              <1> 		
   339                              <1> 		
   340 0000040D 80C230              <1> 		add dl , '0'
   341 00000410 52                  <1> 		push rdx
   342                              <1> 		
   343 00000411 FFC1                <1> 		inc ecx
   344                              <1> 		
   345 00000413 83F80A              <1> 		cmp eax , 10
   346                              <1> 		
   347 00000416 73F0                <1> 		jae .loop01
   348                              <1> 	
   349 00000418 0430                <1> 	add al , '0'	
   350 0000041A 8807                <1> 	mov [rdi] , al
   351                              <1> 		
   352                              <1> 	
   353                              <1> 		
   354                              <1> vV_ascii_pop_digits:			; Need nb of digits currently on stack(ecx)
   355                              <1> 						;dest in rdi
   356 0000041C 41B801000000        <1> 		mov r8d , 1
   357 00000422 FFC1                <1> 		inc ecx
   358                              <1> 		
   359 00000424 4439C9              <1> 		cmp ecx , r9d
   360                              <1> 		
   361 00000427 7219                <1> 		jb .loopstart
   362                              <1> 		
   363                              <1> 	
   364 00000429 50                  <1> 			push rax
   365 0000042A 53                  <1> 			push rbx
   366                              <1> 		
   367 0000042B B410                <1> 			mov ah , vV_ERR_MEMORY_BUFFER_LIMIT
   368 0000042D 6683C800            <1> 			or ax , 0
   369 00000431 4831DB              <1> 			xor rbx , rbx
   370 00000434 89FB                <1> 			mov ebx , edi
   371                              <1> 		
   372 00000436 E836FCFFFF          <1> 			call vV_error
   373                              <1> 		
   374 0000043B 5B                  <1> 			pop rbx
   375 0000043C 58                  <1> 			pop rax
   376                              <1> 			
   377 0000043D 4489C9              <1> 			mov ecx , r9d		;Should protect memory..
   378 00000440 FFC9                <1> 			dec ecx		;will need testing
   379                              <1> 		
   380                              <1> 						
   381                              <1> 		.loopstart:
   382                              <1> 		
   383 00000442 5A                  <1> 			pop rdx
   384 00000443 6742881407          <1> 			mov BYTE[edi + r8d] , dl
   385 00000448 41FFC0              <1> 			inc r8d
   386                              <1> 			
   387 0000044B 4139C8              <1> 			cmp r8d , ecx
   388                              <1> 		
   389 0000044E 72F2                <1> 		jb .loopstart
   390                              <1> 	
   391                              <1> 	
   392 00000450 89C8                <1> 		mov eax , ecx
   393                              <1> 		
   394 00000452 C3                  <1> 		ret	
   395                              <1> 	
   396                              <1> 	
   397                              <1> vV_ascii_int_to_bin:					;value in eax, 
   398                              <1> 							
   399                              <1> 
   400                              <1> 
   401 00000453 31C9                <1> 	xor ecx , ecx
   402                              <1> 	
   403                              <1> 	
   404                              <1> 	.loop01:
   405                              <1> 	
   406                              <1> 		
   407 00000455 D1E8                <1> 		shr eax , 1
   408                              <1> 		
   409 00000457 7205                <1> 		jc .one
   410                              <1> 		
   411 00000459 B230                <1> 			mov dl , '0'
   412 0000045B 52                  <1> 			push rdx
   413                              <1> 			
   414 0000045C EB03                <1> 		jmp .next
   415                              <1> 		.one:
   416                              <1> 			
   417 0000045E B231                <1> 			mov dl , '1'
   418 00000460 52                  <1> 			push rdx
   419                              <1> 		
   420                              <1> 		.next:
   421                              <1> 		
   422 00000461 FFC1                <1> 		inc ecx
   423                              <1> 		
   424 00000463 83F801              <1> 		cmp eax , 1
   425                              <1> 		
   426 00000466 77ED                <1> 		ja .loop01
   427                              <1> 	
   428 00000468 0430                <1> 	add al , '0'	
   429 0000046A 8807                <1> 	mov [rdi] , al
   430                              <1> 	
   431 0000046C EBAE                <1> 	jmp vV_ascii_pop_digits
   432                              <1> 	
   433                              <1> 	
   434                              <1> ;Will need a special version for String stack
   435                              <1> 
   436                              <1> 
   437                              <1> 
   438                              <1> 
   439                              <1> 
   440                              <1> 
   441                              <1> 
     9                                  %include "w_samples/assembly/firstapp_vars.was"	
     1                              <1>  segment .data 
     2                              <1> 
     3                              <1>  i_global:
     4                              <1>  segment .bss 
     5                              <1> 
     6                              <1> 	u_global:
    10                                  %include "vVc/assembly/w_runtime/vV_system90.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	
     5                              <1> 	
     6                              <1> 	stacks: 
     7                              <1> 
     8                              <1> 
     9 00000286 <res 00040000>      <1> 	string_stack_start: resb 262144
    10                              <1> 
    11                              <1> 
    12                              <1> 	
    13                              <1> 	
    14                              <1> 						
    15 00040286 <res 00020000>      <1> 	fake_stack_start: resb 131072
    11                                  
    12                                  
    13                                  
    14                                  global w_entry_point
    15                                  
    16                                  
    17                                  
    18                                  segment .text 
    19                                  
    20                                  
    21                                  xprint:		
    22 0000046E 55                      	push rbp	
    23 0000046F 4889E5                  	mov rbp , rsp	
    24                                  
    25                                  ;------Setup Phase
    26                                  
    27                                  ;------Init Phase
    28                                  
    29                                  .tailcall:		;Body Section	
    30                                  
    31                                  
    32                                  	wblock_0:		
    33                                  
    34                                  ;------------------------------------------------------
    35                                  
    36                                  
    37                                   ;OpADR: [0]  ; SWAP opcode 
    38                                  
    39                                  
    40                                  	vV_swap		
    40                              <1> 
    40 00000472 418B57FC            <1>  mov edx , [vV_sp-4]
    40 00000476 418B47F8            <1>  mov eax , [vV_sp-8]
    40 0000047A 418957F8            <1>  mov [vV_sp-8] , edx
    40 0000047E 418947FC            <1>  mov [vV_sp-4] , eax
    40                              <1> 
    41                                  
    42                                  
    43                                   ;OpADR: [1]  ; BUFF_OUT opcode (9)			
    44                                  
    45                                  
    46 00000482 E851FDFFFF              	call vV_io_out_packed_char_buffer				
    47                                  						
    48                                  
    49                                   ;OpADR: [2]  ; PUSH opcode 
    50                                  
    51                                  	vV_push 1 
    51                              <1> 
    51 00000487 41C70701000000      <1>  mov DWORD[vV_sp] , %1
    51 0000048E 4983C704            <1>  add vV_sp , 4
    51                              <1> 
    52                                  
    53                                  
    54                                   ;OpADR: [3]  ; SUB opcode 					
    55                                  
    56 00000492 418B47F8                	mov eax , vV_2nd			
    57 00000496 412B47FC                	sub eax , vV_top			
    58 0000049A 418947F8                	mov vV_2nd, eax			
    59                                  
    60                                  	vV_dec_sp 1		
    60                              <1> 
    60 0000049E 4983EF04            <1>  sub vV_sp , cell(%1)
    60                              <1> 
    61                                  
    62                                   ;OpADR: [4]  ; DUP opcode (1)			
    63                                  
    64                                  	vV_dup 1			
    64                              <1> 
    64 000004A2 B901000000          <1>  mov ecx , %1
    64 000004A7 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
    64 000004AB 4C89FF              <1>  mov rdi , vV_sp
    64                              <1> 
    64 000004AE F3A5                <1>  rep movsd
    64                              <1> 
    64 000004B0 4983C704            <1>  add vV_sp , cell(%1)
    64                              <1> 
    65                                  
    66                                  
    67                                   ;OpADR: [5]  ; PUSH opcode 
    68                                  
    69                                  	vV_push 0 
    69                              <1> 
    69 000004B4 41C70700000000      <1>  mov DWORD[vV_sp] , %1
    69 000004BB 4983C704            <1>  add vV_sp , 4
    69                              <1> 
    70                                  
    71                                  
    72                                   ;OpADR: [6]  ; MORE opcode					
    73                                  
    74 000004BF 418B47FC                	mov eax , vV_top			
    75 000004C3 413947F8                	cmp DWORD vV_2nd , eax			
    76                                  
    77 000004C7 76(0B)                  	jbe short 0xb				
    78                                  
    79 000004C9 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
    80                                  
    81 000004D1 EB(09)                  	jmp short 0x9				
    82                                  
    83 000004D3 41C747F800000000        			mov DWORD vV_2nd , 0	
    84                                  
    85                                  	vV_dec_sp 1				
    85                              <1> 
    85 000004DB 4983EF04            <1>  sub vV_sp , cell(%1)
    85                              <1> 
    86                                  
    87                                   ;OpADR: [7]  ; WHILE opcode					
    88                                  
    89                                  	vV_dec_sp 1				
    89                              <1> 
    89 000004DF 4983EF04            <1>  sub vV_sp , cell(%1)
    89                              <1> 
    90 000004E3 41830F00                	or DWORD[vV_sp] , 0			
    91 000004E7 7589                    	jne wblock_0		
    92                                  
    93                                   ;OpADR: [8]  ; FLUSH opcode					
    94                                  
    95 000004E9 E81EFCFFFF              		call vV_io_flush	
    96                                  
    97                                   ;OpADR: [9]  ; DROP opcode 
    98                                  
    99 000004EE 4983EF04                	sub vV_sp , 4	
   100                                  
   101                                   ;OpADR: [10]  ; End of func opcode					
   102                                  
   103                                  
   104                                  ;------Cleanup Phase
   105                                  
   106                                  ;------frame restore Phase
   107 000004F2 4889EC                  	mov rsp , rbp	
   108 000004F5 5D                      	pop rbp	
   109 000004F6 C3                      	ret	
   110                                  quit_cmd:		
   111 000004F7 55                      	push rbp	
   112 000004F8 4889E5                  	mov rbp , rsp	
   113                                  
   114                                  ;------Setup Phase
   115                                  
   116                                  ;------Init Phase
   117                                  
   118                                  .tailcall:		;Body Section	
   119                                  
   120                                   ;OpADR: [11]  ; PUSH opcode 
   121                                  
   122                                  	vV_push 1953068401 
   122                              <1> 
   122 000004FB 41C70771756974      <1>  mov DWORD[vV_sp] , %1
   122 00000502 4983C704            <1>  add vV_sp , 4
   122                              <1> 
   123                                  
   124                                  
   125                                   ;OpADR: [12]  ; End of func opcode					
   126                                  
   127                                  
   128                                  ;------Cleanup Phase
   129                                  
   130                                  ;------frame restore Phase
   131 00000506 4889EC                  	mov rsp , rbp	
   132 00000509 5D                      	pop rbp	
   133 0000050A C3                      	ret	
   134                                  help_cmd:		
   135 0000050B 55                      	push rbp	
   136 0000050C 4889E5                  	mov rbp , rsp	
   137                                  
   138                                  ;------Setup Phase
   139                                  
   140                                  ;------Init Phase
   141                                  
   142                                  .tailcall:		;Body Section	
   143                                  
   144                                   ;OpADR: [13]  ; PUSH opcode 
   145                                  
   146                                  	vV_push 1886152040 
   146                              <1> 
   146 0000050F 41C70768656C70      <1>  mov DWORD[vV_sp] , %1
   146 00000516 4983C704            <1>  add vV_sp , 4
   146                              <1> 
   147                                  
   148                                  
   149                                   ;OpADR: [14]  ; End of func opcode					
   150                                  
   151                                  
   152                                  ;------Cleanup Phase
   153                                  
   154                                  ;------frame restore Phase
   155 0000051A 4889EC                  	mov rsp , rbp	
   156 0000051D 5D                      	pop rbp	
   157 0000051E C3                      	ret	
   158                                  calc_cmd:		
   159 0000051F 55                      	push rbp	
   160 00000520 4889E5                  	mov rbp , rsp	
   161                                  
   162                                  ;------Setup Phase
   163                                  
   164                                  ;------Init Phase
   165                                  
   166                                  .tailcall:		;Body Section	
   167                                  
   168                                   ;OpADR: [15]  ; PUSH opcode 
   169                                  
   170                                  	vV_push 1668047203 
   170                              <1> 
   170 00000523 41C70763616C63      <1>  mov DWORD[vV_sp] , %1
   170 0000052A 4983C704            <1>  add vV_sp , 4
   170                              <1> 
   171                                  
   172                                  
   173                                   ;OpADR: [16]  ; End of func opcode					
   174                                  
   175                                  
   176                                  ;------Cleanup Phase
   177                                  
   178                                  ;------frame restore Phase
   179 0000052E 4889EC                  	mov rsp , rbp	
   180 00000531 5D                      	pop rbp	
   181 00000532 C3                      	ret	
   182                                  frmt_cmd:		
   183 00000533 55                      	push rbp	
   184 00000534 4889E5                  	mov rbp , rsp	
   185                                  
   186                                  ;------Setup Phase
   187                                  
   188                                  ;------Init Phase
   189                                  
   190                                  .tailcall:		;Body Section	
   191                                  
   192                                   ;OpADR: [17]  ; PUSH opcode 
   193                                  
   194                                  	vV_push 1953329766 
   194                              <1> 
   194 00000537 41C70766726D74      <1>  mov DWORD[vV_sp] , %1
   194 0000053E 4983C704            <1>  add vV_sp , 4
   194                              <1> 
   195                                  
   196                                  
   197                                   ;OpADR: [18]  ; End of func opcode					
   198                                  
   199                                  
   200                                  ;------Cleanup Phase
   201                                  
   202                                  ;------frame restore Phase
   203 00000542 4889EC                  	mov rsp , rbp	
   204 00000545 5D                      	pop rbp	
   205 00000546 C3                      	ret	
   206                                  help:		
   207 00000547 55                      	push rbp	
   208 00000548 4889E5                  	mov rbp , rsp	
   209                                  
   210                                  ;------Setup Phase
   211                                  
   212                                  ;------Init Phase
   213                                  
   214                                  .tailcall:		;Body Section	
   215                                  
   216                                   ;OpADR: [19]  ; Function Call					
   217                                  
   218 0000054B E8A7FFFFFF              		call quit_cmd			
   219                                  
   220                                   ;OpADR: [20]  ; Function Call					
   221                                  
   222 00000550 E8B6FFFFFF              		call help_cmd			
   223                                  
   224                                   ;OpADR: [21]  ; Function Call					
   225                                  
   226 00000555 E8C5FFFFFF              		call calc_cmd			
   227                                  
   228                                   ;OpADR: [22]  ; Function Call					
   229                                  
   230 0000055A E8D4FFFFFF              		call frmt_cmd			
   231                                  
   232                                   ;OpADR: [23]  ; BUFF_OUT opcode (9)			
   233                                  
   234                                  
   235 0000055F E874FCFFFF              	call vV_io_out_packed_char_buffer				
   236                                  						
   237                                  
   238                                   ;OpADR: [24]  ; PUSH opcode 
   239                                  
   240                                  	vV_push 1346983712 
   240                              <1> 
   240 00000564 41C70720574950      <1>  mov DWORD[vV_sp] , %1
   240 0000056B 4983C704            <1>  add vV_sp , 4
   240                              <1> 
   241                                  
   242                                  
   243                                   ;OpADR: [25]  ; BUFF_OUT opcode (9)			
   244                                  
   245                                  
   246 0000056F E864FCFFFF              	call vV_io_out_packed_char_buffer				
   247                                  						
   248                                  
   249                                   ;OpADR: [26]  ; FLUSH opcode					
   250                                  
   251 00000574 E893FBFFFF              		call vV_io_flush	
   252                                  
   253                                   ;OpADR: [27]  ; BUFF_OUT opcode (9)			
   254                                  
   255                                  
   256 00000579 E85AFCFFFF              	call vV_io_out_packed_char_buffer				
   257                                  						
   258                                  
   259                                   ;OpADR: [28]  ; PUSH opcode 
   260                                  
   261                                  	vV_push 541806368 
   261                              <1> 
   261 0000057E 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   261 00000585 4983C704            <1>  add vV_sp , 4
   261                              <1> 
   262                                  
   263                                  
   264                                   ;OpADR: [29]  ; BUFF_OUT opcode (9)			
   265                                  
   266                                  
   267 00000589 E84AFCFFFF              	call vV_io_out_packed_char_buffer				
   268                                  						
   269                                  
   270                                   ;OpADR: [30]  ; FLUSH opcode					
   271                                  
   272 0000058E E879FBFFFF              		call vV_io_flush	
   273                                  
   274                                   ;OpADR: [31]  ; BUFF_OUT opcode (9)			
   275                                  
   276                                  
   277 00000593 E840FCFFFF              	call vV_io_out_packed_char_buffer				
   278                                  						
   279                                  
   280                                   ;OpADR: [32]  ; PUSH opcode 
   281                                  
   282                                  	vV_push 541806368 
   282                              <1> 
   282 00000598 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   282 0000059F 4983C704            <1>  add vV_sp , 4
   282                              <1> 
   283                                  
   284                                  
   285                                   ;OpADR: [33]  ; BUFF_OUT opcode (9)			
   286                                  
   287                                  
   288 000005A3 E830FCFFFF              	call vV_io_out_packed_char_buffer				
   289                                  						
   290                                  
   291                                   ;OpADR: [34]  ; FLUSH opcode					
   292                                  
   293 000005A8 E85FFBFFFF              		call vV_io_flush	
   294                                  
   295                                   ;OpADR: [35]  ; BUFF_OUT opcode (9)			
   296                                  
   297                                  
   298 000005AD E826FCFFFF              	call vV_io_out_packed_char_buffer				
   299                                  						
   300                                  
   301                                   ;OpADR: [36]  ; PUSH opcode 
   302                                  
   303                                  	vV_push 541806368 
   303                              <1> 
   303 000005B2 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   303 000005B9 4983C704            <1>  add vV_sp , 4
   303                              <1> 
   304                                  
   305                                  
   306                                   ;OpADR: [37]  ; BUFF_OUT opcode (9)			
   307                                  
   308                                  
   309 000005BD E816FCFFFF              	call vV_io_out_packed_char_buffer				
   310                                  						
   311                                  
   312                                   ;OpADR: [38]  ; FLUSH opcode					
   313                                  
   314 000005C2 E845FBFFFF              		call vV_io_flush	
   315                                  
   316                                   ;OpADR: [39]  ; End of func opcode					
   317                                  
   318                                  
   319                                  ;------Cleanup Phase
   320                                  
   321                                  ;------frame restore Phase
   322 000005C7 4889EC                  	mov rsp , rbp	
   323 000005CA 5D                      	pop rbp	
   324 000005CB C3                      	ret	
   325                                  welcome_msg:		
   326 000005CC 55                      	push rbp	
   327 000005CD 4889E5                  	mov rbp , rsp	
   328                                  
   329                                  ;------Setup Phase
   330                                  
   331                                  ;------Init Phase
   332                                  
   333                                  .tailcall:		;Body Section	
   334                                  
   335                                   ;OpADR: [40]  ; PUSH opcode 
   336                                  
   337                                  	vV_push 1684890400 
   337                              <1> 
   337 000005D0 41C70720636D64      <1>  mov DWORD[vV_sp] , %1
   337 000005D7 4983C704            <1>  add vV_sp , 4
   337                              <1> 
   338                                  
   339                                  
   340                                   ;OpADR: [41]  ; PUSH opcode 
   341                                  
   342                                  	vV_push 1718558836 
   342                              <1> 
   342 000005DB 41C70774206F66      <1>  mov DWORD[vV_sp] , %1
   342 000005E2 4983C704            <1>  add vV_sp , 4
   342                              <1> 
   343                                  
   344                                  
   345                                   ;OpADR: [42]  ; PUSH opcode 
   346                                  
   347                                  	vV_push 1936288800 
   347                              <1> 
   347 000005E6 41C707206C6973      <1>  mov DWORD[vV_sp] , %1
   347 000005ED 4983C704            <1>  add vV_sp , 4
   347                              <1> 
   348                                  
   349                                  
   350                                   ;OpADR: [43]  ; PUSH opcode 
   351                                  
   352                                  	vV_push 1629516399 
   352                              <1> 
   352 000005F1 41C7076F722061      <1>  mov DWORD[vV_sp] , %1
   352 000005F8 4983C704            <1>  add vV_sp , 4
   352                              <1> 
   353                                  
   354                                  
   355                                   ;OpADR: [44]  ; PUSH opcode 
   356                                  
   357                                  	vV_push 1713381488 
   357                              <1> 
   357 000005FC 41C70770202066      <1>  mov DWORD[vV_sp] , %1
   357 00000603 4983C704            <1>  add vV_sp , 4
   357                              <1> 
   358                                  
   359                                  
   360                                   ;OpADR: [45]  ; PUSH opcode 
   361                                  
   362                                  	vV_push 1818585120 
   362                              <1> 
   362 00000607 41C7072068656C      <1>  mov DWORD[vV_sp] , %1
   362 0000060E 4983C704            <1>  add vV_sp , 4
   362                              <1> 
   363                                  
   364                                  
   365                                   ;OpADR: [46]  ; PUSH opcode 
   366                                  
   367                                  	vV_push 1701869908 
   367                              <1> 
   367 00000612 41C70754797065      <1>  mov DWORD[vV_sp] , %1
   367 00000619 4983C704            <1>  add vV_sp , 4
   367                              <1> 
   368                                  
   369                                  
   370                                   ;OpADR: [47]  ; PUSH opcode 
   371                                  
   372                                  	vV_push 7 
   372                              <1> 
   372 0000061D 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   372 00000624 4983C704            <1>  add vV_sp , 4
   372                              <1> 
   373                                  
   374                                  
   375                                   ;OpADR: [48]  ; End of func opcode					
   376                                  
   377                                  
   378                                  ;------Cleanup Phase
   379                                  
   380                                  ;------frame restore Phase
   381 00000628 4889EC                  	mov rsp , rbp	
   382 0000062B 5D                      	pop rbp	
   383 0000062C C3                      	ret	
   384                                  goodbye_msg:		
   385 0000062D 55                      	push rbp	
   386 0000062E 4889E5                  	mov rbp , rsp	
   387                                  
   388                                  ;------Setup Phase
   389                                  
   390                                  ;------Init Phase
   391                                  
   392                                  .tailcall:		;Body Section	
   393                                  
   394                                   ;OpADR: [49]  ; PUSH opcode 
   395                                  
   396                                  	vV_push 539572768 
   396                              <1> 
   396 00000631 41C707203A2920      <1>  mov DWORD[vV_sp] , %1
   396 00000638 4983C704            <1>  add vV_sp , 4
   396                              <1> 
   397                                  
   398                                  
   399                                   ;OpADR: [50]  ; PUSH opcode 
   400                                  
   401                                  	vV_push 543521122 
   401                              <1> 
   401 0000063C 41C70762796520      <1>  mov DWORD[vV_sp] , %1
   401 00000643 4983C704            <1>  add vV_sp , 4
   401                              <1> 
   402                                  
   403                                  
   404                                   ;OpADR: [51]  ; PUSH opcode 
   405                                  
   406                                  	vV_push 1685024583 
   406                              <1> 
   406 00000647 41C707476F6F64      <1>  mov DWORD[vV_sp] , %1
   406 0000064E 4983C704            <1>  add vV_sp , 4
   406                              <1> 
   407                                  
   408                                  
   409                                   ;OpADR: [52]  ; PUSH opcode 
   410                                  
   411                                  	vV_push 3 
   411                              <1> 
   411 00000652 41C70703000000      <1>  mov DWORD[vV_sp] , %1
   411 00000659 4983C704            <1>  add vV_sp , 4
   411                              <1> 
   412                                  
   413                                  
   414                                   ;OpADR: [53]  ; End of func opcode					
   415                                  
   416                                  
   417                                  ;------Cleanup Phase
   418                                  
   419                                  ;------frame restore Phase
   420 0000065D 4889EC                  	mov rsp , rbp	
   421 00000660 5D                      	pop rbp	
   422 00000661 C3                      	ret	
   423                                  calc_msg01:		
   424 00000662 55                      	push rbp	
   425 00000663 4889E5                  	mov rbp , rsp	
   426                                  
   427                                  ;------Setup Phase
   428                                  
   429                                  ;------Init Phase
   430                                  
   431                                  .tailcall:		;Body Section	
   432                                  
   433                                   ;OpADR: [54]  ; PUSH opcode 
   434                                  
   435                                  	vV_push 540701285 
   435                              <1> 
   435 00000666 41C70765723A20      <1>  mov DWORD[vV_sp] , %1
   435 0000066D 4983C704            <1>  add vV_sp , 4
   435                              <1> 
   436                                  
   437                                  
   438                                   ;OpADR: [55]  ; PUSH opcode 
   439                                  
   440                                  	vV_push 1651340654 
   440                              <1> 
   440 00000671 41C7076E756D62      <1>  mov DWORD[vV_sp] , %1
   440 00000678 4983C704            <1>  add vV_sp , 4
   440                              <1> 
   441                                  
   442                                  
   443                                   ;OpADR: [56]  ; PUSH opcode 
   444                                  
   445                                  	vV_push 543236210 
   445                              <1> 
   445 0000067C 41C70772206120      <1>  mov DWORD[vV_sp] , %1
   445 00000683 4983C704            <1>  add vV_sp , 4
   445                              <1> 
   446                                  
   447                                  
   448                                   ;OpADR: [57]  ; PUSH opcode 
   449                                  
   450                                  	vV_push 1702129221 
   450                              <1> 
   450 00000687 41C707456E7465      <1>  mov DWORD[vV_sp] , %1
   450 0000068E 4983C704            <1>  add vV_sp , 4
   450                              <1> 
   451                                  
   452                                  
   453                                   ;OpADR: [58]  ; PUSH opcode 
   454                                  
   455                                  	vV_push 4 
   455                              <1> 
   455 00000692 41C70704000000      <1>  mov DWORD[vV_sp] , %1
   455 00000699 4983C704            <1>  add vV_sp , 4
   455                              <1> 
   456                                  
   457                                  
   458                                   ;OpADR: [59]  ; End of func opcode					
   459                                  
   460                                  
   461                                  ;------Cleanup Phase
   462                                  
   463                                  ;------frame restore Phase
   464 0000069D 4889EC                  	mov rsp , rbp	
   465 000006A0 5D                      	pop rbp	
   466 000006A1 C3                      	ret	
   467                                  calc_msg02:		
   468 000006A2 55                      	push rbp	
   469 000006A3 4889E5                  	mov rbp , rsp	
   470                                  
   471                                  ;------Setup Phase
   472                                  
   473                                  ;------Init Phase
   474                                  
   475                                  .tailcall:		;Body Section	
   476                                  
   477                                   ;OpADR: [60]  ; PUSH opcode 
   478                                  
   479                                  	vV_push 695495029 
   479                              <1> 
   479 000006A6 41C70775697429      <1>  mov DWORD[vV_sp] , %1
   479 000006AD 4983C704            <1>  add vV_sp , 4
   479                              <1> 
   480                                  
   481                                  
   482                                   ;OpADR: [61]  ; PUSH opcode 
   483                                  
   484                                  	vV_push 1897951092 
   484                              <1> 
   484 000006B1 41C707746F2071      <1>  mov DWORD[vV_sp] , %1
   484 000006B8 4983C704            <1>  add vV_sp , 4
   484                              <1> 
   485                                  
   486                                  
   487                                   ;OpADR: [62]  ; PUSH opcode 
   488                                  
   489                                  	vV_push 544286752 
   489                              <1> 
   489 000006BC 41C70720287120      <1>  mov DWORD[vV_sp] , %1
   489 000006C3 4983C704            <1>  add vV_sp , 4
   489                              <1> 
   490                                  
   491                                  
   492                                   ;OpADR: [63]  ; PUSH opcode 
   493                                  
   494                                  	vV_push 979660385 
   494                              <1> 
   494 000006C7 41C707616E643A      <1>  mov DWORD[vV_sp] , %1
   494 000006CE 4983C704            <1>  add vV_sp , 4
   494                              <1> 
   495                                  
   496                                  
   497                                   ;OpADR: [64]  ; PUSH opcode 
   498                                  
   499                                  	vV_push 1919250543 
   499                              <1> 
   499 000006D2 41C7076F706572      <1>  mov DWORD[vV_sp] , %1
   499 000006D9 4983C704            <1>  add vV_sp , 4
   499                              <1> 
   500                                  
   501                                  
   502                                   ;OpADR: [65]  ; PUSH opcode 
   503                                  
   504                                  	vV_push 543236210 
   504                              <1> 
   504 000006DD 41C70772206120      <1>  mov DWORD[vV_sp] , %1
   504 000006E4 4983C704            <1>  add vV_sp , 4
   504                              <1> 
   505                                  
   506                                  
   507                                   ;OpADR: [66]  ; PUSH opcode 
   508                                  
   509                                  	vV_push 1702129221 
   509                              <1> 
   509 000006E8 41C707456E7465      <1>  mov DWORD[vV_sp] , %1
   509 000006EF 4983C704            <1>  add vV_sp , 4
   509                              <1> 
   510                                  
   511                                  
   512                                   ;OpADR: [67]  ; PUSH opcode 
   513                                  
   514                                  	vV_push 7 
   514                              <1> 
   514 000006F3 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   514 000006FA 4983C704            <1>  add vV_sp , 4
   514                              <1> 
   515                                  
   516                                  
   517                                   ;OpADR: [68]  ; End of func opcode					
   518                                  
   519                                  
   520                                  ;------Cleanup Phase
   521                                  
   522                                  ;------frame restore Phase
   523 000006FE 4889EC                  	mov rsp , rbp	
   524 00000701 5D                      	pop rbp	
   525 00000702 C3                      	ret	
   526                                  calc_msg03:		
   527 00000703 55                      	push rbp	
   528 00000704 4889E5                  	mov rbp , rsp	
   529                                  
   530                                  ;------Setup Phase
   531                                  
   532                                  ;------Init Phase
   533                                  
   534                                  .tailcall:		;Body Section	
   535                                  
   536                                   ;OpADR: [69]  ; PUSH opcode 
   537                                  
   538                                  	vV_push 6581857 
   538                              <1> 
   538 00000707 41C707616E6400      <1>  mov DWORD[vV_sp] , %1
   538 0000070E 4983C704            <1>  add vV_sp , 4
   538                              <1> 
   539                                  
   540                                  
   541                                   ;OpADR: [70]  ; PUSH opcode 
   542                                  
   543                                  	vV_push 1919250543 
   543                              <1> 
   543 00000712 41C7076F706572      <1>  mov DWORD[vV_sp] , %1
   543 00000719 4983C704            <1>  add vV_sp , 4
   543                              <1> 
   544                                  
   545                                  
   546                                   ;OpADR: [71]  ; PUSH opcode 
   547                                  
   548                                  	vV_push 543451500 
   548                              <1> 
   548 0000071D 41C7076C696420      <1>  mov DWORD[vV_sp] , %1
   548 00000724 4983C704            <1>  add vV_sp , 4
   548                              <1> 
   549                                  
   550                                  
   551                                   ;OpADR: [72]  ; PUSH opcode 
   552                                  
   553                                  	vV_push 1635151433 
   553                              <1> 
   553 00000728 41C707496E7661      <1>  mov DWORD[vV_sp] , %1
   553 0000072F 4983C704            <1>  add vV_sp , 4
   553                              <1> 
   554                                  
   555                                  
   556                                   ;OpADR: [73]  ; PUSH opcode 
   557                                  
   558                                  	vV_push 4 
   558                              <1> 
   558 00000733 41C70704000000      <1>  mov DWORD[vV_sp] , %1
   558 0000073A 4983C704            <1>  add vV_sp , 4
   558                              <1> 
   559                                  
   560                                  
   561                                   ;OpADR: [74]  ; End of func opcode					
   562                                  
   563                                  
   564                                  ;------Cleanup Phase
   565                                  
   566                                  ;------frame restore Phase
   567 0000073E 4889EC                  	mov rsp , rbp	
   568 00000741 5D                      	pop rbp	
   569 00000742 C3                      	ret	
   570                                  say_welcome:		
   571 00000743 55                      	push rbp	
   572 00000744 4889E5                  	mov rbp , rsp	
   573                                  
   574                                  ;------Setup Phase
   575                                  
   576                                  ;------Init Phase
   577                                  
   578                                  .tailcall:		;Body Section	
   579                                  
   580                                   ;OpADR: [75]  ; Function Call					
   581                                  
   582 00000747 E880FEFFFF              		call welcome_msg			
   583                                  
   584                                   ;OpADR: [76]  ; Function Call					
   585                                  
   586 0000074C E81DFDFFFF              		call xprint			
   587                                  
   588                                   ;OpADR: [77]  ; End of func opcode					
   589                                  
   590                                  
   591                                  ;------Cleanup Phase
   592                                  
   593                                  ;------frame restore Phase
   594 00000751 4889EC                  	mov rsp , rbp	
   595 00000754 5D                      	pop rbp	
   596 00000755 C3                      	ret	
   597                                  cmd_prompt:		
   598 00000756 55                      	push rbp	
   599 00000757 4889E5                  	mov rbp , rsp	
   600                                  
   601                                  ;------Setup Phase
   602                                  
   603                                  ;------Init Phase
   604                                  
   605                                  .tailcall:		;Body Section	
   606                                  
   607                                   ;OpADR: [78]  ; PUSH opcode 
   608                                  
   609                                  	vV_push 979660131 
   609                              <1> 
   609 0000075A 41C707636D643A      <1>  mov DWORD[vV_sp] , %1
   609 00000761 4983C704            <1>  add vV_sp , 4
   609                              <1> 
   610                                  
   611                                  
   612                                   ;OpADR: [79]  ; OUT opcode (9)			
   613                                  
   614                                  								
   615 00000765 E858FAFFFF              	call vV_io_out_packed_char				
   616                                  						
   617                                  
   618                                   ;OpADR: [80]  ; End of func opcode					
   619                                  
   620                                  
   621                                  ;------Cleanup Phase
   622                                  
   623                                  ;------frame restore Phase
   624 0000076A 4889EC                  	mov rsp , rbp	
   625 0000076D 5D                      	pop rbp	
   626 0000076E C3                      	ret	
   627                                  input_cmd:		
   628 0000076F 55                      	push rbp	
   629 00000770 4889E5                  	mov rbp , rsp	
   630                                  
   631                                  ;------Setup Phase
   632                                  
   633                                  ;------Init Phase
   634                                  
   635                                  .tailcall:		;Body Section	
   636                                  
   637                                   ;OpADR: [81]  ; GET opcode (9)			
   638                                  
   639                                  								
   640 00000773 E836FBFFFF              	call vV_io_get_packed_char				
   641                                  						
   642                                  
   643                                   ;OpADR: [82]  ; End of func opcode					
   644                                  
   645                                  
   646                                  ;------Cleanup Phase
   647                                  
   648                                  ;------frame restore Phase
   649 00000778 4889EC                  	mov rsp , rbp	
   650 0000077B 5D                      	pop rbp	
   651 0000077C C3                      	ret	
   652                                  check_operand:		
   653 0000077D 55                      	push rbp	
   654 0000077E 4889E5                  	mov rbp , rsp	
   655                                  
   656                                  ;------Setup Phase
   657                                  
   658                                  ;------Init Phase
   659                                  
   660                                  .tailcall:		;Body Section	
   661                                  
   662                                   ;OpADR: [83]  ; DUP opcode (1)			
   663                                  
   664                                  	vV_dup 1			
   664                              <1> 
   664 00000781 B901000000          <1>  mov ecx , %1
   664 00000786 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   664 0000078A 4C89FF              <1>  mov rdi , vV_sp
   664                              <1> 
   664 0000078D F3A5                <1>  rep movsd
   664                              <1> 
   664 0000078F 4983C704            <1>  add vV_sp , cell(%1)
   664                              <1> 
   665                                  
   666                                  
   667                                   ;OpADR: [84]  ; PUSH opcode 
   668                                  
   669                                  	vV_push 43 
   669                              <1> 
   669 00000793 41C7072B000000      <1>  mov DWORD[vV_sp] , %1
   669 0000079A 4983C704            <1>  add vV_sp , 4
   669                              <1> 
   670                                  
   671                                  
   672                                   ;OpADR: [85]  ; EQUAL opcode					
   673                                  
   674 0000079E 418B47FC                	mov eax , vV_top			
   675 000007A2 413947F8                	cmp DWORD vV_2nd , eax			
   676                                  
   677 000007A6 75(0B)                  	jnz short 0xb				
   678                                  
   679 000007A8 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   680                                  
   681 000007B0 EB(09)                  	jmp short 0x9				
   682                                  
   683 000007B2 41C747F800000000        			mov DWORD vV_2nd , 0	
   684                                  
   685                                  	vV_dec_sp 1				
   685                              <1> 
   685 000007BA 4983EF04            <1>  sub vV_sp , cell(%1)
   685                              <1> 
   686                                  
   687                                   ;OpADR: [86]  ; IF opcode					
   688                                  
   689                                  	vV_dec_sp 1			
   689                              <1> 
   689 000007BE 4983EF04            <1>  sub vV_sp , cell(%1)
   689                              <1> 
   690 000007C2 41830F00                	or DWORD[vV_sp] , 0			
   691 000007C6 7410                    	je wblock_12	
   692                                  
   693                                   ;OpADR: [87]  ; PUSH opcode 
   694                                  
   695                                  	vV_push 1 
   695                              <1> 
   695 000007C8 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   695 000007CF 4983C704            <1>  add vV_sp , 4
   695                              <1> 
   696                                  
   697                                  
   698                                   ;OpADR: [88]  ; ELIF opcode					
   699                                  
   700 000007D3 E9B8010000              	jmp wblock_11	
   701                                  
   702                                  
   703                                  	wblock_12:		
   704                                  
   705                                  ;------------------------------------------------------
   706                                  
   707                                  
   708                                   ;OpADR: [89]  ; DUP opcode (1)			
   709                                  
   710                                  	vV_dup 1			
   710                              <1> 
   710 000007D8 B901000000          <1>  mov ecx , %1
   710 000007DD 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   710 000007E1 4C89FF              <1>  mov rdi , vV_sp
   710                              <1> 
   710 000007E4 F3A5                <1>  rep movsd
   710                              <1> 
   710 000007E6 4983C704            <1>  add vV_sp , cell(%1)
   710                              <1> 
   711                                  
   712                                  
   713                                   ;OpADR: [90]  ; PUSH opcode 
   714                                  
   715                                  	vV_push 45 
   715                              <1> 
   715 000007EA 41C7072D000000      <1>  mov DWORD[vV_sp] , %1
   715 000007F1 4983C704            <1>  add vV_sp , 4
   715                              <1> 
   716                                  
   717                                  
   718                                   ;OpADR: [91]  ; EQUAL opcode					
   719                                  
   720 000007F5 418B47FC                	mov eax , vV_top			
   721 000007F9 413947F8                	cmp DWORD vV_2nd , eax			
   722                                  
   723 000007FD 75(0B)                  	jnz short 0xb				
   724                                  
   725 000007FF 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   726                                  
   727 00000807 EB(09)                  	jmp short 0x9				
   728                                  
   729 00000809 41C747F800000000        			mov DWORD vV_2nd , 0	
   730                                  
   731                                  	vV_dec_sp 1				
   731                              <1> 
   731 00000811 4983EF04            <1>  sub vV_sp , cell(%1)
   731                              <1> 
   732                                  
   733                                   ;OpADR: [92]  ; IF opcode					
   734                                  
   735                                  	vV_dec_sp 1			
   735                              <1> 
   735 00000815 4983EF04            <1>  sub vV_sp , cell(%1)
   735                              <1> 
   736 00000819 41830F00                	or DWORD[vV_sp] , 0			
   737 0000081D 7410                    	je wblock_10	
   738                                  
   739                                   ;OpADR: [93]  ; PUSH opcode 
   740                                  
   741                                  	vV_push 1 
   741                              <1> 
   741 0000081F 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   741 00000826 4983C704            <1>  add vV_sp , 4
   741                              <1> 
   742                                  
   743                                  
   744                                   ;OpADR: [94]  ; ELIF opcode					
   745                                  
   746 0000082A E961010000              	jmp wblock_11	
   747                                  
   748                                  
   749                                  	wblock_10:		
   750                                  
   751                                  ;------------------------------------------------------
   752                                  
   753                                  
   754                                   ;OpADR: [95]  ; DUP opcode (1)			
   755                                  
   756                                  	vV_dup 1			
   756                              <1> 
   756 0000082F B901000000          <1>  mov ecx , %1
   756 00000834 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   756 00000838 4C89FF              <1>  mov rdi , vV_sp
   756                              <1> 
   756 0000083B F3A5                <1>  rep movsd
   756                              <1> 
   756 0000083D 4983C704            <1>  add vV_sp , cell(%1)
   756                              <1> 
   757                                  
   758                                  
   759                                   ;OpADR: [96]  ; PUSH opcode 
   760                                  
   761                                  	vV_push 42 
   761                              <1> 
   761 00000841 41C7072A000000      <1>  mov DWORD[vV_sp] , %1
   761 00000848 4983C704            <1>  add vV_sp , 4
   761                              <1> 
   762                                  
   763                                  
   764                                   ;OpADR: [97]  ; EQUAL opcode					
   765                                  
   766 0000084C 418B47FC                	mov eax , vV_top			
   767 00000850 413947F8                	cmp DWORD vV_2nd , eax			
   768                                  
   769 00000854 75(0B)                  	jnz short 0xb				
   770                                  
   771 00000856 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   772                                  
   773 0000085E EB(09)                  	jmp short 0x9				
   774                                  
   775 00000860 41C747F800000000        			mov DWORD vV_2nd , 0	
   776                                  
   777                                  	vV_dec_sp 1				
   777                              <1> 
   777 00000868 4983EF04            <1>  sub vV_sp , cell(%1)
   777                              <1> 
   778                                  
   779                                   ;OpADR: [98]  ; IF opcode					
   780                                  
   781                                  	vV_dec_sp 1			
   781                              <1> 
   781 0000086C 4983EF04            <1>  sub vV_sp , cell(%1)
   781                              <1> 
   782 00000870 41830F00                	or DWORD[vV_sp] , 0			
   783 00000874 7410                    	je wblock_8	
   784                                  
   785                                   ;OpADR: [99]  ; PUSH opcode 
   786                                  
   787                                  	vV_push 1 
   787                              <1> 
   787 00000876 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   787 0000087D 4983C704            <1>  add vV_sp , 4
   787                              <1> 
   788                                  
   789                                  
   790                                   ;OpADR: [100]  ; ELIF opcode					
   791                                  
   792 00000881 E90A010000              	jmp wblock_11	
   793                                  
   794                                  
   795                                  	wblock_8:		
   796                                  
   797                                  ;------------------------------------------------------
   798                                  
   799                                  
   800                                   ;OpADR: [101]  ; DUP opcode (1)			
   801                                  
   802                                  	vV_dup 1			
   802                              <1> 
   802 00000886 B901000000          <1>  mov ecx , %1
   802 0000088B 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   802 0000088F 4C89FF              <1>  mov rdi , vV_sp
   802                              <1> 
   802 00000892 F3A5                <1>  rep movsd
   802                              <1> 
   802 00000894 4983C704            <1>  add vV_sp , cell(%1)
   802                              <1> 
   803                                  
   804                                  
   805                                   ;OpADR: [102]  ; PUSH opcode 
   806                                  
   807                                  	vV_push 47 
   807                              <1> 
   807 00000898 41C7072F000000      <1>  mov DWORD[vV_sp] , %1
   807 0000089F 4983C704            <1>  add vV_sp , 4
   807                              <1> 
   808                                  
   809                                  
   810                                   ;OpADR: [103]  ; EQUAL opcode					
   811                                  
   812 000008A3 418B47FC                	mov eax , vV_top			
   813 000008A7 413947F8                	cmp DWORD vV_2nd , eax			
   814                                  
   815 000008AB 75(0B)                  	jnz short 0xb				
   816                                  
   817 000008AD 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   818                                  
   819 000008B5 EB(09)                  	jmp short 0x9				
   820                                  
   821 000008B7 41C747F800000000        			mov DWORD vV_2nd , 0	
   822                                  
   823                                  	vV_dec_sp 1				
   823                              <1> 
   823 000008BF 4983EF04            <1>  sub vV_sp , cell(%1)
   823                              <1> 
   824                                  
   825                                   ;OpADR: [104]  ; IF opcode					
   826                                  
   827                                  	vV_dec_sp 1			
   827                              <1> 
   827 000008C3 4983EF04            <1>  sub vV_sp , cell(%1)
   827                              <1> 
   828 000008C7 41830F00                	or DWORD[vV_sp] , 0			
   829 000008CB 7410                    	je wblock_6	
   830                                  
   831                                   ;OpADR: [105]  ; PUSH opcode 
   832                                  
   833                                  	vV_push 1 
   833                              <1> 
   833 000008CD 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   833 000008D4 4983C704            <1>  add vV_sp , 4
   833                              <1> 
   834                                  
   835                                  
   836                                   ;OpADR: [106]  ; ELIF opcode					
   837                                  
   838 000008D8 E9B3000000              	jmp wblock_11	
   839                                  
   840                                  
   841                                  	wblock_6:		
   842                                  
   843                                  ;------------------------------------------------------
   844                                  
   845                                  
   846                                   ;OpADR: [107]  ; DUP opcode (1)			
   847                                  
   848                                  	vV_dup 1			
   848                              <1> 
   848 000008DD B901000000          <1>  mov ecx , %1
   848 000008E2 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   848 000008E6 4C89FF              <1>  mov rdi , vV_sp
   848                              <1> 
   848 000008E9 F3A5                <1>  rep movsd
   848                              <1> 
   848 000008EB 4983C704            <1>  add vV_sp , cell(%1)
   848                              <1> 
   849                                  
   850                                  
   851                                   ;OpADR: [108]  ; PUSH opcode 
   852                                  
   853                                  	vV_push 37 
   853                              <1> 
   853 000008EF 41C70725000000      <1>  mov DWORD[vV_sp] , %1
   853 000008F6 4983C704            <1>  add vV_sp , 4
   853                              <1> 
   854                                  
   855                                  
   856                                   ;OpADR: [109]  ; EQUAL opcode					
   857                                  
   858 000008FA 418B47FC                	mov eax , vV_top			
   859 000008FE 413947F8                	cmp DWORD vV_2nd , eax			
   860                                  
   861 00000902 75(0B)                  	jnz short 0xb				
   862                                  
   863 00000904 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   864                                  
   865 0000090C EB(09)                  	jmp short 0x9				
   866                                  
   867 0000090E 41C747F800000000        			mov DWORD vV_2nd , 0	
   868                                  
   869                                  	vV_dec_sp 1				
   869                              <1> 
   869 00000916 4983EF04            <1>  sub vV_sp , cell(%1)
   869                              <1> 
   870                                  
   871                                   ;OpADR: [110]  ; IF opcode					
   872                                  
   873                                  	vV_dec_sp 1			
   873                              <1> 
   873 0000091A 4983EF04            <1>  sub vV_sp , cell(%1)
   873                              <1> 
   874 0000091E 41830F00                	or DWORD[vV_sp] , 0			
   875 00000922 740D                    	je wblock_4	
   876                                  
   877                                   ;OpADR: [111]  ; PUSH opcode 
   878                                  
   879                                  	vV_push 1 
   879                              <1> 
   879 00000924 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   879 0000092B 4983C704            <1>  add vV_sp , 4
   879                              <1> 
   880                                  
   881                                  
   882                                   ;OpADR: [112]  ; ELIF opcode					
   883                                  
   884 0000092F EB5F                    	jmp wblock_11	
   885                                  
   886                                  
   887                                  	wblock_4:		
   888                                  
   889                                  ;------------------------------------------------------
   890                                  
   891                                  
   892                                   ;OpADR: [113]  ; DUP opcode (1)			
   893                                  
   894                                  	vV_dup 1			
   894                              <1> 
   894 00000931 B901000000          <1>  mov ecx , %1
   894 00000936 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   894 0000093A 4C89FF              <1>  mov rdi , vV_sp
   894                              <1> 
   894 0000093D F3A5                <1>  rep movsd
   894                              <1> 
   894 0000093F 4983C704            <1>  add vV_sp , cell(%1)
   894                              <1> 
   895                                  
   896                                  
   897                                   ;OpADR: [114]  ; PUSH opcode 
   898                                  
   899                                  	vV_push 113 
   899                              <1> 
   899 00000943 41C70771000000      <1>  mov DWORD[vV_sp] , %1
   899 0000094A 4983C704            <1>  add vV_sp , 4
   899                              <1> 
   900                                  
   901                                  
   902                                   ;OpADR: [115]  ; EQUAL opcode					
   903                                  
   904 0000094E 418B47FC                	mov eax , vV_top			
   905 00000952 413947F8                	cmp DWORD vV_2nd , eax			
   906                                  
   907 00000956 75(0B)                  	jnz short 0xb				
   908                                  
   909 00000958 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   910                                  
   911 00000960 EB(09)                  	jmp short 0x9				
   912                                  
   913 00000962 41C747F800000000        			mov DWORD vV_2nd , 0	
   914                                  
   915                                  	vV_dec_sp 1				
   915                              <1> 
   915 0000096A 4983EF04            <1>  sub vV_sp , cell(%1)
   915                              <1> 
   916                                  
   917                                   ;OpADR: [116]  ; IF opcode					
   918                                  
   919                                  	vV_dec_sp 1			
   919                              <1> 
   919 0000096E 4983EF04            <1>  sub vV_sp , cell(%1)
   919                              <1> 
   920 00000972 41830F00                	or DWORD[vV_sp] , 0			
   921 00000976 740D                    	je wblock_2	
   922                                  
   923                                   ;OpADR: [117]  ; PUSH opcode 
   924                                  
   925                                  	vV_push 1 
   925                              <1> 
   925 00000978 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   925 0000097F 4983C704            <1>  add vV_sp , 4
   925                              <1> 
   926                                  
   927                                  
   928                                   ;OpADR: [118]  ; ELIF opcode					
   929                                  
   930 00000983 EB0B                    	jmp wblock_11	
   931                                  
   932                                  
   933                                  	wblock_2:		
   934                                  
   935                                  ;------------------------------------------------------
   936                                  
   937                                  
   938                                   ;OpADR: [119]  ; PUSH opcode 
   939                                  
   940                                  	vV_push 0 
   940                              <1> 
   940 00000985 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   940 0000098C 4983C704            <1>  add vV_sp , 4
   940                              <1> 
   941                                  
   942                                  
   943                                  
   944                                  	wblock_11:		
   945                                  
   946                                  ;------------------------------------------------------
   947                                  
   948                                  
   949                                   ;OpADR: [120]  ; End of func opcode					
   950                                  
   951                                  
   952                                  ;------Cleanup Phase
   953                                  
   954                                  ;------frame restore Phase
   955 00000990 4889EC                  	mov rsp , rbp	
   956 00000993 5D                      	pop rbp	
   957 00000994 C3                      	ret	
   958                                  solve_operand:		
   959 00000995 55                      	push rbp	
   960 00000996 4889E5                  	mov rbp , rsp	
   961                                  
   962                                  ;------Setup Phase
   963                                  
   964                                  ;------Init Phase
   965                                  
   966                                  .tailcall:		;Body Section	
   967                                  
   968                                   ;OpADR: [121]  ; DUP opcode (1)			
   969                                  
   970                                  	vV_dup 1			
   970                              <1> 
   970 00000999 B901000000          <1>  mov ecx , %1
   970 0000099E 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   970 000009A2 4C89FF              <1>  mov rdi , vV_sp
   970                              <1> 
   970 000009A5 F3A5                <1>  rep movsd
   970                              <1> 
   970 000009A7 4983C704            <1>  add vV_sp , cell(%1)
   970                              <1> 
   971                                  
   972                                  
   973                                   ;OpADR: [122]  ; PUSH opcode 
   974                                  
   975                                  	vV_push 43 
   975                              <1> 
   975 000009AB 41C7072B000000      <1>  mov DWORD[vV_sp] , %1
   975 000009B2 4983C704            <1>  add vV_sp , 4
   975                              <1> 
   976                                  
   977                                  
   978                                   ;OpADR: [123]  ; EQUAL opcode					
   979                                  
   980 000009B6 418B47FC                	mov eax , vV_top			
   981 000009BA 413947F8                	cmp DWORD vV_2nd , eax			
   982                                  
   983 000009BE 75(0B)                  	jnz short 0xb				
   984                                  
   985 000009C0 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   986                                  
   987 000009C8 EB(09)                  	jmp short 0x9				
   988                                  
   989 000009CA 41C747F800000000        			mov DWORD vV_2nd , 0	
   990                                  
   991                                  	vV_dec_sp 1				
   991                              <1> 
   991 000009D2 4983EF04            <1>  sub vV_sp , cell(%1)
   991                              <1> 
   992                                  
   993                                   ;OpADR: [124]  ; IF opcode					
   994                                  
   995                                  	vV_dec_sp 1			
   995                              <1> 
   995 000009D6 4983EF04            <1>  sub vV_sp , cell(%1)
   995                              <1> 
   996 000009DA 41830F00                	or DWORD[vV_sp] , 0			
   997 000009DE 7419                    	je wblock_21	
   998                                  
   999                                   ;OpADR: [125]  ; DROP opcode 
  1000                                  
  1001 000009E0 4983EF04                	sub vV_sp , 4	
  1002                                  
  1003                                   ;OpADR: [126]  ; ADD opcode 					
  1004                                  
  1005 000009E4 418B47F8                	mov eax , vV_2nd			
  1006 000009E8 410347FC                	add eax , vV_top			
  1007 000009EC 418947F8                	mov vV_2nd , eax			
  1008                                  
  1009                                  	vV_dec_sp 1		
  1009                              <1> 
  1009 000009F0 4983EF04            <1>  sub vV_sp , cell(%1)
  1009                              <1> 
  1010                                  
  1011                                   ;OpADR: [127]  ; ELIF opcode					
  1012                                  
  1013 000009F4 E97C010000              	jmp wblock_20	
  1014                                  
  1015                                  
  1016                                  	wblock_21:		
  1017                                  
  1018                                  ;------------------------------------------------------
  1019                                  
  1020                                  
  1021                                   ;OpADR: [128]  ; DUP opcode (1)			
  1022                                  
  1023                                  	vV_dup 1			
  1023                              <1> 
  1023 000009F9 B901000000          <1>  mov ecx , %1
  1023 000009FE 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1023 00000A02 4C89FF              <1>  mov rdi , vV_sp
  1023                              <1> 
  1023 00000A05 F3A5                <1>  rep movsd
  1023                              <1> 
  1023 00000A07 4983C704            <1>  add vV_sp , cell(%1)
  1023                              <1> 
  1024                                  
  1025                                  
  1026                                   ;OpADR: [129]  ; PUSH opcode 
  1027                                  
  1028                                  	vV_push 45 
  1028                              <1> 
  1028 00000A0B 41C7072D000000      <1>  mov DWORD[vV_sp] , %1
  1028 00000A12 4983C704            <1>  add vV_sp , 4
  1028                              <1> 
  1029                                  
  1030                                  
  1031                                   ;OpADR: [130]  ; EQUAL opcode					
  1032                                  
  1033 00000A16 418B47FC                	mov eax , vV_top			
  1034 00000A1A 413947F8                	cmp DWORD vV_2nd , eax			
  1035                                  
  1036 00000A1E 75(0B)                  	jnz short 0xb				
  1037                                  
  1038 00000A20 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1039                                  
  1040 00000A28 EB(09)                  	jmp short 0x9				
  1041                                  
  1042 00000A2A 41C747F800000000        			mov DWORD vV_2nd , 0	
  1043                                  
  1044                                  	vV_dec_sp 1				
  1044                              <1> 
  1044 00000A32 4983EF04            <1>  sub vV_sp , cell(%1)
  1044                              <1> 
  1045                                  
  1046                                   ;OpADR: [131]  ; IF opcode					
  1047                                  
  1048                                  	vV_dec_sp 1			
  1048                              <1> 
  1048 00000A36 4983EF04            <1>  sub vV_sp , cell(%1)
  1048                              <1> 
  1049 00000A3A 41830F00                	or DWORD[vV_sp] , 0			
  1050 00000A3E 7419                    	je wblock_19	
  1051                                  
  1052                                   ;OpADR: [132]  ; DROP opcode 
  1053                                  
  1054 00000A40 4983EF04                	sub vV_sp , 4	
  1055                                  
  1056                                   ;OpADR: [133]  ; SUB opcode 					
  1057                                  
  1058 00000A44 418B47F8                	mov eax , vV_2nd			
  1059 00000A48 412B47FC                	sub eax , vV_top			
  1060 00000A4C 418947F8                	mov vV_2nd, eax			
  1061                                  
  1062                                  	vV_dec_sp 1		
  1062                              <1> 
  1062 00000A50 4983EF04            <1>  sub vV_sp , cell(%1)
  1062                              <1> 
  1063                                  
  1064                                   ;OpADR: [134]  ; ELIF opcode					
  1065                                  
  1066 00000A54 E91C010000              	jmp wblock_20	
  1067                                  
  1068                                  
  1069                                  	wblock_19:		
  1070                                  
  1071                                  ;------------------------------------------------------
  1072                                  
  1073                                  
  1074                                   ;OpADR: [135]  ; DUP opcode (1)			
  1075                                  
  1076                                  	vV_dup 1			
  1076                              <1> 
  1076 00000A59 B901000000          <1>  mov ecx , %1
  1076 00000A5E 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1076 00000A62 4C89FF              <1>  mov rdi , vV_sp
  1076                              <1> 
  1076 00000A65 F3A5                <1>  rep movsd
  1076                              <1> 
  1076 00000A67 4983C704            <1>  add vV_sp , cell(%1)
  1076                              <1> 
  1077                                  
  1078                                  
  1079                                   ;OpADR: [136]  ; PUSH opcode 
  1080                                  
  1081                                  	vV_push 42 
  1081                              <1> 
  1081 00000A6B 41C7072A000000      <1>  mov DWORD[vV_sp] , %1
  1081 00000A72 4983C704            <1>  add vV_sp , 4
  1081                              <1> 
  1082                                  
  1083                                  
  1084                                   ;OpADR: [137]  ; EQUAL opcode					
  1085                                  
  1086 00000A76 418B47FC                	mov eax , vV_top			
  1087 00000A7A 413947F8                	cmp DWORD vV_2nd , eax			
  1088                                  
  1089 00000A7E 75(0B)                  	jnz short 0xb				
  1090                                  
  1091 00000A80 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1092                                  
  1093 00000A88 EB(09)                  	jmp short 0x9				
  1094                                  
  1095 00000A8A 41C747F800000000        			mov DWORD vV_2nd , 0	
  1096                                  
  1097                                  	vV_dec_sp 1				
  1097                              <1> 
  1097 00000A92 4983EF04            <1>  sub vV_sp , cell(%1)
  1097                              <1> 
  1098                                  
  1099                                   ;OpADR: [138]  ; IF opcode					
  1100                                  
  1101                                  	vV_dec_sp 1			
  1101                              <1> 
  1101 00000A96 4983EF04            <1>  sub vV_sp , cell(%1)
  1101                              <1> 
  1102 00000A9A 41830F00                	or DWORD[vV_sp] , 0			
  1103 00000A9E 7419                    	je wblock_17	
  1104                                  
  1105                                   ;OpADR: [139]  ; DROP opcode 
  1106                                  
  1107 00000AA0 4983EF04                	sub vV_sp , 4	
  1108                                  
  1109                                   ;OpADR: [140]  ; MUL opcode 					
  1110                                  
  1111                                  
  1112 00000AA4 418B47F8                	mov eax , vV_2nd			
  1113 00000AA8 41F767FC                	mul DWORD vV_top			
  1114 00000AAC 418947F8                	mov vV_2nd , eax			
  1115                                  
  1116                                  	vV_dec_sp 1				
  1116                              <1> 
  1116 00000AB0 4983EF04            <1>  sub vV_sp , cell(%1)
  1116                              <1> 
  1117                                  						
  1118                                  
  1119                                   ;OpADR: [141]  ; ELIF opcode					
  1120                                  
  1121 00000AB4 E9BC000000              	jmp wblock_20	
  1122                                  
  1123                                  
  1124                                  	wblock_17:		
  1125                                  
  1126                                  ;------------------------------------------------------
  1127                                  
  1128                                  
  1129                                   ;OpADR: [142]  ; DUP opcode (1)			
  1130                                  
  1131                                  	vV_dup 1			
  1131                              <1> 
  1131 00000AB9 B901000000          <1>  mov ecx , %1
  1131 00000ABE 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1131 00000AC2 4C89FF              <1>  mov rdi , vV_sp
  1131                              <1> 
  1131 00000AC5 F3A5                <1>  rep movsd
  1131                              <1> 
  1131 00000AC7 4983C704            <1>  add vV_sp , cell(%1)
  1131                              <1> 
  1132                                  
  1133                                  
  1134                                   ;OpADR: [143]  ; PUSH opcode 
  1135                                  
  1136                                  	vV_push 47 
  1136                              <1> 
  1136 00000ACB 41C7072F000000      <1>  mov DWORD[vV_sp] , %1
  1136 00000AD2 4983C704            <1>  add vV_sp , 4
  1136                              <1> 
  1137                                  
  1138                                  
  1139                                   ;OpADR: [144]  ; EQUAL opcode					
  1140                                  
  1141 00000AD6 418B47FC                	mov eax , vV_top			
  1142 00000ADA 413947F8                	cmp DWORD vV_2nd , eax			
  1143                                  
  1144 00000ADE 75(0B)                  	jnz short 0xb				
  1145                                  
  1146 00000AE0 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1147                                  
  1148 00000AE8 EB(09)                  	jmp short 0x9				
  1149                                  
  1150 00000AEA 41C747F800000000        			mov DWORD vV_2nd , 0	
  1151                                  
  1152                                  	vV_dec_sp 1				
  1152                              <1> 
  1152 00000AF2 4983EF04            <1>  sub vV_sp , cell(%1)
  1152                              <1> 
  1153                                  
  1154                                   ;OpADR: [145]  ; IF opcode					
  1155                                  
  1156                                  	vV_dec_sp 1			
  1156                              <1> 
  1156 00000AF6 4983EF04            <1>  sub vV_sp , cell(%1)
  1156                              <1> 
  1157 00000AFA 41830F00                	or DWORD[vV_sp] , 0			
  1158 00000AFE 7418                    	je wblock_15	
  1159                                  
  1160                                   ;OpADR: [146]  ; DROP opcode 
  1161                                  
  1162 00000B00 4983EF04                	sub vV_sp , 4	
  1163                                  
  1164                                   ;OpADR: [147]  ; DIV opcode 					
  1165                                  
  1166 00000B04 31D2                    	xor edx , edx				
  1167 00000B06 418B47F8                	mov eax , vV_2nd			
  1168 00000B0A 41F777FC                	div DWORD vV_top			
  1169 00000B0E 418947F8                	mov vV_2nd , eax			
  1170                                  
  1171                                  	vV_dec_sp 1				
  1171                              <1> 
  1171 00000B12 4983EF04            <1>  sub vV_sp , cell(%1)
  1171                              <1> 
  1172                                  
  1173                                   ;OpADR: [148]  ; ELIF opcode					
  1174                                  
  1175 00000B16 EB5D                    	jmp wblock_20	
  1176                                  
  1177                                  
  1178                                  	wblock_15:		
  1179                                  
  1180                                  ;------------------------------------------------------
  1181                                  
  1182                                  
  1183                                   ;OpADR: [149]  ; DUP opcode (1)			
  1184                                  
  1185                                  	vV_dup 1			
  1185                              <1> 
  1185 00000B18 B901000000          <1>  mov ecx , %1
  1185 00000B1D 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1185 00000B21 4C89FF              <1>  mov rdi , vV_sp
  1185                              <1> 
  1185 00000B24 F3A5                <1>  rep movsd
  1185                              <1> 
  1185 00000B26 4983C704            <1>  add vV_sp , cell(%1)
  1185                              <1> 
  1186                                  
  1187                                  
  1188                                   ;OpADR: [150]  ; PUSH opcode 
  1189                                  
  1190                                  	vV_push 37 
  1190                              <1> 
  1190 00000B2A 41C70725000000      <1>  mov DWORD[vV_sp] , %1
  1190 00000B31 4983C704            <1>  add vV_sp , 4
  1190                              <1> 
  1191                                  
  1192                                  
  1193                                   ;OpADR: [151]  ; EQUAL opcode					
  1194                                  
  1195 00000B35 418B47FC                	mov eax , vV_top			
  1196 00000B39 413947F8                	cmp DWORD vV_2nd , eax			
  1197                                  
  1198 00000B3D 75(0B)                  	jnz short 0xb				
  1199                                  
  1200 00000B3F 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1201                                  
  1202 00000B47 EB(09)                  	jmp short 0x9				
  1203                                  
  1204 00000B49 41C747F800000000        			mov DWORD vV_2nd , 0	
  1205                                  
  1206                                  	vV_dec_sp 1				
  1206                              <1> 
  1206 00000B51 4983EF04            <1>  sub vV_sp , cell(%1)
  1206                              <1> 
  1207                                  
  1208                                   ;OpADR: [152]  ; IF opcode					
  1209                                  
  1210                                  	vV_dec_sp 1			
  1210                              <1> 
  1210 00000B55 4983EF04            <1>  sub vV_sp , cell(%1)
  1210                              <1> 
  1211 00000B59 41830F00                	or DWORD[vV_sp] , 0			
  1212 00000B5D 7416                    	je wblock_20	
  1213                                  
  1214                                   ;OpADR: [153]  ; DROP opcode 
  1215                                  
  1216 00000B5F 4983EF04                	sub vV_sp , 4	
  1217                                  
  1218                                   ;OpADR: [154]  ; MOD opcode 					
  1219                                  
  1220 00000B63 31D2                    	xor edx , edx				
  1221 00000B65 418B47F8                	mov eax , vV_2nd			
  1222 00000B69 41F777FC                	div DWORD vV_top			
  1223 00000B6D 418957F8                	mov vV_2nd , edx			
  1224                                  
  1225 00000B71 4983EF04                	sub r15 , 4				
  1226                                  
  1227                                  
  1228                                  	wblock_20:		
  1229                                  
  1230                                  ;------------------------------------------------------
  1231                                  
  1232                                  
  1233                                   ;OpADR: [155]  ; End of func opcode					
  1234                                  
  1235                                  
  1236                                  ;------Cleanup Phase
  1237                                  
  1238                                  ;------frame restore Phase
  1239 00000B75 4889EC                  	mov rsp , rbp	
  1240 00000B78 5D                      	pop rbp	
  1241 00000B79 C3                      	ret	
  1242                                  check_cmd:		
  1243 00000B7A 55                      	push rbp	
  1244 00000B7B 4889E5                  	mov rbp , rsp	
  1245                                  
  1246                                  ;------Setup Phase
  1247                                  
  1248                                  ;------Init Phase
  1249                                  
  1250                                  .tailcall:		;Body Section	
  1251                                  
  1252                                   ;OpADR: [156]  ; DUP opcode (1)			
  1253                                  
  1254                                  	vV_dup 1			
  1254                              <1> 
  1254 00000B7E B901000000          <1>  mov ecx , %1
  1254 00000B83 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1254 00000B87 4C89FF              <1>  mov rdi , vV_sp
  1254                              <1> 
  1254 00000B8A F3A5                <1>  rep movsd
  1254                              <1> 
  1254 00000B8C 4983C704            <1>  add vV_sp , cell(%1)
  1254                              <1> 
  1255                                  
  1256                                  
  1257                                   ;OpADR: [157]  ; Function Call					
  1258                                  
  1259 00000B90 E862F9FFFF              		call quit_cmd			
  1260                                  
  1261                                   ;OpADR: [158]  ; EQUAL opcode					
  1262                                  
  1263 00000B95 418B47FC                	mov eax , vV_top			
  1264 00000B99 413947F8                	cmp DWORD vV_2nd , eax			
  1265                                  
  1266 00000B9D 75(0B)                  	jnz short 0xb				
  1267                                  
  1268 00000B9F 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1269                                  
  1270 00000BA7 EB(09)                  	jmp short 0x9				
  1271                                  
  1272 00000BA9 41C747F800000000        			mov DWORD vV_2nd , 0	
  1273                                  
  1274                                  	vV_dec_sp 1				
  1274                              <1> 
  1274 00000BB1 4983EF04            <1>  sub vV_sp , cell(%1)
  1274                              <1> 
  1275                                  
  1276                                   ;OpADR: [159]  ; IF opcode					
  1277                                  
  1278                                  	vV_dec_sp 1			
  1278                              <1> 
  1278 00000BB5 4983EF04            <1>  sub vV_sp , cell(%1)
  1278                              <1> 
  1279 00000BB9 41830F00                	or DWORD[vV_sp] , 0			
  1280 00000BBD 7416                    	je wblock_22	
  1281                                  
  1282                                   ;OpADR: [160]  ; PUSH opcode 
  1283                                  
  1284                                  	vV_push 1 
  1284                              <1> 
  1284 00000BBF 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1284 00000BC6 4983C704            <1>  add vV_sp , 4
  1284                              <1> 
  1285                                  
  1286                                  
  1287                                   ;OpADR: [161]  ; PUSH opcode 
  1288                                  
  1289                                  	vV_push 0 
  1289                              <1> 
  1289 00000BCA 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1289 00000BD1 4983C704            <1>  add vV_sp , 4
  1289                              <1> 
  1290                                  
  1291                                  
  1292                                  
  1293                                  	wblock_22:		
  1294                                  
  1295                                  ;------------------------------------------------------
  1296                                  
  1297                                  
  1298                                   ;OpADR: [162]  ; DUP opcode (1)			
  1299                                  
  1300                                  	vV_dup 1			
  1300                              <1> 
  1300 00000BD5 B901000000          <1>  mov ecx , %1
  1300 00000BDA 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1300 00000BDE 4C89FF              <1>  mov rdi , vV_sp
  1300                              <1> 
  1300 00000BE1 F3A5                <1>  rep movsd
  1300                              <1> 
  1300 00000BE3 4983C704            <1>  add vV_sp , cell(%1)
  1300                              <1> 
  1301                                  
  1302                                  
  1303                                   ;OpADR: [163]  ; Function Call					
  1304                                  
  1305 00000BE7 E81FF9FFFF              		call help_cmd			
  1306                                  
  1307                                   ;OpADR: [164]  ; EQUAL opcode					
  1308                                  
  1309 00000BEC 418B47FC                	mov eax , vV_top			
  1310 00000BF0 413947F8                	cmp DWORD vV_2nd , eax			
  1311                                  
  1312 00000BF4 75(0B)                  	jnz short 0xb				
  1313                                  
  1314 00000BF6 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1315                                  
  1316 00000BFE EB(09)                  	jmp short 0x9				
  1317                                  
  1318 00000C00 41C747F800000000        			mov DWORD vV_2nd , 0	
  1319                                  
  1320                                  	vV_dec_sp 1				
  1320                              <1> 
  1320 00000C08 4983EF04            <1>  sub vV_sp , cell(%1)
  1320                              <1> 
  1321                                  
  1322                                   ;OpADR: [165]  ; IF opcode					
  1323                                  
  1324                                  	vV_dec_sp 1			
  1324                              <1> 
  1324 00000C0C 4983EF04            <1>  sub vV_sp , cell(%1)
  1324                              <1> 
  1325 00000C10 41830F00                	or DWORD[vV_sp] , 0			
  1326 00000C14 7410                    	je wblock_23	
  1327                                  
  1328                                   ;OpADR: [166]  ; Function Call					
  1329                                  
  1330 00000C16 E82CF9FFFF              		call help			
  1331                                  
  1332                                   ;OpADR: [167]  ; PUSH opcode 
  1333                                  
  1334                                  	vV_push 1 
  1334                              <1> 
  1334 00000C1B 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1334 00000C22 4983C704            <1>  add vV_sp , 4
  1334                              <1> 
  1335                                  
  1336                                  
  1337                                  
  1338                                  	wblock_23:		
  1339                                  
  1340                                  ;------------------------------------------------------
  1341                                  
  1342                                  
  1343                                   ;OpADR: [168]  ; DUP opcode (1)			
  1344                                  
  1345                                  	vV_dup 1			
  1345                              <1> 
  1345 00000C26 B901000000          <1>  mov ecx , %1
  1345 00000C2B 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1345 00000C2F 4C89FF              <1>  mov rdi , vV_sp
  1345                              <1> 
  1345 00000C32 F3A5                <1>  rep movsd
  1345                              <1> 
  1345 00000C34 4983C704            <1>  add vV_sp , cell(%1)
  1345                              <1> 
  1346                                  
  1347                                  
  1348                                   ;OpADR: [169]  ; Function Call					
  1349                                  
  1350 00000C38 E8E2F8FFFF              		call calc_cmd			
  1351                                  
  1352                                   ;OpADR: [170]  ; EQUAL opcode					
  1353                                  
  1354 00000C3D 418B47FC                	mov eax , vV_top			
  1355 00000C41 413947F8                	cmp DWORD vV_2nd , eax			
  1356                                  
  1357 00000C45 75(0B)                  	jnz short 0xb				
  1358                                  
  1359 00000C47 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1360                                  
  1361 00000C4F EB(09)                  	jmp short 0x9				
  1362                                  
  1363 00000C51 41C747F800000000        			mov DWORD vV_2nd , 0	
  1364                                  
  1365                                  	vV_dec_sp 1				
  1365                              <1> 
  1365 00000C59 4983EF04            <1>  sub vV_sp , cell(%1)
  1365                              <1> 
  1366                                  
  1367                                   ;OpADR: [171]  ; IF opcode					
  1368                                  
  1369                                  	vV_dec_sp 1			
  1369                              <1> 
  1369 00000C5D 4983EF04            <1>  sub vV_sp , cell(%1)
  1369                              <1> 
  1370 00000C61 41830F00                	or DWORD[vV_sp] , 0			
  1371 00000C65 7416                    	je wblock_24	
  1372                                  
  1373                                   ;OpADR: [172]  ; PUSH opcode 
  1374                                  
  1375                                  	vV_push 0 
  1375                              <1> 
  1375 00000C67 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1375 00000C6E 4983C704            <1>  add vV_sp , 4
  1375                              <1> 
  1376                                  
  1377                                  
  1378                                   ;OpADR: [173]  ; PUSH opcode 
  1379                                  
  1380                                  	vV_push 0 
  1380                              <1> 
  1380 00000C72 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1380 00000C79 4983C704            <1>  add vV_sp , 4
  1380                              <1> 
  1381                                  
  1382                                  
  1383                                  
  1384                                  	wblock_24:		
  1385                                  
  1386                                  ;------------------------------------------------------
  1387                                  
  1388                                  
  1389                                   ;OpADR: [174]  ; DUP opcode (1)			
  1390                                  
  1391                                  	vV_dup 1			
  1391                              <1> 
  1391 00000C7D B901000000          <1>  mov ecx , %1
  1391 00000C82 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1391 00000C86 4C89FF              <1>  mov rdi , vV_sp
  1391                              <1> 
  1391 00000C89 F3A5                <1>  rep movsd
  1391                              <1> 
  1391 00000C8B 4983C704            <1>  add vV_sp , cell(%1)
  1391                              <1> 
  1392                                  
  1393                                  
  1394                                   ;OpADR: [175]  ; Function Call					
  1395                                  
  1396 00000C8F E89FF8FFFF              		call frmt_cmd			
  1397                                  
  1398                                   ;OpADR: [176]  ; EQUAL opcode					
  1399                                  
  1400 00000C94 418B47FC                	mov eax , vV_top			
  1401 00000C98 413947F8                	cmp DWORD vV_2nd , eax			
  1402                                  
  1403 00000C9C 75(0B)                  	jnz short 0xb				
  1404                                  
  1405 00000C9E 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1406                                  
  1407 00000CA6 EB(09)                  	jmp short 0x9				
  1408                                  
  1409 00000CA8 41C747F800000000        			mov DWORD vV_2nd , 0	
  1410                                  
  1411                                  	vV_dec_sp 1				
  1411                              <1> 
  1411 00000CB0 4983EF04            <1>  sub vV_sp , cell(%1)
  1411                              <1> 
  1412                                  
  1413                                   ;OpADR: [177]  ; IF opcode					
  1414                                  
  1415                                  	vV_dec_sp 1			
  1415                              <1> 
  1415 00000CB4 4983EF04            <1>  sub vV_sp , cell(%1)
  1415                              <1> 
  1416 00000CB8 41830F00                	or DWORD[vV_sp] , 0			
  1417 00000CBC 740B                    	je wblock_25	
  1418                                  
  1419                                   ;OpADR: [178]  ; PUSH opcode 
  1420                                  
  1421                                  	vV_push 1 
  1421                              <1> 
  1421 00000CBE 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1421 00000CC5 4983C704            <1>  add vV_sp , 4
  1421                              <1> 
  1422                                  
  1423                                  
  1424                                  
  1425                                  	wblock_25:		
  1426                                  
  1427                                  ;------------------------------------------------------
  1428                                  
  1429                                  
  1430                                   ;OpADR: [179]  ; End of func opcode					
  1431                                  
  1432                                  
  1433                                  ;------Cleanup Phase
  1434                                  
  1435                                  ;------frame restore Phase
  1436 00000CC9 4889EC                  	mov rsp , rbp	
  1437 00000CCC 5D                      	pop rbp	
  1438 00000CCD C3                      	ret	
  1439                                  
  1440                                  		
  1441                                  
  1442                                  
  1443                                  
  1444                                  vV_entry_point:
  1445                                  
  1446                                  
  1447 00000CCE 4889E5                  	mov rbp, rsp			;Setup Stack Frame
  1448                                  	
  1449                                  	
  1450                                  
  1451                                  	wblock_34:		
  1452                                  
  1453                                  ;------------------------------------------------------
  1454                                  
  1455                                  
  1456                                   ;OpADR: [0]  ; Function Call					
  1457                                  
  1458 00000CD1 E86DFAFFFF              		call say_welcome			
  1459                                  
  1460                                   ;OpADR: [1]  ; Function Call					
  1461                                  
  1462 00000CD6 E894FAFFFF              		call input_cmd			
  1463                                  
  1464                                   ;OpADR: [2]  ; Function Call					
  1465                                  
  1466 00000CDB E89AFEFFFF              		call check_cmd			
  1467                                  
  1468                                   ;OpADR: [3]  ; WHILE opcode					
  1469                                  
  1470                                  	vV_dec_sp 1				
  1470                              <1> 
  1470 00000CE0 4983EF04            <1>  sub vV_sp , cell(%1)
  1470                              <1> 
  1471 00000CE4 41830F00                	or DWORD[vV_sp] , 0			
  1472 00000CE8 75E7                    	jne wblock_34		
  1473                                  
  1474                                   ;OpADR: [4]  ; IF opcode					
  1475                                  
  1476                                  	vV_dec_sp 1			
  1476                              <1> 
  1476 00000CEA 4983EF04            <1>  sub vV_sp , cell(%1)
  1476                              <1> 
  1477 00000CEE 41830F00                	or DWORD[vV_sp] , 0			
  1478 00000CF2 7405                    	je wblock_32	
  1479                                  
  1480                                   ;OpADR: [5]  ; Break opcode					
  1481                                  
  1482 00000CF4 E909010000              	jmp wblock_35		
  1483                                  
  1484                                  
  1485                                  	wblock_32:		
  1486                                  
  1487                                  ;------------------------------------------------------
  1488                                  
  1489                                  
  1490                                   ;OpADR: [6]  ; Function Call					
  1491                                  
  1492 00000CF9 E864F9FFFF              		call calc_msg01			
  1493                                  
  1494                                   ;OpADR: [7]  ; Function Call					
  1495                                  
  1496 00000CFE E86BF7FFFF              		call xprint			
  1497                                  
  1498                                   ;OpADR: [8]  ; GET opcode (0)			
  1499                                  
  1500 00000D03 E869F5FFFF              	call vV_io_get_default			
  1501                                  						
  1502                                  
  1503                                  
  1504                                  	wblock_30:		
  1505                                  
  1506                                  ;------------------------------------------------------
  1507                                  
  1508                                  
  1509                                   ;OpADR: [9]  ; Function Call					
  1510                                  
  1511 00000D08 E895F9FFFF              		call calc_msg02			
  1512                                  
  1513                                   ;OpADR: [10]  ; Function Call					
  1514                                  
  1515 00000D0D E85CF7FFFF              		call xprint			
  1516                                  
  1517                                   ;OpADR: [11]  ; GET opcode (8)			
  1518                                  
  1519                                  		
  1520 00000D12 E881F5FFFF              	call vV_io_get_char				
  1521                                  						
  1522                                  
  1523                                   ;OpADR: [12]  ; Function Call					
  1524                                  
  1525 00000D17 E861FAFFFF              		call check_operand			
  1526                                  
  1527                                   ;OpADR: [13]  ; IF opcode					
  1528                                  
  1529                                  	vV_dec_sp 1			
  1529                              <1> 
  1529 00000D1C 4983EF04            <1>  sub vV_sp , cell(%1)
  1529                              <1> 
  1530 00000D20 41830F00                	or DWORD[vV_sp] , 0			
  1531 00000D24 740D                    	je wblock_29	
  1532                                  
  1533                                   ;OpADR: [14]  ; PUSH opcode 
  1534                                  
  1535                                  	vV_push 0 
  1535                              <1> 
  1535 00000D26 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1535 00000D2D 4983C704            <1>  add vV_sp , 4
  1535                              <1> 
  1536                                  
  1537                                  
  1538                                   ;OpADR: [15]  ; ELIF opcode					
  1539                                  
  1540 00000D31 EB19                    	jmp wblock_28	
  1541                                  
  1542                                  
  1543                                  	wblock_29:		
  1544                                  
  1545                                  ;------------------------------------------------------
  1546                                  
  1547                                  
  1548                                   ;OpADR: [16]  ; DROP opcode 
  1549                                  
  1550 00000D33 4983EF04                	sub vV_sp , 4	
  1551                                  
  1552                                   ;OpADR: [17]  ; Function Call					
  1553                                  
  1554 00000D37 E8C7F9FFFF              		call calc_msg03			
  1555                                  
  1556                                   ;OpADR: [18]  ; Function Call					
  1557                                  
  1558 00000D3C E82DF7FFFF              		call xprint			
  1559                                  
  1560                                   ;OpADR: [19]  ; PUSH opcode 
  1561                                  
  1562                                  	vV_push 1 
  1562                              <1> 
  1562 00000D41 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1562 00000D48 4983C704            <1>  add vV_sp , 4
  1562                              <1> 
  1563                                  
  1564                                  
  1565                                  
  1566                                  	wblock_28:		
  1567                                  
  1568                                  ;------------------------------------------------------
  1569                                  
  1570                                  
  1571                                   ;OpADR: [20]  ; WHILE opcode					
  1572                                  
  1573                                  	vV_dec_sp 1				
  1573                              <1> 
  1573 00000D4C 4983EF04            <1>  sub vV_sp , cell(%1)
  1573                              <1> 
  1574 00000D50 41830F00                	or DWORD[vV_sp] , 0			
  1575 00000D54 75B2                    	jne wblock_30		
  1576                                  
  1577                                   ;OpADR: [21]  ; DUP opcode (1)			
  1578                                  
  1579                                  	vV_dup 1			
  1579                              <1> 
  1579 00000D56 B901000000          <1>  mov ecx , %1
  1579 00000D5B 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1579 00000D5F 4C89FF              <1>  mov rdi , vV_sp
  1579                              <1> 
  1579 00000D62 F3A5                <1>  rep movsd
  1579                              <1> 
  1579 00000D64 4983C704            <1>  add vV_sp , cell(%1)
  1579                              <1> 
  1580                                  
  1581                                  
  1582                                   ;OpADR: [22]  ; PUSH opcode 
  1583                                  
  1584                                  	vV_push 113 
  1584                              <1> 
  1584 00000D68 41C70771000000      <1>  mov DWORD[vV_sp] , %1
  1584 00000D6F 4983C704            <1>  add vV_sp , 4
  1584                              <1> 
  1585                                  
  1586                                  
  1587                                   ;OpADR: [23]  ; EQUAL opcode					
  1588                                  
  1589 00000D73 418B47FC                	mov eax , vV_top			
  1590 00000D77 413947F8                	cmp DWORD vV_2nd , eax			
  1591                                  
  1592 00000D7B 75(0B)                  	jnz short 0xb				
  1593                                  
  1594 00000D7D 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1595                                  
  1596 00000D85 EB(09)                  	jmp short 0x9				
  1597                                  
  1598 00000D87 41C747F800000000        			mov DWORD vV_2nd , 0	
  1599                                  
  1600                                  	vV_dec_sp 1				
  1600                              <1> 
  1600 00000D8F 4983EF04            <1>  sub vV_sp , cell(%1)
  1600                              <1> 
  1601                                  
  1602                                   ;OpADR: [24]  ; IF opcode					
  1603                                  
  1604                                  	vV_dec_sp 1			
  1604                              <1> 
  1604 00000D93 4983EF04            <1>  sub vV_sp , cell(%1)
  1604                              <1> 
  1605 00000D97 41830F00                	or DWORD[vV_sp] , 0			
  1606 00000D9B 740A                    	je wblock_31	
  1607                                  
  1608                                   ;OpADR: [25]  ; DROP opcode 
  1609                                  
  1610 00000D9D 4983EF04                	sub vV_sp , 4	
  1611                                  
  1612                                   ;OpADR: [26]  ; DROP opcode 
  1613                                  
  1614 00000DA1 4983EF04                	sub vV_sp , 4	
  1615                                  
  1616                                   ;OpADR: [27]  ; Break opcode					
  1617                                  
  1618 00000DA5 EB42                    	jmp wblock_33		
  1619                                  
  1620                                  
  1621                                  	wblock_31:		
  1622                                  
  1623                                  ;------------------------------------------------------
  1624                                  
  1625                                  
  1626                                   ;OpADR: [28]  ; Function Call					
  1627                                  
  1628 00000DA7 E8B6F8FFFF              		call calc_msg01			
  1629                                  
  1630                                   ;OpADR: [29]  ; Function Call					
  1631                                  
  1632 00000DAC E8BDF6FFFF              		call xprint			
  1633                                  
  1634                                   ;OpADR: [30]  ; GET opcode (0)			
  1635                                  
  1636 00000DB1 E8BBF4FFFF              	call vV_io_get_default			
  1637                                  						
  1638                                  
  1639                                   ;OpADR: [31]  ; SWAP opcode 
  1640                                  
  1641                                  
  1642                                  	vV_swap		
  1642                              <1> 
  1642 00000DB6 418B57FC            <1>  mov edx , [vV_sp-4]
  1642 00000DBA 418B47F8            <1>  mov eax , [vV_sp-8]
  1642 00000DBE 418957F8            <1>  mov [vV_sp-8] , edx
  1642 00000DC2 418947FC            <1>  mov [vV_sp-4] , eax
  1642                              <1> 
  1643                                  
  1644                                  
  1645                                   ;OpADR: [32]  ; Function Call					
  1646                                  
  1647 00000DC6 E8CAFBFFFF              		call solve_operand			
  1648                                  
  1649                                   ;OpADR: [33]  ; OUT opcode (0)			
  1650                                  
  1651 00000DCB E87DF3FFFF              	call vV_io_out_default			
  1652                                  						
  1653                                  
  1654                                   ;OpADR: [34]  ; PUSH opcode 
  1655                                  
  1656                                  	vV_push 1 
  1656                              <1> 
  1656 00000DD0 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1656 00000DD7 4983C704            <1>  add vV_sp , 4
  1656                              <1> 
  1657                                  
  1658                                  
  1659                                   ;OpADR: [35]  ; WHILE opcode					
  1660                                  
  1661                                  	vV_dec_sp 1				
  1661                              <1> 
  1661 00000DDB 4983EF04            <1>  sub vV_sp , cell(%1)
  1661                              <1> 
  1662 00000DDF 41830F00                	or DWORD[vV_sp] , 0			
  1663 00000DE3 0F8510FFFFFF            	jne wblock_32		
  1664                                  
  1665                                  
  1666                                  	wblock_33:		
  1667                                  
  1668                                  ;------------------------------------------------------
  1669                                  
  1670                                  
  1671                                   ;OpADR: [36]  ; PUSH opcode 
  1672                                  
  1673                                  	vV_push 1 
  1673                              <1> 
  1673 00000DE9 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1673 00000DF0 4983C704            <1>  add vV_sp , 4
  1673                              <1> 
  1674                                  
  1675                                  
  1676                                   ;OpADR: [37]  ; WHILE opcode					
  1677                                  
  1678                                  	vV_dec_sp 1				
  1678                              <1> 
  1678 00000DF4 4983EF04            <1>  sub vV_sp , cell(%1)
  1678                              <1> 
  1679 00000DF8 41830F00                	or DWORD[vV_sp] , 0			
  1680 00000DFC 0F85CFFEFFFF            	jne wblock_34		
  1681                                  
  1682                                  
  1683                                  	wblock_35:		
  1684                                  
  1685                                  ;------------------------------------------------------
  1686                                  
  1687                                  
  1688                                   ;OpADR: [38]  ; Function Call					
  1689                                  
  1690 00000E02 E826F8FFFF              		call goodbye_msg			
  1691                                  
  1692                                   ;OpADR: [39]  ; Function Call					
  1693                                  
  1694 00000E07 E862F6FFFF              		call xprint			
  1695                                  		
  1696 00000E0C C3                      		ret
  1697                                  
  1698                                  ;Transpiled from vV with vVc version 0.0.4
  1699                                  		
  1700                                  		
