     1                                  %include "vVc/assembly/w_runtime/vV_defines.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> ;------------------Variables From Project-------------
     5                              <1> 
     6                              <1> 	;------------------Should come from io module(need refactoring)
     7                              <1> 
     8                              <1> 
     9                              <1> 	%define vV_input_buffer_size 255
    10                              <1> 	%define vV_output_buffer_size 255
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;------------------Implementation Relative-------------
    15                              <1> 
    16                              <1> %deftok vV_sp 'r15'
    17                              <1> 
    18                              <1> %deftok vV_spS 'r14'
    19                              <1> 
    20                              <1> %deftok vV_sdir '-'
    21                              <1> 
    22                              <1> 
    23                              <1> 
    24                              <1> 
    25                              <1> ;------------------Stack Shortcuts--------------------
    26                              <1> 
    27                              <1> %define cell(a) (a*4)
    28                              <1> 
    29                              <1> 
    30                              <1> %define vV_top [vV_sp vV_sdir %+ cell(1)]
    31                              <1> %define vV_2nd [vV_sp vV_sdir %+ cell(2)]
    32                              <1> 
    33                              <1> %define vV_stack_v(a) ([vV_sp vV_sdir %+ cell(a)])
    34                              <1> 
    35                              <1> 
    36                              <1> ;-------------------Out_Format Pointer------------------
    37                              <1> 
    38                              <1> %deftok vV_FORMAT_BIN "vV_ascii_int_to_bin"
    39                              <1> %deftok vV_FORMAT_DEC "vV_ascii_int_to_dec"
    40                              <1> %deftok vV_FORMAT_HEX "vV_ascii_int_to_hex"
    41                              <1> 
    42                              <1> 
    43                              <1> 
    44                              <1> ;--------------------Op Macros--------------------------
    45                              <1> 
    46                              <1> %macro vV_push 1
    47                              <1> 
    48                              <1> 	mov DWORD[vV_sp] , %1
    49                              <1> 	add vV_sp , 4
    50                              <1> 
    51                              <1> %endmacro
    52                              <1> 
    53                              <1> %macro vV_pop 1
    54                              <1> 
    55                              <1> 	sub vV_sp , 4
    56                              <1> 	mov %1 , [vV_sp]
    57                              <1> 	
    58                              <1> %endmacro
    59                              <1> 
    60                              <1> %macro vV_swap 0
    61                              <1> 
    62                              <1> 	mov edx , [vV_sp-4]
    63                              <1> 	mov eax , [vV_sp-8]
    64                              <1> 	mov [vV_sp-8] , edx 
    65                              <1> 	mov [vV_sp-4] , eax 
    66                              <1> 	
    67                              <1> %endmacro
    68                              <1> 
    69                              <1> %macro vV_dup 1
    70                              <1> 
    71                              <1> 	mov ecx , %1
    72                              <1> 	lea rsi , [vV_sp-cell(%1)]
    73                              <1> 	mov rdi , vV_sp
    74                              <1> 		
    75                              <1> 	rep movsd
    76                              <1> 	
    77                              <1> 	add vV_sp , cell(%1)
    78                              <1> 	
    79                              <1> %endmacro
    80                              <1> 
    81                              <1> 
    82                              <1> %macro vV_dec_sp 1
    83                              <1> 
    84                              <1> 	sub vV_sp , cell(%1)
    85                              <1> 	
    86                              <1> %endmacro
    87                              <1> 	
     2                                  %include "vVc/assembly/w_runtime/vV_error_code.asm"		
     1                              <1> 
     2                              <1> %define vV_ERR_IO_I_OVERFLOW 1
     3                              <1> %define vV_ERR_IO_O_OVERFLOW 2
     4                              <1> %define vV_ERR_IO_I_UNVALID 3
     5                              <1> %define vV_ERR_IO_O_UNVALID 4
     6                              <1> %define vV_ERR_IO_I_VALUE_OVERFLOW 5
     7                              <1> 
     8                              <1> 
     9                              <1> %define vV_ERR_VALUE_OVERFLOW 8
    10                              <1> 
    11                              <1> 
    12                              <1> %define vV_ERR_MEMORY_BUFFER_LIMIT 16
     3                                  %include "vVc/assembly/w_runtime/vV_runtime.asm"		
     1                              <1> %define SYS_EXIT 60
     2                              <1> 
     3                              <1> 
     4                              <1> ;%include "vVc/assembly/w_runtime/vV_errors.asm"
     5                              <1> ;%include "vVc/assembly/w_runtime/vV_system00.asm"
     6                              <1> ;%include "vVc/assembly/w_runtime/vV_system10.asm"
     7                              <1> ;%include "vVc/assembly/w_runtime/vV_system90.asm"
     8                              <1> 
     9                              <1> 
    10                              <1> global _start
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;extern vV_entry_point			;Defined by main program
    15                              <1> 
    16                              <1> 
    17                              <1> 
    18                              <1> 	
    19                              <1> segment .data 
    20                              <1> 
    21                              <1> 
    22                              <1> 	
    23                              <1> 
    24                              <1> segment .text 
    25                              <1> 
    26                              <1> 
    27                              <1> 	vV_forced_exit:				;rax hold exit code
    28                              <1> 							;Removed default error printing
    29                              <1> 							;This will now happens in errors module
    30                              <1> 
    31 00000000 4889C7              <1> 		mov rdi, rax
    32 00000003 B83C000000          <1> 		mov rax, SYS_EXIT
    33 00000008 0F05                <1> 		syscall
    34                              <1> 		
    35                              <1> 		
    36                              <1> 
    37                              <1> 
    38                              <1> 	save_regs:			;In case called from other process
    39                              <1> 	
    40 0000000A 58                  <1> 		pop rax
    41                              <1> 	
    42 0000000B 53                  <1> 		push rbx
    43 0000000C 4154                <1> 		push r12
    44 0000000E 4155                <1> 		push r13
    45 00000010 4156                <1> 		push r14
    46 00000012 4157                <1> 		push r15
    47                              <1> 		
    48 00000014 50                  <1> 		push rax
    49                              <1> 		
    50 00000015 C3                  <1> 		ret
    51                              <1> 		
    52                              <1> 	restore_regs:
    53                              <1> 	
    54 00000016 58                  <1> 		pop rax
    55                              <1> 	
    56 00000017 415F                <1> 		pop r15
    57 00000019 415E                <1> 		pop r14
    58 0000001B 415D                <1> 		pop r13
    59 0000001D 415C                <1> 		pop r12
    60 0000001F 5B                  <1> 		pop rbx
    61                              <1> 		
    62 00000020 50                  <1> 		push rax
    63                              <1> 		
    64 00000021 C3                  <1> 		ret
    65                              <1> 		
    66                              <1> 	setup_memory:
    67                              <1> 	
    68 00000022 C70425[80000000]00- <1> 		mov DWORD [vV_input_buffer_content] , 0
    68 0000002A 000000              <1>
    69 0000002D C70425[83010000]00- <1> 		mov DWORD [vV_output_buffer_content] , 0
    69 00000035 000000              <1>
    70                              <1> 		
    71                              <1> 		;mov DWORD [endofline] , 0xa
    72                              <1> 		
    73 00000038 C70425[14010000]-   <1> 		mov DWORD[vV_sys_format_mode] , vV_ascii_int_to_dec
    73 0000003F [01040000]          <1>
    74                              <1> 		
    75 00000043 C3                  <1> 		ret
    76                              <1> 		
    77                              <1> 		
    78                              <1> 	
    79                              <1> 		
    80                              <1> _start:				;Entry point of Every Program
    81                              <1> 	
    82                              <1> 		
    83                              <1> 
    84 00000044 4889E5              <1> 	mov rbp, rsp				;Setup Stack Frame
    85                              <1> 	
    86 00000047 49BF-               <1> 	mov r15 , fake_stack_start			;setup fake data stack
    86 00000049 [8602040000000000]  <1>
    87                              <1> 	
    88 00000051 E8B4FFFFFF          <1> 	call save_regs				;just in case
    89                              <1> 	
    90                              <1> 	
    91 00000056 E8C7FFFFFF          <1> 	call setup_memory			;all memory setup at start
    92                              <1> 	
    93                              <1> 	
    94                              <1> 	
    95 0000005B E8E60B0000          <1> 	call vV_entry_point			;Start the program 
    96                              <1> 	
    97                              <1> 	
    98 00000060 E8B1FFFFFF          <1> 	call restore_regs
    99                              <1> 	
   100                              <1> 
   101                              <1> ;------------------------------------------------------------------------------
   102                              <1> 
   103 00000065 B83C000000          <1> 	mov rax, SYS_EXIT
   104 0000006A BF00000000          <1> 	mov rdi, 0		;Normal exit procedure (no code returned from main)
   105 0000006F 0F05                <1> 	syscall
   106                              <1> 	
   107                              <1> 	
   108                              <1> 	
   109                              <1> 	
   110                              <1> 	
     4                                  %include "vVc/assembly/w_runtime/vV_system00.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5 00000000 <res 00000040>      <1> 	vV_sys_start:	resd 16		;not used now
     6                              <1> 
     7                              <1> 	
     8                              <1> 	
     9                              <1> segment .data
    10                              <1> 
    11                              <1> 
    12                              <1> ;--Start of Memory----------------------------------------------------------
    13                              <1> 
    14                              <1> 	ALIGN 8
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;---------------------Error Managment----------
    18                              <1> 
    19                              <1> 
    20                              <1> ;error vectors	
    21                              <1> 	
    22                              <1> 	vV_error_vectors:
    23 00000000 [8D00000000000000]- <1> 	times 32 dq vV_error_unhandeled
    23 00000000 <rept>              <1>
    24                              <1> 	
    25                              <1> 	
    26                              <1> 	
    27                              <1> segment .text
    28                              <1> 
    29                              <1> 
    30                              <1> vV_error:
    31                              <1> 
    32 00000071 52                  <1> 	push rdx
    33                              <1> 	
    34 00000072 4831D2              <1> 	xor rdx , rdx
    35                              <1> 	
    36 00000075 88E2                <1> 	mov dl , ah
    37                              <1> 	
    38 00000077 C0E203              <1> 	shl dl , 3
    39                              <1> 	
    40 0000007A 67FF92[00000000]    <1> 	call [vV_error_vectors + edx]
    41                              <1> 	
    42                              <1> 	
    43 00000081 5A                  <1> 	pop rdx
    44                              <1> 	
    45 00000082 C3                  <1> 	ret
    46                              <1> 	
    47                              <1> 	
    48                              <1> vV_error_fatal:
    49                              <1> 
    50                              <1> 	
    51 00000083 88D0                <1> 	mov al , dl
    52                              <1> 	
    53 00000085 C0E803              <1> 	shr al , 3
    54                              <1> 
    55 00000088 E873FFFFFF          <1> 	call vV_forced_exit
    56                              <1> 	
    57                              <1> 	
    58                              <1> 	
    59                              <1> 	
    60                              <1> 	
    61                              <1> 	
    62                              <1> 
    63                              <1> 	
     5                                  %include "vVc/assembly/w_runtime/vV_errors.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> segment .bss
     5                              <1> 
     6                              <1> 
     7                              <1> 	ALIGNB 4
     8                              <1> 		
     9                              <1> 	vV_error_buffer:
    10 00000040 <res 00000040>      <1> 	resb 64
    11                              <1> 	vV_end_err_buff:
    12                              <1> 	vV_error_buffer_size equ vV_end_err_buff-vV_error_buffer
    13                              <1> 
    14                              <1> 
    15                              <1> 
    16                              <1> 
    17                              <1> segment .data
    18                              <1> 
    19                              <1> ;Error String	
    20                              <1> 
    21                              <1> 	
    22                              <1> 	vV_error_msg:
    23 00000100 556E68616E64656C65- <1> 	.default: db "Unhandeled Error "
    23 00000109 64204572726F7220    <1>
    24                              <1> 	default_size equ $-.default
    25                              <1> 
    26                              <1> 
    27                              <1> 
    28                              <1> segment .text
    29                              <1> 
    30                              <1> 
    31                              <1> 
    32                              <1> 
    33                              <1> 	
    34                              <1> vV_error_unhandeled:
    35                              <1> 
    36                              <1> 
    37 0000008D 56                  <1> 	push rsi
    38 0000008E 57                  <1> 	push rdi	;Save reg used by syscall
    39 0000008F 4151                <1> 	push r9	;and by conversion func
    40                              <1> 	
    41                              <1> 	
    42                              <1> ;push rax	;Save flags ( and value)
    43                              <1> 
    44 00000091 53                  <1> 	push rbx	;Save Arg
    45 00000092 52                  <1> push rdx		;Save error code
    46                              <1> 	
    47                              <1> 	
    48 00000093 BA11000000          <1> 	mov edx , default_size				;string lenght
    49 00000098 48BE-               <1> 	mov rsi , vV_error_msg.default			;strng ptr
    49 0000009A [0001000000000000]  <1>
    50 000000A2 BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    51 000000A7 B801000000          <1> 	mov rax , 1				; Write sysCall
    52 000000AC 0F05                <1> 	syscall	
    53                              <1> 	
    54                              <1> 	
    55 000000AE 58                  <1> pop rax	;error code
    56                              <1> 
    57                              <1> 
    58 000000AF C0E803              <1> 	shr al , 3
    59                              <1> 	
    60                              <1> 	
    61 000000B2 BF[40000000]        <1> 	mov edi , vV_error_buffer
    62 000000B7 41B940000000        <1> 	mov r9d , vV_error_buffer_size
    63                              <1> 	
    64                              <1> 
    65 000000BD E83F030000          <1> 	call vV_ascii_int_to_dec	
    66                              <1> 	
    67                              <1> 		
    68                              <1> 	
    69 000000C2 67C680[40000000]20  <1> 	mov BYTE[vV_error_buffer + eax] , ' '
    70                              <1> 	
    71                              <1> 	
    72 000000CA 67488DB8[41000000]  <1> 	lea rdi , [vV_error_buffer + eax + 1]
    73 000000D2 4129F9              <1> 	sub r9d , edi
    74                              <1> 	
    75 000000D5 58                  <1> 	pop rax
    76                              <1> 	
    77 000000D6 E826030000          <1> 	call vV_ascii_int_to_dec
    78                              <1> 	
    79 000000DB 674C8D0C07          <1> 	lea r9 , [edi + eax]
    80                              <1> 	
    81 000000E0 41C6010A            <1> 	mov BYTE[r9] , 0xa
    82                              <1> 	
    83 000000E4 49FFC1              <1> 	inc r9
    84                              <1> 	
    85 000000E7 4981E9[40000000]    <1> 	sub r9 , vV_error_buffer
    86                              <1> 	
    87 000000EE 4489CA              <1> 	mov edx , r9d				;string lenght
    88 000000F1 48BE-               <1> 	mov rsi , vV_error_buffer			;strng ptr
    88 000000F3 [4000000000000000]  <1>
    89 000000FB BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    90 00000100 B801000000          <1> 	mov rax , 1				; Write sysCall
    91 00000105 0F05                <1> 	syscall
    92                              <1> 	
    93 00000107 4159                <1> 	pop r9
    94 00000109 5F                  <1> 	pop rdi
    95 0000010A 5E                  <1> 	pop rsi
    96                              <1> 	
    97                              <1> 	
    98                              <1> 	
    99                              <1> 	
   100 0000010B C3                  <1> 	ret
   101                              <1> 	
   102                              <1> 	
   103                              <1> 	
   104                              <1> 		
   105                              <1> 		
   106                              <1> 		
   107                              <1> 		
   108                              <1> 		
   109                              <1> 		
   110                              <1> 		
   111                              <1> 		
   112                              <1> 		
   113                              <1> 		
   114                              <1> 		
   115                              <1> 		
   116                              <1> 		
   117                              <1> 		
   118                              <1> 		
   119                              <1> 		
   120                              <1> 		
   121                              <1> 		
   122                              <1> 		
   123                              <1> 
     6                                  %include "vVc/assembly/w_runtime/vV_system10.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5                              <1> 	
     6                              <1> 	
     7                              <1> 	;------------Input Buffer
     8                              <1> 
     9                              <1> 
    10                              <1> 	
    11 00000080 <res 00000004>      <1> 	vV_input_buffer_content: resb 4			;Input Buffer current content
    12 00000084 <res 000000FF>      <1> 	vV_input_buffer: resb vV_input_buffer_size		;Input Buffer of 256 char
    13                              <1> 	
    14                              <1> 	
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;------------Output Buffer
    18                              <1> 
    19                              <1> 
    20                              <1> 
    21                              <1> 	
    22 00000183 <res 00000004>      <1> 	vV_output_buffer_content: resb 4			;Output Buffer current content
    23 00000187 <res 000000FF>      <1> 	vV_output_buffer: resb vV_output_buffer_size		;Output Buffer of 256 char
    24                              <1> 	
    25                              <1> 	
    26                              <1> 	
    27                              <1> 	
    28                              <1> ;------------Number Buffer
    29                              <1> 
    30                              <1> 
    31                              <1> 	
    32                              <1> 	
    33                              <1> 	;w_number_buffer: resb 10				;Todo: Handle Bigger Numbers
    34                              <1> 	;endofline: resb 1					;Maybe Not Needed
    35                              <1> 	
    36                              <1> 
    37                              <1> 
    38                              <1> segment .data
    39 00000111 90<rept>            <1> 	ALIGN 4
    40 00000114 [01040000]          <1> 	vV_sys_format_mode: dd vV_ascii_int_to_dec
     7                                  %include "vVc/assembly/w_runtime/vV_io.asm"			
     1                              <1> 
     2                              <1> 
     3                              <1> ;%include "vVc/assembly/w_runtime/vV_ascii.asm"
     4                              <1> 
     5                              <1> 
     6                              <1> ;Group all read/wrie syscalls
     7                              <1> 
     8                              <1> ;global convert_to_string
     9                              <1> ;global convert_to_int
    10                              <1> 
    11                              <1> ;extern vV_input_buffer
    12                              <1> ;extern vV_output_buffer
    13                              <1> ;extern w_number_buffer
    14                              <1> 
    15                              <1> global wio_out
    16                              <1> global wio_get
    17                              <1> global wio_get_str_raw
    18                              <1> global wio_get_str_null
    19                              <1> global wio_get_str_nline
    20                              <1> global wio_move_in_to_out
    21                              <1> 
    22                              <1> 
    23                              <1> segment .text 
    24                              <1> 
    25                              <1> 
    26                              <1> 
    27                              <1> 
    28                              <1> 
    29                              <1> vV_io_flush:
    30                              <1> 	
    31                              <1> 	
    32                              <1> 	
    33 0000010C 8B1425[83010000]    <1> 	mov edx , DWORD[vV_output_buffer_content]			;string lenght	
    34                              <1> 	
    35 00000113 C70425[83010000]00- <1> 	mov DWORD[vV_output_buffer_content] , 0
    35 0000011B 000000              <1>
    36                              <1> 	
    37 0000011E 48BE-               <1> 	mov rsi , vV_output_buffer			;strng ptr
    37 00000120 [8701000000000000]  <1>
    38                              <1> 		
    39 00000128 67C682[87010000]0A  <1> 	mov BYTE[vV_output_buffer + edx] , 0xa
    40 00000130 FFC2                <1> 	inc edx
    41                              <1> 		
    42 00000132 BF01000000          <1> 	mov rdi , 1					;file descriptor, stdout
    43 00000137 B801000000          <1> 	mov rax , 1					; Write sysCall
    44 0000013C 0F05                <1> 	syscall
    45                              <1> 	
    46                              <1> 	
    47                              <1> 	
    48 0000013E C3                  <1> 	ret
    49                              <1> 	
    50                              <1> 		
    51                              <1> ;-------------------------------------------------------------------------------
    52                              <1> ;-------------------------------------------------------------------------------
    53                              <1> 	
    54                              <1> vV_io_out_buffer_default:
    55                              <1> 
    56 0000013F 448B1425[14010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    57 00000147 E80F000000          <1> 	call vV_io_out_buffer
    58 0000014C C3                  <1> 	ret
    59                              <1> 	
    60                              <1> vV_io_out_default:
    61                              <1> 
    62 0000014D 448B1425[14010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    63 00000155 E80C000000          <1> 	call vV_io_out
    64 0000015A C3                  <1> 	ret
    65                              <1> 
    66                              <1> ;-------------------------------------------------------------------------------
    67                              <1> ;-------------------------------------------------------------------------------
    68                              <1> 	
    69                              <1> vV_io_out_buffer:				;print str repr of Top Of Stack element
    70                              <1> 						
    71                              <1> 						
    72 0000015B E811000000          <1> 	call vV_io_out01			
    73 00000160 E84A000000          <1> 	call vV_io_out_buffer_end
    74 00000165 C3                  <1> 	ret
    75                              <1> 
    76                              <1> ;-------------------------------------------------------------------------------
    77                              <1> 		
    78                              <1> vV_io_out:					;print str repr of Top Of Stack element
    79                              <1> 
    80                              <1> 
    81 00000166 E806000000          <1> 	call vV_io_out01					
    82 0000016B E826000000          <1> 	call vV_io_out_direct_end
    83 00000170 C3                  <1> 	ret
    84                              <1> 
    85                              <1> ;-------------------------------------------------------------------------------	
    86                              <1> ;-------------------------------------------------------------------------------	
    87                              <1> 
    88                              <1> vV_io_out01:					;print str repr of Top Of Stack element
    89                              <1> 
    90                              <1> 
    91                              <1> 	vV_pop eax				;get value in eax
    91                              <2> 
    91 00000171 4983EF04            <2>  sub vV_sp , 4
    91 00000175 418B07              <2>  mov %1 , [vV_sp]
    91                              <2> 
    92                              <1> 	
    93 00000178 BF[87010000]        <1> 	mov edi , vV_output_buffer		;set dest as O_buff
    94 0000017D 033C25[83010000]    <1> 	add edi ,DWORD[vV_output_buffer_content]		;set offset to start of freespace
    95                              <1> 	
    96 00000184 57                  <1> push rdi					;Save buffer origin
    97                              <1> 	
    98 00000185 41B9FF000000        <1> 	mov r9 , 255				;set Max buffer available	
    99 0000018B 4129F9              <1> 	sub r9d , edi				;#TODO: Stop HardCoding VALUES!!!!
   100 0000018E 41FFD2              <1> 		call r10			;call current conversion format function
   101 00000191 4831FF              <1> 	xor rdi , rdi
   102                              <1> 	
   103 00000194 5F                  <1> pop rdi						;recover Buffer origin
   104                              <1> 	
   105 00000195 C3                  <1> 	ret
   106                              <1> 
   107                              <1> ;-------------------------------------------------------------------------------	
   108                              <1> 	
   109                              <1> vV_io_out_direct_end:
   110                              <1> 
   111                              <1> 
   112                              <1> 
   113 00000196 67C604070A          <1> 	mov BYTE[edi + eax] , 0xa		;add new_line
   114                              <1> 		
   115 0000019B FFC0                <1> 		inc eax
   116                              <1> 		
   117 0000019D 89C2                <1> 		mov edx , eax				;string lenght		
   118 0000019F 4889FE              <1> 		mov rsi , rdi				;strng ptr
   119 000001A2 BF01000000          <1> 		mov rdi , 1				;file descriptor, stdout
   120 000001A7 B801000000          <1> 		mov rax , 1				; Write sysCall
   121 000001AC 0F05                <1> 		syscall
   122                              <1> 	
   123 000001AE C3                  <1> 		ret
   124                              <1> 
   125                              <1> ;-------------------------------------------------------------------------------		
   126                              <1> 		
   127                              <1> vV_io_out_buffer_end:
   128                              <1> 
   129 000001AF 010425[83010000]    <1> 	add [vV_output_buffer_content] , eax
   130                              <1> 
   131 000001B6 C3                  <1> 	ret
   132                              <1> 
   133                              <1> ;-------------------------------------------------------------------------------
   134                              <1> 
   135                              <1> vV_io_out_char:
   136                              <1> 
   137                              <1> 	
   138 000001B7 E827000000          <1> 	call vV_io_read_char
   139 000001BC E8D5FFFFFF          <1> 	call vV_io_out_direct_end
   140                              <1> 	
   141 000001C1 C3                  <1> 	ret
   142                              <1> 	
   143                              <1> vV_io_out_packed_char:
   144                              <1> 
   145                              <1> 	
   146 000001C2 E842000000          <1> 	call vV_io_read_packed_char
   147                              <1> 	
   148 000001C7 E8CAFFFFFF          <1> 	call vV_io_out_direct_end
   149                              <1> 	
   150 000001CC C3                  <1> 	ret
   151                              <1> 	
   152                              <1> vV_io_out_char_buffer:
   153                              <1> 
   154 000001CD E811000000          <1> 	call vV_io_read_char
   155                              <1> 	
   156 000001D2 E8D8FFFFFF          <1> 	call vV_io_out_buffer_end
   157                              <1> 	
   158 000001D7 C3                  <1> 	ret
   159                              <1> 	
   160                              <1> vV_io_out_packed_char_buffer:
   161                              <1> 
   162 000001D8 E82C000000          <1> 	call vV_io_read_packed_char
   163                              <1> 	
   164 000001DD E8CDFFFFFF          <1> 	call vV_io_out_buffer_end
   165                              <1> 	
   166 000001E2 C3                  <1> 	ret
   167                              <1> 	
   168                              <1> vV_io_read_char:
   169                              <1> 
   170                              <1> 	vV_pop eax
   170                              <2> 
   170 000001E3 4983EF04            <2>  sub vV_sp , 4
   170 000001E7 418B07              <2>  mov %1 , [vV_sp]
   170                              <2> 
   171                              <1> 	
   172 000001EA 48BF-               <1> 	mov rdi , vV_output_buffer
   172 000001EC [8701000000000000]  <1>
   173 000001F4 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   174                              <1> 	
   175 000001FB 678807              <1> 	mov [edi] , al
   176                              <1> 	
   177 000001FE BF[87010000]        <1> 	mov edi , vV_output_buffer
   178 00000203 B801000000          <1> 	mov eax , 1
   179                              <1> 	
   180 00000208 C3                  <1> 	ret	
   181                              <1> 	
   182                              <1> vV_io_read_packed_char:
   183                              <1> 
   184                              <1> 	vV_pop eax
   184                              <2> 
   184 00000209 4983EF04            <2>  sub vV_sp , 4
   184 0000020D 418B07              <2>  mov %1 , [vV_sp]
   184                              <2> 
   185                              <1> 	
   186 00000210 48BF-               <1> 	mov rdi , vV_output_buffer
   186 00000212 [8701000000000000]  <1>
   187 0000021A 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   188                              <1> 	
   189 00000221 678907              <1> 	mov [edi] , eax
   190                              <1> 	
   191 00000224 BF[87010000]        <1> 	mov edi , vV_output_buffer
   192 00000229 B804000000          <1> 	mov eax , 4	
   193                              <1> 	
   194 0000022E C3                  <1> 	ret
   195                              <1> 		
   196                              <1> ;-------------------------------------------------------------------------------
   197                              <1> ;-------------------------------------------------------------------------------
   198                              <1> ;-------------------------------------------------------------------------------
   199                              <1> ;-------------------------------------------------------------------------------
   200                              <1> ;-------------------------------------------------------------------------------
   201                              <1> ;-------------------------------------------------------------------------------
   202                              <1> ;-------------------------------------------------------------------------------
   203                              <1> 	
   204                              <1> vV_io_read:
   205                              <1> 
   206                              <1> 								
   207 0000022F 48BE-               <1> 		mov rsi , vV_input_buffer		;ptr to string destination	
   207 00000231 [8400000000000000]  <1>
   208 00000239 BAFF000000          <1> 		mov edx , vV_input_buffer_size				;string lenght	
   209 0000023E BF00000000          <1> 		mov rdi , 0				;file descriptor, stdin
   210 00000243 B800000000          <1> 		mov rax , 0				; read sysCall
   211                              <1> 		
   212 00000248 0F05                <1> 		syscall
   213                              <1> 	
   214                              <1> ;-------------Buffer_Overflow_Execption  
   215                              <1> 
   216                              <1> 
   217                              <1> 
   218 0000024A 3DFF000000          <1> 		cmp eax , 255				;Check if Buffer Is Full
   219                              <1> 		
   220 0000024F 721F                <1> 			jb .no_overflow
   221                              <1> 			
   222 00000251 803C25[82010000]0A  <1> 		cmp BYTE[vV_input_buffer + vV_input_buffer_size-1] , 0xa	;Check if Buffer end with "\n"
   223                              <1> 		
   224 00000259 7415                <1> 			je .no_overflow
   225                              <1> 		
   226                              <1> 		
   227 0000025B 50                  <1> 			push rax
   228 0000025C 53                  <1> 			push rbx
   229                              <1> 		
   230 0000025D B401                <1> 			mov ah , vV_ERR_IO_I_OVERFLOW
   231 0000025F 6683C800            <1> 			or ax , 0
   232 00000263 4831DB              <1> 			xor rbx , rbx
   233 00000266 4889F3              <1> 			mov rbx , rsi
   234                              <1> 		
   235 00000269 E803FEFFFF          <1> 			call vV_error
   236                              <1> 		
   237 0000026E 5B                  <1> 			pop rbx
   238 0000026F 58                  <1> 			pop rax
   239                              <1> 		
   240                              <1> 			;ret
   241                              <1> 		
   242                              <1> 		.no_overflow:
   243                              <1> 		
   244 00000270 C3                  <1> 			ret
   245                              <1> 		
   246                              <1> 		
   247                              <1> 	
   248                              <1> 	
   249                              <1> vV_io_get_default:
   250                              <1> 
   251 00000271 41BA[11030000]      <1> 	mov r10d , vV_ascii_as_dec			;TODO: default settings
   252 00000277 E801000000          <1> 	call vV_io_get
   253 0000027C C3                  <1> 	ret
   254                              <1> 	
   255                              <1> 	
   256                              <1> vV_io_get:						;convert inputed value to 
   257                              <1> 							;32bit int, push it on
   258                              <1> 							;the stack
   259 0000027D E8ADFFFFFF          <1> 	call vV_io_read
   260                              <1> 		
   261                              <1> ;----------------------------------------------	
   262                              <1> 
   263 00000282 53                  <1> 	push rbx				;Save rbx (conversion uses it) 
   264                              <1> 
   265 00000283 89C3                <1> 		mov ebx , eax 			;send char count by ebx
   266 00000285 31FF                <1> 		xor edi , edi 			;zero out counter
   267 00000287 BE[84000000]        <1> 		mov esi , vV_input_buffer	;Set source to I_buffer
   268                              <1> 		
   269                              <1> 
   270 0000028C 41FFD2              <1> 		call r10
   271                              <1> 		
   272 0000028F 5B                  <1> 	pop rbx
   273                              <1> 	
   274                              <1> 		vV_push eax
   274                              <2> 
   274 00000290 418907              <2>  mov DWORD[vV_sp] , %1
   274 00000293 4983C704            <2>  add vV_sp , 4
   274                              <2> 
   275                              <1> 		
   276 00000297 C3                  <1> 		ret
   277                              <1> 
   278                              <1> 
   279                              <1> ;-------------------------------------------------------------------------------
   280                              <1> ;-------------------------------------------------------------------------------
   281                              <1> 
   282                              <1> 
   283                              <1> vV_io_get_char:
   284                              <1> 
   285                              <1> 
   286 00000298 E892FFFFFF          <1> 	call vV_io_read
   287                              <1> 	
   288 0000029D 31D2                <1> 	xor edx , edx
   289                              <1> 	
   290 0000029F 8A1425[84000000]    <1> 	mov dl , [vV_input_buffer]
   291                              <1> 	
   292                              <1> 	vV_push edx
   292                              <2> 
   292 000002A6 418917              <2>  mov DWORD[vV_sp] , %1
   292 000002A9 4983C704            <2>  add vV_sp , 4
   292                              <2> 
   293                              <1> 	
   294 000002AD C3                  <1> 	ret
   295                              <1> 	
   296                              <1> vV_io_get_packed_char:
   297                              <1> 
   298 000002AE C70425[84000000]00- <1> 	mov DWORD [vV_input_buffer] , 0
   298 000002B6 000000              <1>
   299                              <1> 
   300 000002B9 E871FFFFFF          <1> 	call vV_io_read
   301                              <1> 	
   302 000002BE 31D2                <1> 	xor edx , edx
   303                              <1> 	
   304 000002C0 8B1425[84000000]    <1> 	mov edx, [vV_input_buffer]
   305                              <1> 	
   306                              <1> 	vV_push edx
   306                              <2> 
   306 000002C7 418917              <2>  mov DWORD[vV_sp] , %1
   306 000002CA 4983C704            <2>  add vV_sp , 4
   306                              <2> 
   307                              <1> 	
   308 000002CE C3                  <1> 	ret
   309                              <1> 	
   310                              <1> 		
   311                              <1> 		
   312                              <1> 
   313                              <1> 
   314                              <1> 
     8                                  %include "vVc/assembly/w_runtime/vV_ascii.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> segment .text 
     4                              <1> 
     5                              <1> 
     6                              <1> 
     7                              <1> 
     8                              <1> vV_ascii_as_hex2:						;Jumped to from parse_num OR called
     9                              <1> 								;use edi as counter/offset in string !Set if direct call
    10                              <1> 								;use esi as source string
    11                              <1> 								;concatenate result in eax
    12                              <1> 								;parse digit in cl
    13                              <1> 								
    14                              <1> 								;use r8 for base
    15                              <1> 								;use r9 for max_value
    16                              <1> 								
    17                              <1> 							
    18                              <1> 	;mov r8 , 16	
    19                              <1> 	
    20                              <1> 	.start_loop:
    21                              <1> 	
    22 000002CF 678A0C3E            <1> 		mov cl , [esi + edi]
    23                              <1> 	
    24                              <1> 		
    25 000002D3 80F930              <1> 		cmp cl , 48
    26                              <1> 		
    27 000002D6 7265                <1> 			jb vV_ascii_unvalid
    28                              <1> 			
    29 000002D8 80F93A              <1> 		cmp cl , 58
    30                              <1> 		
    31 000002DB 720D                <1> 			jb .pass_int
    32                              <1> 			
    33 000002DD 80F966              <1> 			cmp cl , 'f'
    34                              <1> 			
    35 000002E0 775B                <1> 				ja vV_ascii_unvalid
    36                              <1> 			
    37 000002E2 80F961              <1> 			cmp cl , 'a'
    38                              <1> 			
    39 000002E5 7256                <1> 				jb vV_ascii_unvalid
    40                              <1> 				
    41 000002E7 80E927              <1> 			sub cl , 39
    42                              <1> 				
    43                              <1> 			
    44                              <1> 		.pass_int:	
    45                              <1> 			
    46 000002EA 80E930              <1> 		sub cl , '0'
    47                              <1> 		
    48                              <1> 		
    49                              <1> 		
    50 000002ED 31D2                <1> 		xor edx , edx
    51                              <1> 		
    52 000002EF F8                  <1> 		clc
    53                              <1> 		
    54 000002F0 41F7E0              <1> 		mul r8d
    55                              <1> 		
    56 000002F3 725D                <1> 		jc vV_ascii_overflow
    57                              <1> 		
    58 000002F5 01C8                <1> 		add eax , ecx
    59                              <1> 		
    60                              <1> 		.pass02:
    61                              <1> 		
    62 000002F7 FFC7                <1> 		inc edi
    63                              <1> 		
    64 000002F9 39DF                <1> 		cmp edi , ebx
    65                              <1> 		
    66 000002FB 72D2                <1> 		jb .start_loop
    67                              <1> 
    68                              <1> 		
    69 000002FD C3                  <1> 		ret	
    70                              <1> 		
    71                              <1> 		
    72                              <1> ;
    73                              <1> ;				ebx		esi
    74                              <1> ;	ascii_to_format( buffer_size , buffer_adress ) 
    75                              <1> ;		
    76                              <1> ;
    77                              <1> ;	set:	rcx,rdx (rax) to 0
    78                              <1> ;		r8,r9
    79                              <1> ;		
    80                              <1> ;	call: specialized dexodefunction
    81                              <1> 		
    82                              <1> vV_ascii_as_hex:
    83                              <1> 	
    84 000002FE FFCB                <1> 	dec ebx
    85 00000300 41B810000000        <1> 	mov r8 , 16	
    86 00000306 4831C0              <1> 	xor rax , rax 		;(just in case not switching from dec mode)			
    87 00000309 4831C9              <1> 	xor rcx , rcx
    88 0000030C 4831D2              <1> 	xor rdx , rdx
    89 0000030F EBBE                <1> 	jmp vV_ascii_as_hex2
    90                              <1> 
    91                              <1> vV_ascii_as_dec:
    92                              <1> 
    93 00000311 FFCB                <1> 	dec ebx
    94 00000313 41B80A000000        <1> 	mov r8 , 10			
    95 00000319 41B93A000000        <1> 	mov r9 , 58
    96 0000031F 4831C9              <1> 	xor rcx , rcx
    97 00000322 4831D2              <1> 	xor rdx , rdx
    98 00000325 EB5E                <1> 	jmp vV_ascii_as_decbin
    99                              <1> 
   100                              <1> vV_ascii_as_bin:
   101                              <1> 
   102 00000327 FFCB                <1> 	dec ebx
   103 00000329 41B802000000        <1> 	mov r8 , 2			
   104 0000032F 41B932000000        <1> 	mov r9 , 50
   105 00000335 4831C9              <1> 	xor rcx , rcx
   106 00000338 4831D2              <1> 	xor rdx , rdx
   107                              <1> 	
   108 0000033B EB48                <1> 	jmp vV_ascii_as_decbin
   109                              <1> 	
   110                              <1> vV_ascii_unvalid:
   111                              <1> 	
   112                              <1> 		;mov rax , 24;	#TODO: Defined Errors code/ data in file
   113                              <1> 		;xor rdx , rdx
   114                              <1> 		;mov dl , cl
   115                              <1> 		
   116                              <1> 		;call w_forced_exit
   117                              <1> 		
   118 0000033D 50                  <1> 		push rax
   119 0000033E 53                  <1> 		push rbx
   120                              <1> 		
   121 0000033F B403                <1> 		mov ah , vV_ERR_IO_I_UNVALID
   122 00000341 6683C800            <1> 		or ax , 0
   123 00000345 4831DB              <1> 		xor rbx , rbx
   124 00000348 88CB                <1> 		mov bl , cl
   125                              <1> 		
   126 0000034A E822FDFFFF          <1> 		call vV_error
   127                              <1> 		
   128 0000034F 5B                  <1> 		pop rbx
   129 00000350 58                  <1> 		pop rax
   130                              <1> 		
   131 00000351 C3                  <1> 		ret
   132                              <1> 		
   133                              <1> 		
   134                              <1> 		
   135                              <1> 		
   136                              <1> vV_ascii_overflow:
   137                              <1> 	
   138 00000352 50                  <1> 		push rax
   139 00000353 53                  <1> 		push rbx
   140                              <1> 		
   141 00000354 4831DB              <1> 		xor rbx , rbx
   142 00000357 4889C3              <1> 		mov rbx , rax
   143                              <1> 		
   144                              <1> 		;or rbx , 0x00010000
   145                              <1> 		
   146 0000035A B401                <1> 		mov ah , vV_ERR_IO_I_OVERFLOW
   147 0000035C 6683C800            <1> 		or ax , 0
   148                              <1> 		
   149                              <1> 		
   150                              <1> 		
   151 00000360 E80CFDFFFF          <1> 		call vV_error
   152                              <1> 		
   153 00000365 5B                  <1> 		pop rbx
   154 00000366 58                  <1> 		pop rax
   155                              <1> 		
   156                              <1> 		;TODO: Maybe use vV_error return value for decision making
   157                              <1> 		
   158 00000367 B8FFFFFFFF          <1> 		mov eax , -1
   159                              <1> 		
   160 0000036C C3                  <1> 		ret
   161                              <1> 		
   162                              <1> 		
   163                              <1> vV_ascii_change_to_hex:
   164                              <1> 		
   165 0000036D 83F800              <1> 		cmp eax , 0
   166                              <1> 			
   167 00000370 75CB                <1> 			jne vV_ascii_unvalid
   168                              <1> 			
   169 00000372 41B810000000        <1> 		mov r8 , 16
   170 00000378 4831C9              <1> 		xor rcx , rcx
   171 0000037B 4831C0              <1> 		xor rax ,rax
   172                              <1> 				
   173 0000037E FFC7                <1> 		inc edi
   174 00000380 E94AFFFFFF          <1> 		jmp vV_ascii_as_hex2		
   175                              <1> 		
   176                              <1> 	
   177                              <1> 
   178                              <1> 
   179                              <1> vV_ascii_as_decbin:						;ebx: number of char to read
   180                              <1> 
   181                              <1> 	
   182                              <1> 
   183                              <1> 								;use edi as counter/offset in string
   184                              <1> 								;concatenate result in eax
   185                              <1> 								;parse digit in cl
   186                              <1> 								
   187                              <1> 								;use r8 for base
   188                              <1> 								;use r9 for max_value					
   189                              <1> 								;itou
   190                              <1> 	;xor edi, edi			;should be set by caller
   191 00000385 4831C0              <1> 	xor rax , rax
   192                              <1> 	
   193 00000388 4831C9              <1> 	xor rcx , rcx
   194                              <1> 	
   195 0000038B 4831D2              <1> 	xor rdx , rdx
   196                              <1> 	
   197                              <1> 	
   198                              <1> 	.start_loop:
   199                              <1> 	
   200 0000038E 678A0C3E            <1> 		mov cl , [esi + edi]
   201                              <1> 		
   202                              <1> 		
   203 00000392 80F962              <1> 		cmp cl , 'b'										
   204 00000395 7513                <1> 			jne .pass01
   205                              <1> 		
   206                              <1> 		.format_change:
   207                              <1> 			
   208 00000397 83F800              <1> 			cmp eax , 0
   209                              <1> 			
   210 0000039A 75A1                <1> 				jne vV_ascii_unvalid
   211                              <1> 				
   212 0000039C 41B802000000        <1> 			mov r8 , 2
   213                              <1> 			
   214 000003A2 41B932000000        <1> 			mov r9 , 50
   215                              <1> 	
   216 000003A8 EB26                <1> 			jmp .pass02
   217                              <1> 		
   218                              <1> 		
   219                              <1> 	
   220                              <1> 		.pass01:
   221                              <1> 		
   222 000003AA 80F968              <1> 		cmp cl , 'h'											
   223 000003AD 74BE                <1> 			je vV_ascii_change_to_hex
   224 000003AF 80F978              <1> 		cmp cl , 'x'											
   225 000003B2 74B9                <1> 			je vV_ascii_change_to_hex
   226                              <1> 			
   227                              <1> 			
   228 000003B4 4438C9              <1> 		cmp cl , r9b
   229                              <1> 		
   230 000003B7 7384                <1> 			jae vV_ascii_unvalid
   231                              <1> 		
   232 000003B9 80F930              <1> 		cmp cl , 48
   233                              <1> 		
   234 000003BC 0F827BFFFFFF        <1> 			jb vV_ascii_unvalid
   235                              <1> 			
   236                              <1> 		
   237                              <1> 			
   238 000003C2 80E930              <1> 		sub cl , 48
   239                              <1> 		
   240 000003C5 4831D2              <1> 		xor rdx , rdx
   241 000003C8 F8                  <1> 		clc
   242                              <1> 		
   243 000003C9 41F7E0              <1> 		mul r8d
   244                              <1> 		
   245 000003CC 7284                <1> 		jc vV_ascii_overflow
   246                              <1> 		
   247 000003CE 01C8                <1> 		add eax , ecx
   248                              <1> 		
   249                              <1> 		.pass02:
   250                              <1> 		
   251 000003D0 FFC7                <1> 		inc edi
   252                              <1> 		
   253 000003D2 39DF                <1> 		cmp edi , ebx
   254                              <1> 		
   255 000003D4 72B8                <1> 		jb .start_loop
   256                              <1> 		
   257                              <1> 		
   258 000003D6 C3                  <1> 		ret			; result should be in eax
   259                              <1> 		
   260                              <1> 
   261                              <1> 	
   262                              <1> ;------------------------------------------------------------------------------------------
   263                              <1> ;------------------------------------------------------------------------------------------
   264                              <1> 
   265                              <1> 
   266                              <1> 
   267                              <1> vV_ascii_int_to_hex:					;value in eax
   268                              <1> 						;dest in rdi
   269                              <1> 
   270                              <1> 
   271                              <1> 
   272 000003D7 31C9                <1> 	xor ecx , ecx	
   273                              <1> 	
   274 000003D9 BE10000000          <1> 	mov esi , 16
   275                              <1> 
   276                              <1> 	
   277                              <1> 	.loop01:
   278                              <1> 	
   279 000003DE 4831D2              <1> 		xor rdx , rdx
   280                              <1> 		
   281 000003E1 F7F6                <1> 		div esi
   282                              <1> 		
   283                              <1> 		
   284 000003E3 80FA0A              <1> 		cmp dl , 10
   285                              <1> 		
   286 000003E6 7203                <1> 		jb .dec
   287                              <1> 		
   288 000003E8 80C207              <1> 			add dl , 7
   289                              <1> 		
   290                              <1> 		.dec:
   291                              <1> 		
   292 000003EB 80C230              <1> 			add dl , '0'
   293                              <1> 		
   294                              <1> 		
   295 000003EE 52                  <1> 		push rdx
   296                              <1> 		
   297 000003EF FFC1                <1> 		inc ecx
   298                              <1> 		
   299 000003F1 39F0                <1> 		cmp eax , esi
   300                              <1> 		
   301 000003F3 73E9                <1> 		jae .loop01
   302                              <1> 	
   303                              <1> 	
   304 000003F5 3C0A                <1> 	cmp al , 10
   305                              <1> 		
   306 000003F7 7202                <1> 		jb .dec2
   307                              <1> 		
   308 000003F9 0407                <1> 			add al , 7
   309                              <1> 		
   310                              <1> 		.dec2:
   311                              <1> 		
   312 000003FB 0430                <1> 			add al , '0'	
   313 000003FD 8807                <1> 	mov [rdi] , al
   314                              <1> 	
   315 000003FF EB1B                <1> 	jmp vV_ascii_pop_digits
   316                              <1> 		
   317                              <1> 	
   318                              <1> 	
   319                              <1> 	
   320                              <1> vV_ascii_int_to_dec:					;value in eax
   321                              <1> 						;dest in rdi
   322                              <1> 						;max_dest_size in r9d
   323                              <1> 
   324                              <1> 
   325                              <1> 
   326 00000401 31C9                <1> 	xor ecx , ecx	
   327                              <1> 	
   328 00000403 BE0A000000          <1> 	mov esi , 10
   329                              <1> 	
   330                              <1> 
   331                              <1> 
   332                              <1> 	
   333                              <1> 	.loop01:
   334                              <1> 	
   335 00000408 4831D2              <1> 		xor rdx , rdx
   336                              <1> 		
   337 0000040B F7F6                <1> 		div esi
   338                              <1> 		
   339                              <1> 		
   340 0000040D 80C230              <1> 		add dl , '0'
   341 00000410 52                  <1> 		push rdx
   342                              <1> 		
   343 00000411 FFC1                <1> 		inc ecx
   344                              <1> 		
   345 00000413 83F80A              <1> 		cmp eax , 10
   346                              <1> 		
   347 00000416 73F0                <1> 		jae .loop01
   348                              <1> 	
   349 00000418 0430                <1> 	add al , '0'	
   350 0000041A 8807                <1> 	mov [rdi] , al
   351                              <1> 		
   352                              <1> 	
   353                              <1> 		
   354                              <1> vV_ascii_pop_digits:			; Need nb of digits currently on stack(ecx)
   355                              <1> 						;dest in rdi
   356 0000041C 41B801000000        <1> 		mov r8d , 1
   357 00000422 FFC1                <1> 		inc ecx
   358                              <1> 		
   359 00000424 4439C9              <1> 		cmp ecx , r9d
   360                              <1> 		
   361 00000427 7219                <1> 		jb .loopstart
   362                              <1> 		
   363                              <1> 	
   364 00000429 50                  <1> 			push rax
   365 0000042A 53                  <1> 			push rbx
   366                              <1> 		
   367 0000042B B410                <1> 			mov ah , vV_ERR_MEMORY_BUFFER_LIMIT
   368 0000042D 6683C800            <1> 			or ax , 0
   369 00000431 4831DB              <1> 			xor rbx , rbx
   370 00000434 89FB                <1> 			mov ebx , edi
   371                              <1> 		
   372 00000436 E836FCFFFF          <1> 			call vV_error
   373                              <1> 		
   374 0000043B 5B                  <1> 			pop rbx
   375 0000043C 58                  <1> 			pop rax
   376                              <1> 			
   377 0000043D 4489C9              <1> 			mov ecx , r9d		;Should protect memory..
   378 00000440 FFC9                <1> 			dec ecx		;will need testing
   379                              <1> 		
   380                              <1> 						
   381                              <1> 		.loopstart:
   382                              <1> 		
   383 00000442 5A                  <1> 			pop rdx
   384 00000443 6742881407          <1> 			mov BYTE[edi + r8d] , dl
   385 00000448 41FFC0              <1> 			inc r8d
   386                              <1> 			
   387 0000044B 4139C8              <1> 			cmp r8d , ecx
   388                              <1> 		
   389 0000044E 72F2                <1> 		jb .loopstart
   390                              <1> 	
   391                              <1> 	
   392 00000450 89C8                <1> 		mov eax , ecx
   393                              <1> 		
   394 00000452 C3                  <1> 		ret	
   395                              <1> 	
   396                              <1> 	
   397                              <1> vV_ascii_int_to_bin:					;value in eax, 
   398                              <1> 							
   399                              <1> 
   400                              <1> 
   401 00000453 31C9                <1> 	xor ecx , ecx
   402                              <1> 	
   403                              <1> 	
   404                              <1> 	.loop01:
   405                              <1> 	
   406                              <1> 		
   407 00000455 D1E8                <1> 		shr eax , 1
   408                              <1> 		
   409 00000457 7205                <1> 		jc .one
   410                              <1> 		
   411 00000459 B230                <1> 			mov dl , '0'
   412 0000045B 52                  <1> 			push rdx
   413                              <1> 			
   414 0000045C EB03                <1> 		jmp .next
   415                              <1> 		.one:
   416                              <1> 			
   417 0000045E B231                <1> 			mov dl , '1'
   418 00000460 52                  <1> 			push rdx
   419                              <1> 		
   420                              <1> 		.next:
   421                              <1> 		
   422 00000461 FFC1                <1> 		inc ecx
   423                              <1> 		
   424 00000463 83F801              <1> 		cmp eax , 1
   425                              <1> 		
   426 00000466 77ED                <1> 		ja .loop01
   427                              <1> 	
   428 00000468 0430                <1> 	add al , '0'	
   429 0000046A 8807                <1> 	mov [rdi] , al
   430                              <1> 	
   431 0000046C EBAE                <1> 	jmp vV_ascii_pop_digits
   432                              <1> 	
   433                              <1> 	
   434                              <1> ;Will need a special version for String stack
   435                              <1> 
   436                              <1> 
   437                              <1> 
   438                              <1> 
   439                              <1> 
   440                              <1> 
   441                              <1> 
     9                                  %include "vVc/assembly/w_runtime/vV_system90.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	
     5                              <1> 	
     6                              <1> 	stacks: 
     7                              <1> 
     8                              <1> 
     9 00000286 <res 00040000>      <1> 	string_stack_start: resb 262144
    10                              <1> 
    11                              <1> 
    12                              <1> 	
    13                              <1> 	
    14                              <1> 						
    15 00040286 <res 00020000>      <1> 	fake_stack_start: resb 131072
    10                                  
    11                                  
    12                                  
    13                                  global w_entry_point
    14                                  
    15                                  
    16                                  
    17                                  segment .text 
    18                                  
    19                                  
    20                                  
    21                                  
    22                                  	wblock_0:		
    23                                  
    24                                  ;------------------------------------------------------
    25                                  
    26                                  
    27                                  
    28                                  	xprint:		
    29                                  
    30                                  ;------------------------------------------------------
    31                                  
    32                                  
    33                                   ;OpADR: [0]  ; SWAP opcode 
    34                                  
    35                                  
    36                                  	vV_swap		
    36                              <1> 
    36 0000046E 418B57FC            <1>  mov edx , [vV_sp-4]
    36 00000472 418B47F8            <1>  mov eax , [vV_sp-8]
    36 00000476 418957F8            <1>  mov [vV_sp-8] , edx
    36 0000047A 418947FC            <1>  mov [vV_sp-4] , eax
    36                              <1> 
    37                                  
    38                                  
    39                                   ;OpADR: [1]  ; BUFF_OUT opcode (9)			
    40                                  
    41                                  
    42 0000047E E855FDFFFF              	call vV_io_out_packed_char_buffer				
    43                                  						
    44                                  
    45                                   ;OpADR: [2]  ; PUSH opcode 
    46                                  
    47                                  	vV_push 1 
    47                              <1> 
    47 00000483 41C70701000000      <1>  mov DWORD[vV_sp] , %1
    47 0000048A 4983C704            <1>  add vV_sp , 4
    47                              <1> 
    48                                  
    49                                  
    50                                   ;OpADR: [3]  ; SUB opcode 					
    51                                  
    52 0000048E 418B47F8                	mov eax , vV_2nd			
    53 00000492 412B47FC                	sub eax , vV_top			
    54 00000496 418947F8                	mov vV_2nd, eax			
    55                                  
    56                                  	vV_dec_sp 1		
    56                              <1> 
    56 0000049A 4983EF04            <1>  sub vV_sp , cell(%1)
    56                              <1> 
    57                                  
    58                                   ;OpADR: [4]  ; DUP opcode (1)			
    59                                  
    60                                  	vV_dup 1			
    60                              <1> 
    60 0000049E B901000000          <1>  mov ecx , %1
    60 000004A3 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
    60 000004A7 4C89FF              <1>  mov rdi , vV_sp
    60                              <1> 
    60 000004AA F3A5                <1>  rep movsd
    60                              <1> 
    60 000004AC 4983C704            <1>  add vV_sp , cell(%1)
    60                              <1> 
    61                                  
    62                                  
    63                                   ;OpADR: [5]  ; PUSH opcode 
    64                                  
    65                                  	vV_push 0 
    65                              <1> 
    65 000004B0 41C70700000000      <1>  mov DWORD[vV_sp] , %1
    65 000004B7 4983C704            <1>  add vV_sp , 4
    65                              <1> 
    66                                  
    67                                  
    68                                   ;OpADR: [6]  ; MORE opcode					
    69                                  
    70 000004BB 418B47FC                	mov eax , vV_top			
    71 000004BF 413947F8                	cmp DWORD vV_2nd , eax			
    72                                  
    73 000004C3 76(0B)                  	jbe short 0xb				
    74                                  
    75 000004C5 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
    76                                  
    77 000004CD EB(09)                  	jmp short 0x9				
    78                                  
    79 000004CF 41C747F800000000        			mov DWORD vV_2nd , 0	
    80                                  
    81                                  	vV_dec_sp 1				
    81                              <1> 
    81 000004D7 4983EF04            <1>  sub vV_sp , cell(%1)
    81                              <1> 
    82                                  
    83                                   ;OpADR: [7]  ; WHILE opcode					
    84                                  
    85                                  	vV_dec_sp 1				
    85                              <1> 
    85 000004DB 4983EF04            <1>  sub vV_sp , cell(%1)
    85                              <1> 
    86 000004DF 41830F00                	or DWORD[vV_sp] , 0			
    87 000004E3 7589                    	jne wblock_0		
    88                                  
    89                                   ;OpADR: [8]  ; FLUSH opcode					
    90                                  
    91 000004E5 E822FCFFFF              		call vV_io_flush	
    92                                  
    93                                   ;OpADR: [9]  ; DROP opcode 
    94                                  
    95 000004EA 4983EF04                	sub vV_sp , 4	
    96                                  
    97                                   ;OpADR: [10]  ; End of func opcode					
    98                                  
    99 000004EE C3                      		ret			
   100                                  
   101                                  
   102                                  	quit_cmd:		
   103                                  
   104                                  ;------------------------------------------------------
   105                                  
   106                                  
   107                                   ;OpADR: [11]  ; PUSH opcode 
   108                                  
   109                                  	vV_push 1953068401 
   109                              <1> 
   109 000004EF 41C70771756974      <1>  mov DWORD[vV_sp] , %1
   109 000004F6 4983C704            <1>  add vV_sp , 4
   109                              <1> 
   110                                  
   111                                  
   112                                   ;OpADR: [12]  ; End of func opcode					
   113                                  
   114 000004FA C3                      		ret			
   115                                  
   116                                  
   117                                  	help_cmd:		
   118                                  
   119                                  ;------------------------------------------------------
   120                                  
   121                                  
   122                                   ;OpADR: [13]  ; PUSH opcode 
   123                                  
   124                                  	vV_push 1886152040 
   124                              <1> 
   124 000004FB 41C70768656C70      <1>  mov DWORD[vV_sp] , %1
   124 00000502 4983C704            <1>  add vV_sp , 4
   124                              <1> 
   125                                  
   126                                  
   127                                   ;OpADR: [14]  ; End of func opcode					
   128                                  
   129 00000506 C3                      		ret			
   130                                  
   131                                  
   132                                  	calc_cmd:		
   133                                  
   134                                  ;------------------------------------------------------
   135                                  
   136                                  
   137                                   ;OpADR: [15]  ; PUSH opcode 
   138                                  
   139                                  	vV_push 1668047203 
   139                              <1> 
   139 00000507 41C70763616C63      <1>  mov DWORD[vV_sp] , %1
   139 0000050E 4983C704            <1>  add vV_sp , 4
   139                              <1> 
   140                                  
   141                                  
   142                                   ;OpADR: [16]  ; End of func opcode					
   143                                  
   144 00000512 C3                      		ret			
   145                                  
   146                                  
   147                                  	frmt_cmd:		
   148                                  
   149                                  ;------------------------------------------------------
   150                                  
   151                                  
   152                                   ;OpADR: [17]  ; PUSH opcode 
   153                                  
   154                                  	vV_push 1953329766 
   154                              <1> 
   154 00000513 41C70766726D74      <1>  mov DWORD[vV_sp] , %1
   154 0000051A 4983C704            <1>  add vV_sp , 4
   154                              <1> 
   155                                  
   156                                  
   157                                   ;OpADR: [18]  ; End of func opcode					
   158                                  
   159 0000051E C3                      		ret			
   160                                  
   161                                  
   162                                  	help:		
   163                                  
   164                                  ;------------------------------------------------------
   165                                  
   166                                  
   167                                   ;OpADR: [19]  ; Function Call					
   168                                  
   169 0000051F E8CBFFFFFF              		call quit_cmd			
   170                                  
   171                                   ;OpADR: [20]  ; Function Call					
   172                                  
   173 00000524 E8D2FFFFFF              		call help_cmd			
   174                                  
   175                                   ;OpADR: [21]  ; Function Call					
   176                                  
   177 00000529 E8D9FFFFFF              		call calc_cmd			
   178                                  
   179                                   ;OpADR: [22]  ; Function Call					
   180                                  
   181 0000052E E8E0FFFFFF              		call frmt_cmd			
   182                                  
   183                                   ;OpADR: [23]  ; BUFF_OUT opcode (9)			
   184                                  
   185                                  
   186 00000533 E8A0FCFFFF              	call vV_io_out_packed_char_buffer				
   187                                  						
   188                                  
   189                                   ;OpADR: [24]  ; PUSH opcode 
   190                                  
   191                                  	vV_push 1346983712 
   191                              <1> 
   191 00000538 41C70720574950      <1>  mov DWORD[vV_sp] , %1
   191 0000053F 4983C704            <1>  add vV_sp , 4
   191                              <1> 
   192                                  
   193                                  
   194                                   ;OpADR: [25]  ; BUFF_OUT opcode (9)			
   195                                  
   196                                  
   197 00000543 E890FCFFFF              	call vV_io_out_packed_char_buffer				
   198                                  						
   199                                  
   200                                   ;OpADR: [26]  ; FLUSH opcode					
   201                                  
   202 00000548 E8BFFBFFFF              		call vV_io_flush	
   203                                  
   204                                   ;OpADR: [27]  ; BUFF_OUT opcode (9)			
   205                                  
   206                                  
   207 0000054D E886FCFFFF              	call vV_io_out_packed_char_buffer				
   208                                  						
   209                                  
   210                                   ;OpADR: [28]  ; PUSH opcode 
   211                                  
   212                                  	vV_push 541806368 
   212                              <1> 
   212 00000552 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   212 00000559 4983C704            <1>  add vV_sp , 4
   212                              <1> 
   213                                  
   214                                  
   215                                   ;OpADR: [29]  ; BUFF_OUT opcode (9)			
   216                                  
   217                                  
   218 0000055D E876FCFFFF              	call vV_io_out_packed_char_buffer				
   219                                  						
   220                                  
   221                                   ;OpADR: [30]  ; FLUSH opcode					
   222                                  
   223 00000562 E8A5FBFFFF              		call vV_io_flush	
   224                                  
   225                                   ;OpADR: [31]  ; BUFF_OUT opcode (9)			
   226                                  
   227                                  
   228 00000567 E86CFCFFFF              	call vV_io_out_packed_char_buffer				
   229                                  						
   230                                  
   231                                   ;OpADR: [32]  ; PUSH opcode 
   232                                  
   233                                  	vV_push 541806368 
   233                              <1> 
   233 0000056C 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   233 00000573 4983C704            <1>  add vV_sp , 4
   233                              <1> 
   234                                  
   235                                  
   236                                   ;OpADR: [33]  ; BUFF_OUT opcode (9)			
   237                                  
   238                                  
   239 00000577 E85CFCFFFF              	call vV_io_out_packed_char_buffer				
   240                                  						
   241                                  
   242                                   ;OpADR: [34]  ; FLUSH opcode					
   243                                  
   244 0000057C E88BFBFFFF              		call vV_io_flush	
   245                                  
   246                                   ;OpADR: [35]  ; BUFF_OUT opcode (9)			
   247                                  
   248                                  
   249 00000581 E852FCFFFF              	call vV_io_out_packed_char_buffer				
   250                                  						
   251                                  
   252                                   ;OpADR: [36]  ; PUSH opcode 
   253                                  
   254                                  	vV_push 541806368 
   254                              <1> 
   254 00000586 41C707204F4B20      <1>  mov DWORD[vV_sp] , %1
   254 0000058D 4983C704            <1>  add vV_sp , 4
   254                              <1> 
   255                                  
   256                                  
   257                                   ;OpADR: [37]  ; BUFF_OUT opcode (9)			
   258                                  
   259                                  
   260 00000591 E842FCFFFF              	call vV_io_out_packed_char_buffer				
   261                                  						
   262                                  
   263                                   ;OpADR: [38]  ; FLUSH opcode					
   264                                  
   265 00000596 E871FBFFFF              		call vV_io_flush	
   266                                  
   267                                   ;OpADR: [39]  ; End of func opcode					
   268                                  
   269 0000059B C3                      		ret			
   270                                  
   271                                  
   272                                  	welcome_msg:		
   273                                  
   274                                  ;------------------------------------------------------
   275                                  
   276                                  
   277                                   ;OpADR: [40]  ; PUSH opcode 
   278                                  
   279                                  	vV_push 1684890400 
   279                              <1> 
   279 0000059C 41C70720636D64      <1>  mov DWORD[vV_sp] , %1
   279 000005A3 4983C704            <1>  add vV_sp , 4
   279                              <1> 
   280                                  
   281                                  
   282                                   ;OpADR: [41]  ; PUSH opcode 
   283                                  
   284                                  	vV_push 1718558836 
   284                              <1> 
   284 000005A7 41C70774206F66      <1>  mov DWORD[vV_sp] , %1
   284 000005AE 4983C704            <1>  add vV_sp , 4
   284                              <1> 
   285                                  
   286                                  
   287                                   ;OpADR: [42]  ; PUSH opcode 
   288                                  
   289                                  	vV_push 1936288800 
   289                              <1> 
   289 000005B2 41C707206C6973      <1>  mov DWORD[vV_sp] , %1
   289 000005B9 4983C704            <1>  add vV_sp , 4
   289                              <1> 
   290                                  
   291                                  
   292                                   ;OpADR: [43]  ; PUSH opcode 
   293                                  
   294                                  	vV_push 1629516399 
   294                              <1> 
   294 000005BD 41C7076F722061      <1>  mov DWORD[vV_sp] , %1
   294 000005C4 4983C704            <1>  add vV_sp , 4
   294                              <1> 
   295                                  
   296                                  
   297                                   ;OpADR: [44]  ; PUSH opcode 
   298                                  
   299                                  	vV_push 1713381488 
   299                              <1> 
   299 000005C8 41C70770202066      <1>  mov DWORD[vV_sp] , %1
   299 000005CF 4983C704            <1>  add vV_sp , 4
   299                              <1> 
   300                                  
   301                                  
   302                                   ;OpADR: [45]  ; PUSH opcode 
   303                                  
   304                                  	vV_push 1818585120 
   304                              <1> 
   304 000005D3 41C7072068656C      <1>  mov DWORD[vV_sp] , %1
   304 000005DA 4983C704            <1>  add vV_sp , 4
   304                              <1> 
   305                                  
   306                                  
   307                                   ;OpADR: [46]  ; PUSH opcode 
   308                                  
   309                                  	vV_push 1701869908 
   309                              <1> 
   309 000005DE 41C70754797065      <1>  mov DWORD[vV_sp] , %1
   309 000005E5 4983C704            <1>  add vV_sp , 4
   309                              <1> 
   310                                  
   311                                  
   312                                   ;OpADR: [47]  ; PUSH opcode 
   313                                  
   314                                  	vV_push 7 
   314                              <1> 
   314 000005E9 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   314 000005F0 4983C704            <1>  add vV_sp , 4
   314                              <1> 
   315                                  
   316                                  
   317                                   ;OpADR: [48]  ; End of func opcode					
   318                                  
   319 000005F4 C3                      		ret			
   320                                  
   321                                  
   322                                  	goodbye_msg:		
   323                                  
   324                                  ;------------------------------------------------------
   325                                  
   326                                  
   327                                   ;OpADR: [49]  ; PUSH opcode 
   328                                  
   329                                  	vV_push 539572768 
   329                              <1> 
   329 000005F5 41C707203A2920      <1>  mov DWORD[vV_sp] , %1
   329 000005FC 4983C704            <1>  add vV_sp , 4
   329                              <1> 
   330                                  
   331                                  
   332                                   ;OpADR: [50]  ; PUSH opcode 
   333                                  
   334                                  	vV_push 543521122 
   334                              <1> 
   334 00000600 41C70762796520      <1>  mov DWORD[vV_sp] , %1
   334 00000607 4983C704            <1>  add vV_sp , 4
   334                              <1> 
   335                                  
   336                                  
   337                                   ;OpADR: [51]  ; PUSH opcode 
   338                                  
   339                                  	vV_push 1685024583 
   339                              <1> 
   339 0000060B 41C707476F6F64      <1>  mov DWORD[vV_sp] , %1
   339 00000612 4983C704            <1>  add vV_sp , 4
   339                              <1> 
   340                                  
   341                                  
   342                                   ;OpADR: [52]  ; PUSH opcode 
   343                                  
   344                                  	vV_push 3 
   344                              <1> 
   344 00000616 41C70703000000      <1>  mov DWORD[vV_sp] , %1
   344 0000061D 4983C704            <1>  add vV_sp , 4
   344                              <1> 
   345                                  
   346                                  
   347                                   ;OpADR: [53]  ; End of func opcode					
   348                                  
   349 00000621 C3                      		ret			
   350                                  
   351                                  
   352                                  	calc_msg01:		
   353                                  
   354                                  ;------------------------------------------------------
   355                                  
   356                                  
   357                                   ;OpADR: [54]  ; PUSH opcode 
   358                                  
   359                                  	vV_push 540701285 
   359                              <1> 
   359 00000622 41C70765723A20      <1>  mov DWORD[vV_sp] , %1
   359 00000629 4983C704            <1>  add vV_sp , 4
   359                              <1> 
   360                                  
   361                                  
   362                                   ;OpADR: [55]  ; PUSH opcode 
   363                                  
   364                                  	vV_push 1651340654 
   364                              <1> 
   364 0000062D 41C7076E756D62      <1>  mov DWORD[vV_sp] , %1
   364 00000634 4983C704            <1>  add vV_sp , 4
   364                              <1> 
   365                                  
   366                                  
   367                                   ;OpADR: [56]  ; PUSH opcode 
   368                                  
   369                                  	vV_push 543236210 
   369                              <1> 
   369 00000638 41C70772206120      <1>  mov DWORD[vV_sp] , %1
   369 0000063F 4983C704            <1>  add vV_sp , 4
   369                              <1> 
   370                                  
   371                                  
   372                                   ;OpADR: [57]  ; PUSH opcode 
   373                                  
   374                                  	vV_push 1702129221 
   374                              <1> 
   374 00000643 41C707456E7465      <1>  mov DWORD[vV_sp] , %1
   374 0000064A 4983C704            <1>  add vV_sp , 4
   374                              <1> 
   375                                  
   376                                  
   377                                   ;OpADR: [58]  ; PUSH opcode 
   378                                  
   379                                  	vV_push 4 
   379                              <1> 
   379 0000064E 41C70704000000      <1>  mov DWORD[vV_sp] , %1
   379 00000655 4983C704            <1>  add vV_sp , 4
   379                              <1> 
   380                                  
   381                                  
   382                                   ;OpADR: [59]  ; End of func opcode					
   383                                  
   384 00000659 C3                      		ret			
   385                                  
   386                                  
   387                                  	calc_msg02:		
   388                                  
   389                                  ;------------------------------------------------------
   390                                  
   391                                  
   392                                   ;OpADR: [60]  ; PUSH opcode 
   393                                  
   394                                  	vV_push 695495029 
   394                              <1> 
   394 0000065A 41C70775697429      <1>  mov DWORD[vV_sp] , %1
   394 00000661 4983C704            <1>  add vV_sp , 4
   394                              <1> 
   395                                  
   396                                  
   397                                   ;OpADR: [61]  ; PUSH opcode 
   398                                  
   399                                  	vV_push 1897951092 
   399                              <1> 
   399 00000665 41C707746F2071      <1>  mov DWORD[vV_sp] , %1
   399 0000066C 4983C704            <1>  add vV_sp , 4
   399                              <1> 
   400                                  
   401                                  
   402                                   ;OpADR: [62]  ; PUSH opcode 
   403                                  
   404                                  	vV_push 544286752 
   404                              <1> 
   404 00000670 41C70720287120      <1>  mov DWORD[vV_sp] , %1
   404 00000677 4983C704            <1>  add vV_sp , 4
   404                              <1> 
   405                                  
   406                                  
   407                                   ;OpADR: [63]  ; PUSH opcode 
   408                                  
   409                                  	vV_push 979660385 
   409                              <1> 
   409 0000067B 41C707616E643A      <1>  mov DWORD[vV_sp] , %1
   409 00000682 4983C704            <1>  add vV_sp , 4
   409                              <1> 
   410                                  
   411                                  
   412                                   ;OpADR: [64]  ; PUSH opcode 
   413                                  
   414                                  	vV_push 1919250543 
   414                              <1> 
   414 00000686 41C7076F706572      <1>  mov DWORD[vV_sp] , %1
   414 0000068D 4983C704            <1>  add vV_sp , 4
   414                              <1> 
   415                                  
   416                                  
   417                                   ;OpADR: [65]  ; PUSH opcode 
   418                                  
   419                                  	vV_push 543236210 
   419                              <1> 
   419 00000691 41C70772206120      <1>  mov DWORD[vV_sp] , %1
   419 00000698 4983C704            <1>  add vV_sp , 4
   419                              <1> 
   420                                  
   421                                  
   422                                   ;OpADR: [66]  ; PUSH opcode 
   423                                  
   424                                  	vV_push 1702129221 
   424                              <1> 
   424 0000069C 41C707456E7465      <1>  mov DWORD[vV_sp] , %1
   424 000006A3 4983C704            <1>  add vV_sp , 4
   424                              <1> 
   425                                  
   426                                  
   427                                   ;OpADR: [67]  ; PUSH opcode 
   428                                  
   429                                  	vV_push 7 
   429                              <1> 
   429 000006A7 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   429 000006AE 4983C704            <1>  add vV_sp , 4
   429                              <1> 
   430                                  
   431                                  
   432                                   ;OpADR: [68]  ; End of func opcode					
   433                                  
   434 000006B2 C3                      		ret			
   435                                  
   436                                  
   437                                  	calc_msg03:		
   438                                  
   439                                  ;------------------------------------------------------
   440                                  
   441                                  
   442                                   ;OpADR: [69]  ; PUSH opcode 
   443                                  
   444                                  	vV_push 6581857 
   444                              <1> 
   444 000006B3 41C707616E6400      <1>  mov DWORD[vV_sp] , %1
   444 000006BA 4983C704            <1>  add vV_sp , 4
   444                              <1> 
   445                                  
   446                                  
   447                                   ;OpADR: [70]  ; PUSH opcode 
   448                                  
   449                                  	vV_push 1919250543 
   449                              <1> 
   449 000006BE 41C7076F706572      <1>  mov DWORD[vV_sp] , %1
   449 000006C5 4983C704            <1>  add vV_sp , 4
   449                              <1> 
   450                                  
   451                                  
   452                                   ;OpADR: [71]  ; PUSH opcode 
   453                                  
   454                                  	vV_push 543451500 
   454                              <1> 
   454 000006C9 41C7076C696420      <1>  mov DWORD[vV_sp] , %1
   454 000006D0 4983C704            <1>  add vV_sp , 4
   454                              <1> 
   455                                  
   456                                  
   457                                   ;OpADR: [72]  ; PUSH opcode 
   458                                  
   459                                  	vV_push 1635151433 
   459                              <1> 
   459 000006D4 41C707496E7661      <1>  mov DWORD[vV_sp] , %1
   459 000006DB 4983C704            <1>  add vV_sp , 4
   459                              <1> 
   460                                  
   461                                  
   462                                   ;OpADR: [73]  ; PUSH opcode 
   463                                  
   464                                  	vV_push 4 
   464                              <1> 
   464 000006DF 41C70704000000      <1>  mov DWORD[vV_sp] , %1
   464 000006E6 4983C704            <1>  add vV_sp , 4
   464                              <1> 
   465                                  
   466                                  
   467                                   ;OpADR: [74]  ; End of func opcode					
   468                                  
   469 000006EA C3                      		ret			
   470                                  
   471                                  
   472                                  	say_welcome:		
   473                                  
   474                                  ;------------------------------------------------------
   475                                  
   476                                  
   477                                   ;OpADR: [75]  ; Function Call					
   478                                  
   479 000006EB E8ACFEFFFF              		call welcome_msg			
   480                                  
   481                                   ;OpADR: [76]  ; Function Call					
   482                                  
   483 000006F0 E879FDFFFF              		call xprint			
   484                                  
   485                                   ;OpADR: [77]  ; End of func opcode					
   486                                  
   487 000006F5 C3                      		ret			
   488                                  
   489                                  
   490                                  	cmd_prompt:		
   491                                  
   492                                  ;------------------------------------------------------
   493                                  
   494                                  
   495                                   ;OpADR: [78]  ; PUSH opcode 
   496                                  
   497                                  	vV_push 979660131 
   497                              <1> 
   497 000006F6 41C707636D643A      <1>  mov DWORD[vV_sp] , %1
   497 000006FD 4983C704            <1>  add vV_sp , 4
   497                              <1> 
   498                                  
   499                                  
   500                                   ;OpADR: [79]  ; OUT opcode (9)			
   501                                  
   502                                  								
   503 00000701 E8BCFAFFFF              	call vV_io_out_packed_char				
   504                                  						
   505                                  
   506                                   ;OpADR: [80]  ; End of func opcode					
   507                                  
   508 00000706 C3                      		ret			
   509                                  
   510                                  
   511                                  	input_cmd:		
   512                                  
   513                                  ;------------------------------------------------------
   514                                  
   515                                  
   516                                   ;OpADR: [81]  ; GET opcode (9)			
   517                                  
   518                                  								
   519 00000707 E8A2FBFFFF              	call vV_io_get_packed_char				
   520                                  						
   521                                  
   522                                   ;OpADR: [82]  ; End of func opcode					
   523                                  
   524 0000070C C3                      		ret			
   525                                  
   526                                  
   527                                  	check_operand:		
   528                                  
   529                                  ;------------------------------------------------------
   530                                  
   531                                  
   532                                   ;OpADR: [83]  ; DUP opcode (1)			
   533                                  
   534                                  	vV_dup 1			
   534                              <1> 
   534 0000070D B901000000          <1>  mov ecx , %1
   534 00000712 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   534 00000716 4C89FF              <1>  mov rdi , vV_sp
   534                              <1> 
   534 00000719 F3A5                <1>  rep movsd
   534                              <1> 
   534 0000071B 4983C704            <1>  add vV_sp , cell(%1)
   534                              <1> 
   535                                  
   536                                  
   537                                   ;OpADR: [84]  ; PUSH opcode 
   538                                  
   539                                  	vV_push 43 
   539                              <1> 
   539 0000071F 41C7072B000000      <1>  mov DWORD[vV_sp] , %1
   539 00000726 4983C704            <1>  add vV_sp , 4
   539                              <1> 
   540                                  
   541                                  
   542                                   ;OpADR: [85]  ; EQUAL opcode					
   543                                  
   544 0000072A 418B47FC                	mov eax , vV_top			
   545 0000072E 413947F8                	cmp DWORD vV_2nd , eax			
   546                                  
   547 00000732 75(0B)                  	jnz short 0xb				
   548                                  
   549 00000734 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   550                                  
   551 0000073C EB(09)                  	jmp short 0x9				
   552                                  
   553 0000073E 41C747F800000000        			mov DWORD vV_2nd , 0	
   554                                  
   555                                  	vV_dec_sp 1				
   555                              <1> 
   555 00000746 4983EF04            <1>  sub vV_sp , cell(%1)
   555                              <1> 
   556                                  
   557                                   ;OpADR: [86]  ; IF opcode					
   558                                  
   559                                  	vV_dec_sp 1			
   559                              <1> 
   559 0000074A 4983EF04            <1>  sub vV_sp , cell(%1)
   559                              <1> 
   560 0000074E 41830F00                	or DWORD[vV_sp] , 0			
   561 00000752 7410                    	je wblock_12	
   562                                  
   563                                   ;OpADR: [87]  ; PUSH opcode 
   564                                  
   565                                  	vV_push 1 
   565                              <1> 
   565 00000754 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   565 0000075B 4983C704            <1>  add vV_sp , 4
   565                              <1> 
   566                                  
   567                                  
   568                                   ;OpADR: [88]  ; ELIF opcode					
   569                                  
   570 0000075F E9B8010000              	jmp wblock_11	
   571                                  
   572                                  
   573                                  	wblock_12:		
   574                                  
   575                                  ;------------------------------------------------------
   576                                  
   577                                  
   578                                   ;OpADR: [89]  ; DUP opcode (1)			
   579                                  
   580                                  	vV_dup 1			
   580                              <1> 
   580 00000764 B901000000          <1>  mov ecx , %1
   580 00000769 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   580 0000076D 4C89FF              <1>  mov rdi , vV_sp
   580                              <1> 
   580 00000770 F3A5                <1>  rep movsd
   580                              <1> 
   580 00000772 4983C704            <1>  add vV_sp , cell(%1)
   580                              <1> 
   581                                  
   582                                  
   583                                   ;OpADR: [90]  ; PUSH opcode 
   584                                  
   585                                  	vV_push 45 
   585                              <1> 
   585 00000776 41C7072D000000      <1>  mov DWORD[vV_sp] , %1
   585 0000077D 4983C704            <1>  add vV_sp , 4
   585                              <1> 
   586                                  
   587                                  
   588                                   ;OpADR: [91]  ; EQUAL opcode					
   589                                  
   590 00000781 418B47FC                	mov eax , vV_top			
   591 00000785 413947F8                	cmp DWORD vV_2nd , eax			
   592                                  
   593 00000789 75(0B)                  	jnz short 0xb				
   594                                  
   595 0000078B 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   596                                  
   597 00000793 EB(09)                  	jmp short 0x9				
   598                                  
   599 00000795 41C747F800000000        			mov DWORD vV_2nd , 0	
   600                                  
   601                                  	vV_dec_sp 1				
   601                              <1> 
   601 0000079D 4983EF04            <1>  sub vV_sp , cell(%1)
   601                              <1> 
   602                                  
   603                                   ;OpADR: [92]  ; IF opcode					
   604                                  
   605                                  	vV_dec_sp 1			
   605                              <1> 
   605 000007A1 4983EF04            <1>  sub vV_sp , cell(%1)
   605                              <1> 
   606 000007A5 41830F00                	or DWORD[vV_sp] , 0			
   607 000007A9 7410                    	je wblock_10	
   608                                  
   609                                   ;OpADR: [93]  ; PUSH opcode 
   610                                  
   611                                  	vV_push 1 
   611                              <1> 
   611 000007AB 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   611 000007B2 4983C704            <1>  add vV_sp , 4
   611                              <1> 
   612                                  
   613                                  
   614                                   ;OpADR: [94]  ; ELIF opcode					
   615                                  
   616 000007B6 E961010000              	jmp wblock_11	
   617                                  
   618                                  
   619                                  	wblock_10:		
   620                                  
   621                                  ;------------------------------------------------------
   622                                  
   623                                  
   624                                   ;OpADR: [95]  ; DUP opcode (1)			
   625                                  
   626                                  	vV_dup 1			
   626                              <1> 
   626 000007BB B901000000          <1>  mov ecx , %1
   626 000007C0 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   626 000007C4 4C89FF              <1>  mov rdi , vV_sp
   626                              <1> 
   626 000007C7 F3A5                <1>  rep movsd
   626                              <1> 
   626 000007C9 4983C704            <1>  add vV_sp , cell(%1)
   626                              <1> 
   627                                  
   628                                  
   629                                   ;OpADR: [96]  ; PUSH opcode 
   630                                  
   631                                  	vV_push 42 
   631                              <1> 
   631 000007CD 41C7072A000000      <1>  mov DWORD[vV_sp] , %1
   631 000007D4 4983C704            <1>  add vV_sp , 4
   631                              <1> 
   632                                  
   633                                  
   634                                   ;OpADR: [97]  ; EQUAL opcode					
   635                                  
   636 000007D8 418B47FC                	mov eax , vV_top			
   637 000007DC 413947F8                	cmp DWORD vV_2nd , eax			
   638                                  
   639 000007E0 75(0B)                  	jnz short 0xb				
   640                                  
   641 000007E2 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   642                                  
   643 000007EA EB(09)                  	jmp short 0x9				
   644                                  
   645 000007EC 41C747F800000000        			mov DWORD vV_2nd , 0	
   646                                  
   647                                  	vV_dec_sp 1				
   647                              <1> 
   647 000007F4 4983EF04            <1>  sub vV_sp , cell(%1)
   647                              <1> 
   648                                  
   649                                   ;OpADR: [98]  ; IF opcode					
   650                                  
   651                                  	vV_dec_sp 1			
   651                              <1> 
   651 000007F8 4983EF04            <1>  sub vV_sp , cell(%1)
   651                              <1> 
   652 000007FC 41830F00                	or DWORD[vV_sp] , 0			
   653 00000800 7410                    	je wblock_8	
   654                                  
   655                                   ;OpADR: [99]  ; PUSH opcode 
   656                                  
   657                                  	vV_push 1 
   657                              <1> 
   657 00000802 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   657 00000809 4983C704            <1>  add vV_sp , 4
   657                              <1> 
   658                                  
   659                                  
   660                                   ;OpADR: [100]  ; ELIF opcode					
   661                                  
   662 0000080D E90A010000              	jmp wblock_11	
   663                                  
   664                                  
   665                                  	wblock_8:		
   666                                  
   667                                  ;------------------------------------------------------
   668                                  
   669                                  
   670                                   ;OpADR: [101]  ; DUP opcode (1)			
   671                                  
   672                                  	vV_dup 1			
   672                              <1> 
   672 00000812 B901000000          <1>  mov ecx , %1
   672 00000817 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   672 0000081B 4C89FF              <1>  mov rdi , vV_sp
   672                              <1> 
   672 0000081E F3A5                <1>  rep movsd
   672                              <1> 
   672 00000820 4983C704            <1>  add vV_sp , cell(%1)
   672                              <1> 
   673                                  
   674                                  
   675                                   ;OpADR: [102]  ; PUSH opcode 
   676                                  
   677                                  	vV_push 47 
   677                              <1> 
   677 00000824 41C7072F000000      <1>  mov DWORD[vV_sp] , %1
   677 0000082B 4983C704            <1>  add vV_sp , 4
   677                              <1> 
   678                                  
   679                                  
   680                                   ;OpADR: [103]  ; EQUAL opcode					
   681                                  
   682 0000082F 418B47FC                	mov eax , vV_top			
   683 00000833 413947F8                	cmp DWORD vV_2nd , eax			
   684                                  
   685 00000837 75(0B)                  	jnz short 0xb				
   686                                  
   687 00000839 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   688                                  
   689 00000841 EB(09)                  	jmp short 0x9				
   690                                  
   691 00000843 41C747F800000000        			mov DWORD vV_2nd , 0	
   692                                  
   693                                  	vV_dec_sp 1				
   693                              <1> 
   693 0000084B 4983EF04            <1>  sub vV_sp , cell(%1)
   693                              <1> 
   694                                  
   695                                   ;OpADR: [104]  ; IF opcode					
   696                                  
   697                                  	vV_dec_sp 1			
   697                              <1> 
   697 0000084F 4983EF04            <1>  sub vV_sp , cell(%1)
   697                              <1> 
   698 00000853 41830F00                	or DWORD[vV_sp] , 0			
   699 00000857 7410                    	je wblock_6	
   700                                  
   701                                   ;OpADR: [105]  ; PUSH opcode 
   702                                  
   703                                  	vV_push 1 
   703                              <1> 
   703 00000859 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   703 00000860 4983C704            <1>  add vV_sp , 4
   703                              <1> 
   704                                  
   705                                  
   706                                   ;OpADR: [106]  ; ELIF opcode					
   707                                  
   708 00000864 E9B3000000              	jmp wblock_11	
   709                                  
   710                                  
   711                                  	wblock_6:		
   712                                  
   713                                  ;------------------------------------------------------
   714                                  
   715                                  
   716                                   ;OpADR: [107]  ; DUP opcode (1)			
   717                                  
   718                                  	vV_dup 1			
   718                              <1> 
   718 00000869 B901000000          <1>  mov ecx , %1
   718 0000086E 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   718 00000872 4C89FF              <1>  mov rdi , vV_sp
   718                              <1> 
   718 00000875 F3A5                <1>  rep movsd
   718                              <1> 
   718 00000877 4983C704            <1>  add vV_sp , cell(%1)
   718                              <1> 
   719                                  
   720                                  
   721                                   ;OpADR: [108]  ; PUSH opcode 
   722                                  
   723                                  	vV_push 37 
   723                              <1> 
   723 0000087B 41C70725000000      <1>  mov DWORD[vV_sp] , %1
   723 00000882 4983C704            <1>  add vV_sp , 4
   723                              <1> 
   724                                  
   725                                  
   726                                   ;OpADR: [109]  ; EQUAL opcode					
   727                                  
   728 00000886 418B47FC                	mov eax , vV_top			
   729 0000088A 413947F8                	cmp DWORD vV_2nd , eax			
   730                                  
   731 0000088E 75(0B)                  	jnz short 0xb				
   732                                  
   733 00000890 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   734                                  
   735 00000898 EB(09)                  	jmp short 0x9				
   736                                  
   737 0000089A 41C747F800000000        			mov DWORD vV_2nd , 0	
   738                                  
   739                                  	vV_dec_sp 1				
   739                              <1> 
   739 000008A2 4983EF04            <1>  sub vV_sp , cell(%1)
   739                              <1> 
   740                                  
   741                                   ;OpADR: [110]  ; IF opcode					
   742                                  
   743                                  	vV_dec_sp 1			
   743                              <1> 
   743 000008A6 4983EF04            <1>  sub vV_sp , cell(%1)
   743                              <1> 
   744 000008AA 41830F00                	or DWORD[vV_sp] , 0			
   745 000008AE 740D                    	je wblock_4	
   746                                  
   747                                   ;OpADR: [111]  ; PUSH opcode 
   748                                  
   749                                  	vV_push 1 
   749                              <1> 
   749 000008B0 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   749 000008B7 4983C704            <1>  add vV_sp , 4
   749                              <1> 
   750                                  
   751                                  
   752                                   ;OpADR: [112]  ; ELIF opcode					
   753                                  
   754 000008BB EB5F                    	jmp wblock_11	
   755                                  
   756                                  
   757                                  	wblock_4:		
   758                                  
   759                                  ;------------------------------------------------------
   760                                  
   761                                  
   762                                   ;OpADR: [113]  ; DUP opcode (1)			
   763                                  
   764                                  	vV_dup 1			
   764                              <1> 
   764 000008BD B901000000          <1>  mov ecx , %1
   764 000008C2 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   764 000008C6 4C89FF              <1>  mov rdi , vV_sp
   764                              <1> 
   764 000008C9 F3A5                <1>  rep movsd
   764                              <1> 
   764 000008CB 4983C704            <1>  add vV_sp , cell(%1)
   764                              <1> 
   765                                  
   766                                  
   767                                   ;OpADR: [114]  ; PUSH opcode 
   768                                  
   769                                  	vV_push 113 
   769                              <1> 
   769 000008CF 41C70771000000      <1>  mov DWORD[vV_sp] , %1
   769 000008D6 4983C704            <1>  add vV_sp , 4
   769                              <1> 
   770                                  
   771                                  
   772                                   ;OpADR: [115]  ; EQUAL opcode					
   773                                  
   774 000008DA 418B47FC                	mov eax , vV_top			
   775 000008DE 413947F8                	cmp DWORD vV_2nd , eax			
   776                                  
   777 000008E2 75(0B)                  	jnz short 0xb				
   778                                  
   779 000008E4 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   780                                  
   781 000008EC EB(09)                  	jmp short 0x9				
   782                                  
   783 000008EE 41C747F800000000        			mov DWORD vV_2nd , 0	
   784                                  
   785                                  	vV_dec_sp 1				
   785                              <1> 
   785 000008F6 4983EF04            <1>  sub vV_sp , cell(%1)
   785                              <1> 
   786                                  
   787                                   ;OpADR: [116]  ; IF opcode					
   788                                  
   789                                  	vV_dec_sp 1			
   789                              <1> 
   789 000008FA 4983EF04            <1>  sub vV_sp , cell(%1)
   789                              <1> 
   790 000008FE 41830F00                	or DWORD[vV_sp] , 0			
   791 00000902 740D                    	je wblock_2	
   792                                  
   793                                   ;OpADR: [117]  ; PUSH opcode 
   794                                  
   795                                  	vV_push 1 
   795                              <1> 
   795 00000904 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   795 0000090B 4983C704            <1>  add vV_sp , 4
   795                              <1> 
   796                                  
   797                                  
   798                                   ;OpADR: [118]  ; ELIF opcode					
   799                                  
   800 0000090F EB0B                    	jmp wblock_11	
   801                                  
   802                                  
   803                                  	wblock_2:		
   804                                  
   805                                  ;------------------------------------------------------
   806                                  
   807                                  
   808                                   ;OpADR: [119]  ; PUSH opcode 
   809                                  
   810                                  	vV_push 0 
   810                              <1> 
   810 00000911 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   810 00000918 4983C704            <1>  add vV_sp , 4
   810                              <1> 
   811                                  
   812                                  
   813                                  
   814                                  	wblock_11:		
   815                                  
   816                                  ;------------------------------------------------------
   817                                  
   818                                  
   819                                   ;OpADR: [120]  ; End of func opcode					
   820                                  
   821 0000091C C3                      		ret			
   822                                  
   823                                  
   824                                  	solve_operand:		
   825                                  
   826                                  ;------------------------------------------------------
   827                                  
   828                                  
   829                                   ;OpADR: [121]  ; DUP opcode (1)			
   830                                  
   831                                  	vV_dup 1			
   831                              <1> 
   831 0000091D B901000000          <1>  mov ecx , %1
   831 00000922 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   831 00000926 4C89FF              <1>  mov rdi , vV_sp
   831                              <1> 
   831 00000929 F3A5                <1>  rep movsd
   831                              <1> 
   831 0000092B 4983C704            <1>  add vV_sp , cell(%1)
   831                              <1> 
   832                                  
   833                                  
   834                                   ;OpADR: [122]  ; PUSH opcode 
   835                                  
   836                                  	vV_push 43 
   836                              <1> 
   836 0000092F 41C7072B000000      <1>  mov DWORD[vV_sp] , %1
   836 00000936 4983C704            <1>  add vV_sp , 4
   836                              <1> 
   837                                  
   838                                  
   839                                   ;OpADR: [123]  ; EQUAL opcode					
   840                                  
   841 0000093A 418B47FC                	mov eax , vV_top			
   842 0000093E 413947F8                	cmp DWORD vV_2nd , eax			
   843                                  
   844 00000942 75(0B)                  	jnz short 0xb				
   845                                  
   846 00000944 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   847                                  
   848 0000094C EB(09)                  	jmp short 0x9				
   849                                  
   850 0000094E 41C747F800000000        			mov DWORD vV_2nd , 0	
   851                                  
   852                                  	vV_dec_sp 1				
   852                              <1> 
   852 00000956 4983EF04            <1>  sub vV_sp , cell(%1)
   852                              <1> 
   853                                  
   854                                   ;OpADR: [124]  ; IF opcode					
   855                                  
   856                                  	vV_dec_sp 1			
   856                              <1> 
   856 0000095A 4983EF04            <1>  sub vV_sp , cell(%1)
   856                              <1> 
   857 0000095E 41830F00                	or DWORD[vV_sp] , 0			
   858 00000962 7419                    	je wblock_21	
   859                                  
   860                                   ;OpADR: [125]  ; DROP opcode 
   861                                  
   862 00000964 4983EF04                	sub vV_sp , 4	
   863                                  
   864                                   ;OpADR: [126]  ; ADD opcode 					
   865                                  
   866 00000968 418B47F8                	mov eax , vV_2nd			
   867 0000096C 410347FC                	add eax , vV_top			
   868 00000970 418947F8                	mov vV_2nd , eax			
   869                                  
   870                                  	vV_dec_sp 1		
   870                              <1> 
   870 00000974 4983EF04            <1>  sub vV_sp , cell(%1)
   870                              <1> 
   871                                  
   872                                   ;OpADR: [127]  ; ELIF opcode					
   873                                  
   874 00000978 E97C010000              	jmp wblock_20	
   875                                  
   876                                  
   877                                  	wblock_21:		
   878                                  
   879                                  ;------------------------------------------------------
   880                                  
   881                                  
   882                                   ;OpADR: [128]  ; DUP opcode (1)			
   883                                  
   884                                  	vV_dup 1			
   884                              <1> 
   884 0000097D B901000000          <1>  mov ecx , %1
   884 00000982 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   884 00000986 4C89FF              <1>  mov rdi , vV_sp
   884                              <1> 
   884 00000989 F3A5                <1>  rep movsd
   884                              <1> 
   884 0000098B 4983C704            <1>  add vV_sp , cell(%1)
   884                              <1> 
   885                                  
   886                                  
   887                                   ;OpADR: [129]  ; PUSH opcode 
   888                                  
   889                                  	vV_push 45 
   889                              <1> 
   889 0000098F 41C7072D000000      <1>  mov DWORD[vV_sp] , %1
   889 00000996 4983C704            <1>  add vV_sp , 4
   889                              <1> 
   890                                  
   891                                  
   892                                   ;OpADR: [130]  ; EQUAL opcode					
   893                                  
   894 0000099A 418B47FC                	mov eax , vV_top			
   895 0000099E 413947F8                	cmp DWORD vV_2nd , eax			
   896                                  
   897 000009A2 75(0B)                  	jnz short 0xb				
   898                                  
   899 000009A4 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   900                                  
   901 000009AC EB(09)                  	jmp short 0x9				
   902                                  
   903 000009AE 41C747F800000000        			mov DWORD vV_2nd , 0	
   904                                  
   905                                  	vV_dec_sp 1				
   905                              <1> 
   905 000009B6 4983EF04            <1>  sub vV_sp , cell(%1)
   905                              <1> 
   906                                  
   907                                   ;OpADR: [131]  ; IF opcode					
   908                                  
   909                                  	vV_dec_sp 1			
   909                              <1> 
   909 000009BA 4983EF04            <1>  sub vV_sp , cell(%1)
   909                              <1> 
   910 000009BE 41830F00                	or DWORD[vV_sp] , 0			
   911 000009C2 7419                    	je wblock_19	
   912                                  
   913                                   ;OpADR: [132]  ; DROP opcode 
   914                                  
   915 000009C4 4983EF04                	sub vV_sp , 4	
   916                                  
   917                                   ;OpADR: [133]  ; SUB opcode 					
   918                                  
   919 000009C8 418B47F8                	mov eax , vV_2nd			
   920 000009CC 412B47FC                	sub eax , vV_top			
   921 000009D0 418947F8                	mov vV_2nd, eax			
   922                                  
   923                                  	vV_dec_sp 1		
   923                              <1> 
   923 000009D4 4983EF04            <1>  sub vV_sp , cell(%1)
   923                              <1> 
   924                                  
   925                                   ;OpADR: [134]  ; ELIF opcode					
   926                                  
   927 000009D8 E91C010000              	jmp wblock_20	
   928                                  
   929                                  
   930                                  	wblock_19:		
   931                                  
   932                                  ;------------------------------------------------------
   933                                  
   934                                  
   935                                   ;OpADR: [135]  ; DUP opcode (1)			
   936                                  
   937                                  	vV_dup 1			
   937                              <1> 
   937 000009DD B901000000          <1>  mov ecx , %1
   937 000009E2 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   937 000009E6 4C89FF              <1>  mov rdi , vV_sp
   937                              <1> 
   937 000009E9 F3A5                <1>  rep movsd
   937                              <1> 
   937 000009EB 4983C704            <1>  add vV_sp , cell(%1)
   937                              <1> 
   938                                  
   939                                  
   940                                   ;OpADR: [136]  ; PUSH opcode 
   941                                  
   942                                  	vV_push 42 
   942                              <1> 
   942 000009EF 41C7072A000000      <1>  mov DWORD[vV_sp] , %1
   942 000009F6 4983C704            <1>  add vV_sp , 4
   942                              <1> 
   943                                  
   944                                  
   945                                   ;OpADR: [137]  ; EQUAL opcode					
   946                                  
   947 000009FA 418B47FC                	mov eax , vV_top			
   948 000009FE 413947F8                	cmp DWORD vV_2nd , eax			
   949                                  
   950 00000A02 75(0B)                  	jnz short 0xb				
   951                                  
   952 00000A04 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   953                                  
   954 00000A0C EB(09)                  	jmp short 0x9				
   955                                  
   956 00000A0E 41C747F800000000        			mov DWORD vV_2nd , 0	
   957                                  
   958                                  	vV_dec_sp 1				
   958                              <1> 
   958 00000A16 4983EF04            <1>  sub vV_sp , cell(%1)
   958                              <1> 
   959                                  
   960                                   ;OpADR: [138]  ; IF opcode					
   961                                  
   962                                  	vV_dec_sp 1			
   962                              <1> 
   962 00000A1A 4983EF04            <1>  sub vV_sp , cell(%1)
   962                              <1> 
   963 00000A1E 41830F00                	or DWORD[vV_sp] , 0			
   964 00000A22 7419                    	je wblock_17	
   965                                  
   966                                   ;OpADR: [139]  ; DROP opcode 
   967                                  
   968 00000A24 4983EF04                	sub vV_sp , 4	
   969                                  
   970                                   ;OpADR: [140]  ; MUL opcode 					
   971                                  
   972                                  
   973 00000A28 418B47F8                	mov eax , vV_2nd			
   974 00000A2C 41F767FC                	mul DWORD vV_top			
   975 00000A30 418947F8                	mov vV_2nd , eax			
   976                                  
   977                                  	vV_dec_sp 1				
   977                              <1> 
   977 00000A34 4983EF04            <1>  sub vV_sp , cell(%1)
   977                              <1> 
   978                                  						
   979                                  
   980                                   ;OpADR: [141]  ; ELIF opcode					
   981                                  
   982 00000A38 E9BC000000              	jmp wblock_20	
   983                                  
   984                                  
   985                                  	wblock_17:		
   986                                  
   987                                  ;------------------------------------------------------
   988                                  
   989                                  
   990                                   ;OpADR: [142]  ; DUP opcode (1)			
   991                                  
   992                                  	vV_dup 1			
   992                              <1> 
   992 00000A3D B901000000          <1>  mov ecx , %1
   992 00000A42 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   992 00000A46 4C89FF              <1>  mov rdi , vV_sp
   992                              <1> 
   992 00000A49 F3A5                <1>  rep movsd
   992                              <1> 
   992 00000A4B 4983C704            <1>  add vV_sp , cell(%1)
   992                              <1> 
   993                                  
   994                                  
   995                                   ;OpADR: [143]  ; PUSH opcode 
   996                                  
   997                                  	vV_push 47 
   997                              <1> 
   997 00000A4F 41C7072F000000      <1>  mov DWORD[vV_sp] , %1
   997 00000A56 4983C704            <1>  add vV_sp , 4
   997                              <1> 
   998                                  
   999                                  
  1000                                   ;OpADR: [144]  ; EQUAL opcode					
  1001                                  
  1002 00000A5A 418B47FC                	mov eax , vV_top			
  1003 00000A5E 413947F8                	cmp DWORD vV_2nd , eax			
  1004                                  
  1005 00000A62 75(0B)                  	jnz short 0xb				
  1006                                  
  1007 00000A64 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1008                                  
  1009 00000A6C EB(09)                  	jmp short 0x9				
  1010                                  
  1011 00000A6E 41C747F800000000        			mov DWORD vV_2nd , 0	
  1012                                  
  1013                                  	vV_dec_sp 1				
  1013                              <1> 
  1013 00000A76 4983EF04            <1>  sub vV_sp , cell(%1)
  1013                              <1> 
  1014                                  
  1015                                   ;OpADR: [145]  ; IF opcode					
  1016                                  
  1017                                  	vV_dec_sp 1			
  1017                              <1> 
  1017 00000A7A 4983EF04            <1>  sub vV_sp , cell(%1)
  1017                              <1> 
  1018 00000A7E 41830F00                	or DWORD[vV_sp] , 0			
  1019 00000A82 7418                    	je wblock_15	
  1020                                  
  1021                                   ;OpADR: [146]  ; DROP opcode 
  1022                                  
  1023 00000A84 4983EF04                	sub vV_sp , 4	
  1024                                  
  1025                                   ;OpADR: [147]  ; DIV opcode 					
  1026                                  
  1027 00000A88 31D2                    	xor edx , edx				
  1028 00000A8A 418B47F8                	mov eax , vV_2nd			
  1029 00000A8E 41F777FC                	div DWORD vV_top			
  1030 00000A92 418947F8                	mov vV_2nd , eax			
  1031                                  
  1032                                  	vV_dec_sp 1				
  1032                              <1> 
  1032 00000A96 4983EF04            <1>  sub vV_sp , cell(%1)
  1032                              <1> 
  1033                                  
  1034                                   ;OpADR: [148]  ; ELIF opcode					
  1035                                  
  1036 00000A9A EB5D                    	jmp wblock_20	
  1037                                  
  1038                                  
  1039                                  	wblock_15:		
  1040                                  
  1041                                  ;------------------------------------------------------
  1042                                  
  1043                                  
  1044                                   ;OpADR: [149]  ; DUP opcode (1)			
  1045                                  
  1046                                  	vV_dup 1			
  1046                              <1> 
  1046 00000A9C B901000000          <1>  mov ecx , %1
  1046 00000AA1 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1046 00000AA5 4C89FF              <1>  mov rdi , vV_sp
  1046                              <1> 
  1046 00000AA8 F3A5                <1>  rep movsd
  1046                              <1> 
  1046 00000AAA 4983C704            <1>  add vV_sp , cell(%1)
  1046                              <1> 
  1047                                  
  1048                                  
  1049                                   ;OpADR: [150]  ; PUSH opcode 
  1050                                  
  1051                                  	vV_push 37 
  1051                              <1> 
  1051 00000AAE 41C70725000000      <1>  mov DWORD[vV_sp] , %1
  1051 00000AB5 4983C704            <1>  add vV_sp , 4
  1051                              <1> 
  1052                                  
  1053                                  
  1054                                   ;OpADR: [151]  ; EQUAL opcode					
  1055                                  
  1056 00000AB9 418B47FC                	mov eax , vV_top			
  1057 00000ABD 413947F8                	cmp DWORD vV_2nd , eax			
  1058                                  
  1059 00000AC1 75(0B)                  	jnz short 0xb				
  1060                                  
  1061 00000AC3 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1062                                  
  1063 00000ACB EB(09)                  	jmp short 0x9				
  1064                                  
  1065 00000ACD 41C747F800000000        			mov DWORD vV_2nd , 0	
  1066                                  
  1067                                  	vV_dec_sp 1				
  1067                              <1> 
  1067 00000AD5 4983EF04            <1>  sub vV_sp , cell(%1)
  1067                              <1> 
  1068                                  
  1069                                   ;OpADR: [152]  ; IF opcode					
  1070                                  
  1071                                  	vV_dec_sp 1			
  1071                              <1> 
  1071 00000AD9 4983EF04            <1>  sub vV_sp , cell(%1)
  1071                              <1> 
  1072 00000ADD 41830F00                	or DWORD[vV_sp] , 0			
  1073 00000AE1 7416                    	je wblock_20	
  1074                                  
  1075                                   ;OpADR: [153]  ; DROP opcode 
  1076                                  
  1077 00000AE3 4983EF04                	sub vV_sp , 4	
  1078                                  
  1079                                   ;OpADR: [154]  ; MOD opcode 					
  1080                                  
  1081 00000AE7 31D2                    	xor edx , edx				
  1082 00000AE9 418B47F8                	mov eax , vV_2nd			
  1083 00000AED 41F777FC                	div DWORD vV_top			
  1084 00000AF1 418957F8                	mov vV_2nd , edx			
  1085                                  
  1086 00000AF5 4983EF04                	sub r15 , 4				
  1087                                  
  1088                                  
  1089                                  	wblock_20:		
  1090                                  
  1091                                  ;------------------------------------------------------
  1092                                  
  1093                                  
  1094                                   ;OpADR: [155]  ; End of func opcode					
  1095                                  
  1096 00000AF9 C3                      		ret			
  1097                                  
  1098                                  
  1099                                  	check_cmd:		
  1100                                  
  1101                                  ;------------------------------------------------------
  1102                                  
  1103                                  
  1104                                   ;OpADR: [156]  ; DUP opcode (1)			
  1105                                  
  1106                                  	vV_dup 1			
  1106                              <1> 
  1106 00000AFA B901000000          <1>  mov ecx , %1
  1106 00000AFF 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1106 00000B03 4C89FF              <1>  mov rdi , vV_sp
  1106                              <1> 
  1106 00000B06 F3A5                <1>  rep movsd
  1106                              <1> 
  1106 00000B08 4983C704            <1>  add vV_sp , cell(%1)
  1106                              <1> 
  1107                                  
  1108                                  
  1109                                   ;OpADR: [157]  ; Function Call					
  1110                                  
  1111 00000B0C E8DEF9FFFF              		call quit_cmd			
  1112                                  
  1113                                   ;OpADR: [158]  ; EQUAL opcode					
  1114                                  
  1115 00000B11 418B47FC                	mov eax , vV_top			
  1116 00000B15 413947F8                	cmp DWORD vV_2nd , eax			
  1117                                  
  1118 00000B19 75(0B)                  	jnz short 0xb				
  1119                                  
  1120 00000B1B 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1121                                  
  1122 00000B23 EB(09)                  	jmp short 0x9				
  1123                                  
  1124 00000B25 41C747F800000000        			mov DWORD vV_2nd , 0	
  1125                                  
  1126                                  	vV_dec_sp 1				
  1126                              <1> 
  1126 00000B2D 4983EF04            <1>  sub vV_sp , cell(%1)
  1126                              <1> 
  1127                                  
  1128                                   ;OpADR: [159]  ; IF opcode					
  1129                                  
  1130                                  	vV_dec_sp 1			
  1130                              <1> 
  1130 00000B31 4983EF04            <1>  sub vV_sp , cell(%1)
  1130                              <1> 
  1131 00000B35 41830F00                	or DWORD[vV_sp] , 0			
  1132 00000B39 7416                    	je wblock_22	
  1133                                  
  1134                                   ;OpADR: [160]  ; PUSH opcode 
  1135                                  
  1136                                  	vV_push 1 
  1136                              <1> 
  1136 00000B3B 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1136 00000B42 4983C704            <1>  add vV_sp , 4
  1136                              <1> 
  1137                                  
  1138                                  
  1139                                   ;OpADR: [161]  ; PUSH opcode 
  1140                                  
  1141                                  	vV_push 0 
  1141                              <1> 
  1141 00000B46 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1141 00000B4D 4983C704            <1>  add vV_sp , 4
  1141                              <1> 
  1142                                  
  1143                                  
  1144                                  
  1145                                  	wblock_22:		
  1146                                  
  1147                                  ;------------------------------------------------------
  1148                                  
  1149                                  
  1150                                   ;OpADR: [162]  ; DUP opcode (1)			
  1151                                  
  1152                                  	vV_dup 1			
  1152                              <1> 
  1152 00000B51 B901000000          <1>  mov ecx , %1
  1152 00000B56 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1152 00000B5A 4C89FF              <1>  mov rdi , vV_sp
  1152                              <1> 
  1152 00000B5D F3A5                <1>  rep movsd
  1152                              <1> 
  1152 00000B5F 4983C704            <1>  add vV_sp , cell(%1)
  1152                              <1> 
  1153                                  
  1154                                  
  1155                                   ;OpADR: [163]  ; Function Call					
  1156                                  
  1157 00000B63 E893F9FFFF              		call help_cmd			
  1158                                  
  1159                                   ;OpADR: [164]  ; EQUAL opcode					
  1160                                  
  1161 00000B68 418B47FC                	mov eax , vV_top			
  1162 00000B6C 413947F8                	cmp DWORD vV_2nd , eax			
  1163                                  
  1164 00000B70 75(0B)                  	jnz short 0xb				
  1165                                  
  1166 00000B72 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1167                                  
  1168 00000B7A EB(09)                  	jmp short 0x9				
  1169                                  
  1170 00000B7C 41C747F800000000        			mov DWORD vV_2nd , 0	
  1171                                  
  1172                                  	vV_dec_sp 1				
  1172                              <1> 
  1172 00000B84 4983EF04            <1>  sub vV_sp , cell(%1)
  1172                              <1> 
  1173                                  
  1174                                   ;OpADR: [165]  ; IF opcode					
  1175                                  
  1176                                  	vV_dec_sp 1			
  1176                              <1> 
  1176 00000B88 4983EF04            <1>  sub vV_sp , cell(%1)
  1176                              <1> 
  1177 00000B8C 41830F00                	or DWORD[vV_sp] , 0			
  1178 00000B90 7410                    	je wblock_23	
  1179                                  
  1180                                   ;OpADR: [166]  ; Function Call					
  1181                                  
  1182 00000B92 E888F9FFFF              		call help			
  1183                                  
  1184                                   ;OpADR: [167]  ; PUSH opcode 
  1185                                  
  1186                                  	vV_push 1 
  1186                              <1> 
  1186 00000B97 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1186 00000B9E 4983C704            <1>  add vV_sp , 4
  1186                              <1> 
  1187                                  
  1188                                  
  1189                                  
  1190                                  	wblock_23:		
  1191                                  
  1192                                  ;------------------------------------------------------
  1193                                  
  1194                                  
  1195                                   ;OpADR: [168]  ; DUP opcode (1)			
  1196                                  
  1197                                  	vV_dup 1			
  1197                              <1> 
  1197 00000BA2 B901000000          <1>  mov ecx , %1
  1197 00000BA7 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1197 00000BAB 4C89FF              <1>  mov rdi , vV_sp
  1197                              <1> 
  1197 00000BAE F3A5                <1>  rep movsd
  1197                              <1> 
  1197 00000BB0 4983C704            <1>  add vV_sp , cell(%1)
  1197                              <1> 
  1198                                  
  1199                                  
  1200                                   ;OpADR: [169]  ; Function Call					
  1201                                  
  1202 00000BB4 E84EF9FFFF              		call calc_cmd			
  1203                                  
  1204                                   ;OpADR: [170]  ; EQUAL opcode					
  1205                                  
  1206 00000BB9 418B47FC                	mov eax , vV_top			
  1207 00000BBD 413947F8                	cmp DWORD vV_2nd , eax			
  1208                                  
  1209 00000BC1 75(0B)                  	jnz short 0xb				
  1210                                  
  1211 00000BC3 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1212                                  
  1213 00000BCB EB(09)                  	jmp short 0x9				
  1214                                  
  1215 00000BCD 41C747F800000000        			mov DWORD vV_2nd , 0	
  1216                                  
  1217                                  	vV_dec_sp 1				
  1217                              <1> 
  1217 00000BD5 4983EF04            <1>  sub vV_sp , cell(%1)
  1217                              <1> 
  1218                                  
  1219                                   ;OpADR: [171]  ; IF opcode					
  1220                                  
  1221                                  	vV_dec_sp 1			
  1221                              <1> 
  1221 00000BD9 4983EF04            <1>  sub vV_sp , cell(%1)
  1221                              <1> 
  1222 00000BDD 41830F00                	or DWORD[vV_sp] , 0			
  1223 00000BE1 7416                    	je wblock_24	
  1224                                  
  1225                                   ;OpADR: [172]  ; PUSH opcode 
  1226                                  
  1227                                  	vV_push 0 
  1227                              <1> 
  1227 00000BE3 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1227 00000BEA 4983C704            <1>  add vV_sp , 4
  1227                              <1> 
  1228                                  
  1229                                  
  1230                                   ;OpADR: [173]  ; PUSH opcode 
  1231                                  
  1232                                  	vV_push 0 
  1232                              <1> 
  1232 00000BEE 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1232 00000BF5 4983C704            <1>  add vV_sp , 4
  1232                              <1> 
  1233                                  
  1234                                  
  1235                                  
  1236                                  	wblock_24:		
  1237                                  
  1238                                  ;------------------------------------------------------
  1239                                  
  1240                                  
  1241                                   ;OpADR: [174]  ; DUP opcode (1)			
  1242                                  
  1243                                  	vV_dup 1			
  1243                              <1> 
  1243 00000BF9 B901000000          <1>  mov ecx , %1
  1243 00000BFE 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1243 00000C02 4C89FF              <1>  mov rdi , vV_sp
  1243                              <1> 
  1243 00000C05 F3A5                <1>  rep movsd
  1243                              <1> 
  1243 00000C07 4983C704            <1>  add vV_sp , cell(%1)
  1243                              <1> 
  1244                                  
  1245                                  
  1246                                   ;OpADR: [175]  ; Function Call					
  1247                                  
  1248 00000C0B E803F9FFFF              		call frmt_cmd			
  1249                                  
  1250                                   ;OpADR: [176]  ; EQUAL opcode					
  1251                                  
  1252 00000C10 418B47FC                	mov eax , vV_top			
  1253 00000C14 413947F8                	cmp DWORD vV_2nd , eax			
  1254                                  
  1255 00000C18 75(0B)                  	jnz short 0xb				
  1256                                  
  1257 00000C1A 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1258                                  
  1259 00000C22 EB(09)                  	jmp short 0x9				
  1260                                  
  1261 00000C24 41C747F800000000        			mov DWORD vV_2nd , 0	
  1262                                  
  1263                                  	vV_dec_sp 1				
  1263                              <1> 
  1263 00000C2C 4983EF04            <1>  sub vV_sp , cell(%1)
  1263                              <1> 
  1264                                  
  1265                                   ;OpADR: [177]  ; IF opcode					
  1266                                  
  1267                                  	vV_dec_sp 1			
  1267                              <1> 
  1267 00000C30 4983EF04            <1>  sub vV_sp , cell(%1)
  1267                              <1> 
  1268 00000C34 41830F00                	or DWORD[vV_sp] , 0			
  1269 00000C38 740B                    	je wblock_25	
  1270                                  
  1271                                   ;OpADR: [178]  ; PUSH opcode 
  1272                                  
  1273                                  	vV_push 1 
  1273                              <1> 
  1273 00000C3A 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1273 00000C41 4983C704            <1>  add vV_sp , 4
  1273                              <1> 
  1274                                  
  1275                                  
  1276                                  
  1277                                  	wblock_25:		
  1278                                  
  1279                                  ;------------------------------------------------------
  1280                                  
  1281                                  
  1282                                   ;OpADR: [179]  ; End of func opcode					
  1283                                  
  1284 00000C45 C3                      		ret			
  1285                                  
  1286                                  		
  1287                                  
  1288                                  
  1289                                  
  1290                                  vV_entry_point:
  1291                                  
  1292                                  
  1293 00000C46 4889E5                  	mov rbp, rsp			;Setup Stack Frame
  1294                                  	
  1295                                  	
  1296                                  
  1297                                  	wblock_34:		
  1298                                  
  1299                                  ;------------------------------------------------------
  1300                                  
  1301                                  
  1302                                   ;OpADR: [0]  ; Function Call					
  1303                                  
  1304 00000C49 E89DFAFFFF              		call say_welcome			
  1305                                  
  1306                                   ;OpADR: [1]  ; Function Call					
  1307                                  
  1308 00000C4E E8B4FAFFFF              		call input_cmd			
  1309                                  
  1310                                   ;OpADR: [2]  ; Function Call					
  1311                                  
  1312 00000C53 E8A2FEFFFF              		call check_cmd			
  1313                                  
  1314                                   ;OpADR: [3]  ; WHILE opcode					
  1315                                  
  1316                                  	vV_dec_sp 1				
  1316                              <1> 
  1316 00000C58 4983EF04            <1>  sub vV_sp , cell(%1)
  1316                              <1> 
  1317 00000C5C 41830F00                	or DWORD[vV_sp] , 0			
  1318 00000C60 75E7                    	jne wblock_34		
  1319                                  
  1320                                   ;OpADR: [4]  ; IF opcode					
  1321                                  
  1322                                  	vV_dec_sp 1			
  1322                              <1> 
  1322 00000C62 4983EF04            <1>  sub vV_sp , cell(%1)
  1322                              <1> 
  1323 00000C66 41830F00                	or DWORD[vV_sp] , 0			
  1324 00000C6A 7405                    	je wblock_32	
  1325                                  
  1326                                   ;OpADR: [5]  ; Break opcode					
  1327                                  
  1328 00000C6C E909010000              	jmp wblock_35		
  1329                                  
  1330                                  
  1331                                  	wblock_32:		
  1332                                  
  1333                                  ;------------------------------------------------------
  1334                                  
  1335                                  
  1336                                   ;OpADR: [6]  ; Function Call					
  1337                                  
  1338 00000C71 E8ACF9FFFF              		call calc_msg01			
  1339                                  
  1340                                   ;OpADR: [7]  ; Function Call					
  1341                                  
  1342 00000C76 E8F3F7FFFF              		call xprint			
  1343                                  
  1344                                   ;OpADR: [8]  ; GET opcode (0)			
  1345                                  
  1346 00000C7B E8F1F5FFFF              	call vV_io_get_default			
  1347                                  						
  1348                                  
  1349                                  
  1350                                  	wblock_30:		
  1351                                  
  1352                                  ;------------------------------------------------------
  1353                                  
  1354                                  
  1355                                   ;OpADR: [9]  ; Function Call					
  1356                                  
  1357 00000C80 E8D5F9FFFF              		call calc_msg02			
  1358                                  
  1359                                   ;OpADR: [10]  ; Function Call					
  1360                                  
  1361 00000C85 E8E4F7FFFF              		call xprint			
  1362                                  
  1363                                   ;OpADR: [11]  ; GET opcode (8)			
  1364                                  
  1365                                  		
  1366 00000C8A E809F6FFFF              	call vV_io_get_char				
  1367                                  						
  1368                                  
  1369                                   ;OpADR: [12]  ; Function Call					
  1370                                  
  1371 00000C8F E879FAFFFF              		call check_operand			
  1372                                  
  1373                                   ;OpADR: [13]  ; IF opcode					
  1374                                  
  1375                                  	vV_dec_sp 1			
  1375                              <1> 
  1375 00000C94 4983EF04            <1>  sub vV_sp , cell(%1)
  1375                              <1> 
  1376 00000C98 41830F00                	or DWORD[vV_sp] , 0			
  1377 00000C9C 740D                    	je wblock_29	
  1378                                  
  1379                                   ;OpADR: [14]  ; PUSH opcode 
  1380                                  
  1381                                  	vV_push 0 
  1381                              <1> 
  1381 00000C9E 41C70700000000      <1>  mov DWORD[vV_sp] , %1
  1381 00000CA5 4983C704            <1>  add vV_sp , 4
  1381                              <1> 
  1382                                  
  1383                                  
  1384                                   ;OpADR: [15]  ; ELIF opcode					
  1385                                  
  1386 00000CA9 EB19                    	jmp wblock_28	
  1387                                  
  1388                                  
  1389                                  	wblock_29:		
  1390                                  
  1391                                  ;------------------------------------------------------
  1392                                  
  1393                                  
  1394                                   ;OpADR: [16]  ; DROP opcode 
  1395                                  
  1396 00000CAB 4983EF04                	sub vV_sp , 4	
  1397                                  
  1398                                   ;OpADR: [17]  ; Function Call					
  1399                                  
  1400 00000CAF E8FFF9FFFF              		call calc_msg03			
  1401                                  
  1402                                   ;OpADR: [18]  ; Function Call					
  1403                                  
  1404 00000CB4 E8B5F7FFFF              		call xprint			
  1405                                  
  1406                                   ;OpADR: [19]  ; PUSH opcode 
  1407                                  
  1408                                  	vV_push 1 
  1408                              <1> 
  1408 00000CB9 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1408 00000CC0 4983C704            <1>  add vV_sp , 4
  1408                              <1> 
  1409                                  
  1410                                  
  1411                                  
  1412                                  	wblock_28:		
  1413                                  
  1414                                  ;------------------------------------------------------
  1415                                  
  1416                                  
  1417                                   ;OpADR: [20]  ; WHILE opcode					
  1418                                  
  1419                                  	vV_dec_sp 1				
  1419                              <1> 
  1419 00000CC4 4983EF04            <1>  sub vV_sp , cell(%1)
  1419                              <1> 
  1420 00000CC8 41830F00                	or DWORD[vV_sp] , 0			
  1421 00000CCC 75B2                    	jne wblock_30		
  1422                                  
  1423                                   ;OpADR: [21]  ; DUP opcode (1)			
  1424                                  
  1425                                  	vV_dup 1			
  1425                              <1> 
  1425 00000CCE B901000000          <1>  mov ecx , %1
  1425 00000CD3 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
  1425 00000CD7 4C89FF              <1>  mov rdi , vV_sp
  1425                              <1> 
  1425 00000CDA F3A5                <1>  rep movsd
  1425                              <1> 
  1425 00000CDC 4983C704            <1>  add vV_sp , cell(%1)
  1425                              <1> 
  1426                                  
  1427                                  
  1428                                   ;OpADR: [22]  ; PUSH opcode 
  1429                                  
  1430                                  	vV_push 113 
  1430                              <1> 
  1430 00000CE0 41C70771000000      <1>  mov DWORD[vV_sp] , %1
  1430 00000CE7 4983C704            <1>  add vV_sp , 4
  1430                              <1> 
  1431                                  
  1432                                  
  1433                                   ;OpADR: [23]  ; EQUAL opcode					
  1434                                  
  1435 00000CEB 418B47FC                	mov eax , vV_top			
  1436 00000CEF 413947F8                	cmp DWORD vV_2nd , eax			
  1437                                  
  1438 00000CF3 75(0B)                  	jnz short 0xb				
  1439                                  
  1440 00000CF5 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
  1441                                  
  1442 00000CFD EB(09)                  	jmp short 0x9				
  1443                                  
  1444 00000CFF 41C747F800000000        			mov DWORD vV_2nd , 0	
  1445                                  
  1446                                  	vV_dec_sp 1				
  1446                              <1> 
  1446 00000D07 4983EF04            <1>  sub vV_sp , cell(%1)
  1446                              <1> 
  1447                                  
  1448                                   ;OpADR: [24]  ; IF opcode					
  1449                                  
  1450                                  	vV_dec_sp 1			
  1450                              <1> 
  1450 00000D0B 4983EF04            <1>  sub vV_sp , cell(%1)
  1450                              <1> 
  1451 00000D0F 41830F00                	or DWORD[vV_sp] , 0			
  1452 00000D13 740A                    	je wblock_31	
  1453                                  
  1454                                   ;OpADR: [25]  ; DROP opcode 
  1455                                  
  1456 00000D15 4983EF04                	sub vV_sp , 4	
  1457                                  
  1458                                   ;OpADR: [26]  ; DROP opcode 
  1459                                  
  1460 00000D19 4983EF04                	sub vV_sp , 4	
  1461                                  
  1462                                   ;OpADR: [27]  ; Break opcode					
  1463                                  
  1464 00000D1D EB42                    	jmp wblock_33		
  1465                                  
  1466                                  
  1467                                  	wblock_31:		
  1468                                  
  1469                                  ;------------------------------------------------------
  1470                                  
  1471                                  
  1472                                   ;OpADR: [28]  ; Function Call					
  1473                                  
  1474 00000D1F E8FEF8FFFF              		call calc_msg01			
  1475                                  
  1476                                   ;OpADR: [29]  ; Function Call					
  1477                                  
  1478 00000D24 E845F7FFFF              		call xprint			
  1479                                  
  1480                                   ;OpADR: [30]  ; GET opcode (0)			
  1481                                  
  1482 00000D29 E843F5FFFF              	call vV_io_get_default			
  1483                                  						
  1484                                  
  1485                                   ;OpADR: [31]  ; SWAP opcode 
  1486                                  
  1487                                  
  1488                                  	vV_swap		
  1488                              <1> 
  1488 00000D2E 418B57FC            <1>  mov edx , [vV_sp-4]
  1488 00000D32 418B47F8            <1>  mov eax , [vV_sp-8]
  1488 00000D36 418957F8            <1>  mov [vV_sp-8] , edx
  1488 00000D3A 418947FC            <1>  mov [vV_sp-4] , eax
  1488                              <1> 
  1489                                  
  1490                                  
  1491                                   ;OpADR: [32]  ; Function Call					
  1492                                  
  1493 00000D3E E8DAFBFFFF              		call solve_operand			
  1494                                  
  1495                                   ;OpADR: [33]  ; OUT opcode (0)			
  1496                                  
  1497 00000D43 E805F4FFFF              	call vV_io_out_default			
  1498                                  						
  1499                                  
  1500                                   ;OpADR: [34]  ; PUSH opcode 
  1501                                  
  1502                                  	vV_push 1 
  1502                              <1> 
  1502 00000D48 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1502 00000D4F 4983C704            <1>  add vV_sp , 4
  1502                              <1> 
  1503                                  
  1504                                  
  1505                                   ;OpADR: [35]  ; WHILE opcode					
  1506                                  
  1507                                  	vV_dec_sp 1				
  1507                              <1> 
  1507 00000D53 4983EF04            <1>  sub vV_sp , cell(%1)
  1507                              <1> 
  1508 00000D57 41830F00                	or DWORD[vV_sp] , 0			
  1509 00000D5B 0F8510FFFFFF            	jne wblock_32		
  1510                                  
  1511                                  
  1512                                  	wblock_33:		
  1513                                  
  1514                                  ;------------------------------------------------------
  1515                                  
  1516                                  
  1517                                   ;OpADR: [36]  ; PUSH opcode 
  1518                                  
  1519                                  	vV_push 1 
  1519                              <1> 
  1519 00000D61 41C70701000000      <1>  mov DWORD[vV_sp] , %1
  1519 00000D68 4983C704            <1>  add vV_sp , 4
  1519                              <1> 
  1520                                  
  1521                                  
  1522                                   ;OpADR: [37]  ; WHILE opcode					
  1523                                  
  1524                                  	vV_dec_sp 1				
  1524                              <1> 
  1524 00000D6C 4983EF04            <1>  sub vV_sp , cell(%1)
  1524                              <1> 
  1525 00000D70 41830F00                	or DWORD[vV_sp] , 0			
  1526 00000D74 0F85CFFEFFFF            	jne wblock_34		
  1527                                  
  1528                                  
  1529                                  	wblock_35:		
  1530                                  
  1531                                  ;------------------------------------------------------
  1532                                  
  1533                                  
  1534                                   ;OpADR: [38]  ; Function Call					
  1535                                  
  1536 00000D7A E876F8FFFF              		call goodbye_msg			
  1537                                  
  1538                                   ;OpADR: [39]  ; Function Call					
  1539                                  
  1540 00000D7F E8EAF6FFFF              		call xprint			
  1541                                  		
  1542 00000D84 C3                      		ret
  1543                                  
  1544                                  ;Transpiled from vV with vVc version 0.0.3
  1545                                  		
  1546                                  		
