     1                                  %include "vVc/assembly/w_runtime/vV_defines.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> ;------------------Variables From Project-------------
     5                              <1> 
     6                              <1> 	;------------------Should come from io module(need refactoring)
     7                              <1> 
     8                              <1> 
     9                              <1> 	%define vV_input_buffer_size 255
    10                              <1> 	%define vV_output_buffer_size 255
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;------------------Implementation Relative-------------
    15                              <1> 
    16                              <1> %deftok vV_sp 'r15'
    17                              <1> 
    18                              <1> %deftok vV_spS 'r14'
    19                              <1> 
    20                              <1> %deftok vV_sdir '-'
    21                              <1> 
    22                              <1> 
    23                              <1> 
    24                              <1> 
    25                              <1> ;------------------Stack Shortcuts--------------------
    26                              <1> 
    27                              <1> %define cell(a) (a*4)
    28                              <1> 
    29                              <1> 
    30                              <1> %define vV_top [vV_sp vV_sdir %+ cell(1)]
    31                              <1> %define vV_2nd [vV_sp vV_sdir %+ cell(2)]
    32                              <1> 
    33                              <1> %define vV_stack_v(a) ([vV_sp vV_sdir %+ cell(a)])
    34                              <1> 
    35                              <1> 
    36                              <1> ;-------------------Out_Format Pointer------------------
    37                              <1> 
    38                              <1> %deftok vV_FORMAT_BIN "vV_ascii_int_to_bin"
    39                              <1> %deftok vV_FORMAT_DEC "vV_ascii_int_to_dec"
    40                              <1> %deftok vV_FORMAT_HEX "vV_ascii_int_to_hex"
    41                              <1> 
    42                              <1> 
    43                              <1> 
    44                              <1> ;--------------------Op Macros--------------------------
    45                              <1> 
    46                              <1> %macro vV_push 1
    47                              <1> 
    48                              <1> 	mov DWORD[vV_sp] , %1
    49                              <1> 	add vV_sp , 4
    50                              <1> 
    51                              <1> %endmacro
    52                              <1> 
    53                              <1> %macro vV_pop 1
    54                              <1> 
    55                              <1> 	sub vV_sp , 4
    56                              <1> 	mov %1 , [vV_sp]
    57                              <1> 	
    58                              <1> %endmacro
    59                              <1> 
    60                              <1> %macro vV_swap 0
    61                              <1> 
    62                              <1> 	mov edx , [vV_sp-4]
    63                              <1> 	mov eax , [vV_sp-8]
    64                              <1> 	mov [vV_sp-8] , edx 
    65                              <1> 	mov [vV_sp-4] , eax 
    66                              <1> 	
    67                              <1> %endmacro
    68                              <1> 
    69                              <1> %macro vV_dup 1
    70                              <1> 
    71                              <1> 	mov ecx , %1
    72                              <1> 	lea rsi , [vV_sp-cell(%1)]
    73                              <1> 	mov rdi , vV_sp
    74                              <1> 		
    75                              <1> 	rep movsd
    76                              <1> 	
    77                              <1> 	add vV_sp , cell(%1)
    78                              <1> 	
    79                              <1> %endmacro
    80                              <1> 
    81                              <1> 
    82                              <1> %macro vV_dec_sp 1
    83                              <1> 
    84                              <1> 	sub vV_sp , cell(%1)
    85                              <1> 	
    86                              <1> %endmacro
    87                              <1> 	
     2                                  %include "vVc/assembly/w_runtime/vV_error_code.asm"		
     1                              <1> 
     2                              <1> %define vV_ERR_IO_I_OVERFLOW 1
     3                              <1> %define vV_ERR_IO_O_OVERFLOW 2
     4                              <1> %define vV_ERR_IO_I_UNVALID 3
     5                              <1> %define vV_ERR_IO_O_UNVALID 4
     6                              <1> %define vV_ERR_IO_I_VALUE_OVERFLOW 5
     7                              <1> 
     8                              <1> 
     9                              <1> %define vV_ERR_VALUE_OVERFLOW 8
    10                              <1> 
    11                              <1> 
    12                              <1> %define vV_ERR_MEMORY_BUFFER_LIMIT 16
    13                              <1> %define vV_ERR_MEMORY_OUT_OF_BOUND 17
     3                                  %include "vVc/assembly/w_runtime/vV_runtime.asm"		
     1                              <1> %define SYS_EXIT 60
     2                              <1> 
     3                              <1> 
     4                              <1> ;%include "vVc/assembly/w_runtime/vV_errors.asm"
     5                              <1> ;%include "vVc/assembly/w_runtime/vV_system00.asm"
     6                              <1> ;%include "vVc/assembly/w_runtime/vV_system10.asm"
     7                              <1> ;%include "vVc/assembly/w_runtime/vV_system90.asm"
     8                              <1> 
     9                              <1> 
    10                              <1> global _start
    11                              <1> 
    12                              <1> 
    13                              <1> 
    14                              <1> ;extern vV_entry_point			;Defined by main program
    15                              <1> 
    16                              <1> 
    17                              <1> 
    18                              <1> 	
    19                              <1> segment .data 
    20                              <1> 
    21                              <1> 
    22                              <1> 	
    23                              <1> 
    24                              <1> segment .text 
    25                              <1> 
    26                              <1> 
    27                              <1> 	vV_forced_exit:				;rax hold exit code
    28                              <1> 							;Removed default error printing
    29                              <1> 							;This will now happens in errors module
    30                              <1> 
    31 00000000 4889C7              <1> 		mov rdi, rax
    32 00000003 B83C000000          <1> 		mov rax, SYS_EXIT
    33 00000008 0F05                <1> 		syscall
    34                              <1> 		
    35                              <1> 		
    36                              <1> 
    37                              <1> 
    38                              <1> 	save_regs:			;In case called from other process
    39                              <1> 	
    40 0000000A 58                  <1> 		pop rax
    41                              <1> 	
    42 0000000B 53                  <1> 		push rbx
    43 0000000C 4154                <1> 		push r12
    44 0000000E 4155                <1> 		push r13
    45 00000010 4156                <1> 		push r14
    46 00000012 4157                <1> 		push r15
    47                              <1> 		
    48 00000014 50                  <1> 		push rax
    49                              <1> 		
    50 00000015 C3                  <1> 		ret
    51                              <1> 		
    52                              <1> 	restore_regs:
    53                              <1> 	
    54 00000016 58                  <1> 		pop rax
    55                              <1> 	
    56 00000017 415F                <1> 		pop r15
    57 00000019 415E                <1> 		pop r14
    58 0000001B 415D                <1> 		pop r13
    59 0000001D 415C                <1> 		pop r12
    60 0000001F 5B                  <1> 		pop rbx
    61                              <1> 		
    62 00000020 50                  <1> 		push rax
    63                              <1> 		
    64 00000021 C3                  <1> 		ret
    65                              <1> 		
    66                              <1> 	setup_memory:
    67                              <1> 	
    68 00000022 C70425[80000000]00- <1> 		mov DWORD [vV_input_buffer_content] , 0
    68 0000002A 000000              <1>
    69 0000002D C70425[83010000]00- <1> 		mov DWORD [vV_output_buffer_content] , 0
    69 00000035 000000              <1>
    70                              <1> 		
    71                              <1> 		;mov DWORD [endofline] , 0xa
    72                              <1> 		
    73 00000038 C70425[28010000]-   <1> 		mov DWORD[vV_sys_format_mode] , vV_ascii_int_to_dec
    73 0000003F [97040000]          <1>
    74                              <1> 		
    75 00000043 C3                  <1> 		ret
    76                              <1> 		
    77                              <1> 		
    78                              <1> 	
    79                              <1> 		
    80                              <1> _start:				;Entry point of Every Program
    81                              <1> 	
    82                              <1> 		
    83                              <1> 
    84 00000044 4889E5              <1> 	mov rbp, rsp				;Setup Stack Frame
    85                              <1> 	
    86 00000047 49BF-               <1> 	mov r15 , fake_stack_start			;setup fake data stack
    86 00000049 [DA02040000000000]  <1>
    87                              <1> 	
    88 00000051 E8B4FFFFFF          <1> 	call save_regs				;just in case
    89                              <1> 	
    90                              <1> 	
    91 00000056 E8C7FFFFFF          <1> 	call setup_memory			;all memory setup at start
    92                              <1> 	
    93                              <1> 	
    94                              <1> 	
    95 0000005B E8BC050000          <1> 	call vV_entry_point			;Start the program 
    96                              <1> 	
    97                              <1> 	
    98 00000060 E8B1FFFFFF          <1> 	call restore_regs
    99                              <1> 	
   100                              <1> 
   101                              <1> ;------------------------------------------------------------------------------
   102                              <1> 
   103 00000065 B83C000000          <1> 	mov rax, SYS_EXIT
   104 0000006A BF00000000          <1> 	mov rdi, 0		;Normal exit procedure (no code returned from main)
   105 0000006F 0F05                <1> 	syscall
   106                              <1> 	
   107                              <1> 	
   108                              <1> 	
   109                              <1> 	
   110                              <1> 	
     4                                  %include "vVc/assembly/w_runtime/vV_system00.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5 00000000 <res 00000040>      <1> 	vV_sys_start:	resd 16		;not used now
     6                              <1> 
     7                              <1> 	
     8                              <1> 	
     9                              <1> segment .data
    10                              <1> 
    11                              <1> 
    12                              <1> ;--Start of Memory----------------------------------------------------------
    13                              <1> 
    14                              <1> 	ALIGN 8
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;---------------------Error Managment----------
    18                              <1> 
    19                              <1> 
    20                              <1> ;error vectors	
    21                              <1> 	
    22                              <1> 	vV_error_vectors:
    23 00000000 [FA00000000000000]- <1> 	times 17 dq vV_error_unhandeled
    23 00000000 <rept>              <1>
    24 00000088 [9D00000000000000]  <1> 	dq vV_error_invalid_index
    25 00000090 [FA00000000000000]- <1> 	times 14 dq vV_error_unhandeled
    25 00000090 <rept>              <1>
    26                              <1> 
    27                              <1> 	
    28                              <1> 	
    29                              <1> segment .text
    30                              <1> 
    31                              <1> 
    32                              <1> vV_error:
    33                              <1> 
    34 00000071 52                  <1> 	push rdx
    35                              <1> 	
    36 00000072 4831D2              <1> 	xor rdx , rdx
    37                              <1> 	
    38 00000075 88E2                <1> 	mov dl , ah
    39                              <1> 	
    40 00000077 C0E203              <1> 	shl dl , 3
    41                              <1> 	
    42 0000007A 67FF92[00000000]    <1> 	call [vV_error_vectors + edx]
    43                              <1> 	
    44                              <1> 	
    45 00000081 5A                  <1> 	pop rdx
    46                              <1> 	
    47 00000082 C3                  <1> 	ret
    48                              <1> 	
    49                              <1> 	
    50                              <1> vV_error_fatal:
    51                              <1> 
    52                              <1> 	
    53 00000083 88D0                <1> 	mov al , dl
    54                              <1> 	
    55 00000085 C0E803              <1> 	shr al , 3
    56                              <1> 
    57 00000088 E873FFFFFF          <1> 	call vV_forced_exit
    58                              <1> 	
    59                              <1> vV_bound_error:
    60                              <1> 
    61 0000008D 89FB                <1> 	mov ebx , edi
    62 0000008F B411                <1> 	mov ah , vV_ERR_MEMORY_OUT_OF_BOUND
    63 00000091 E8DBFFFFFF          <1> 	call vV_error	
    64                              <1> 	
    65 00000096 B011                <1> 	mov al , vV_ERR_MEMORY_OUT_OF_BOUND
    66 00000098 E863FFFFFF          <1> 	call vV_forced_exit
    67                              <1> 	
    68                              <1> 	
    69                              <1> 	
    70                              <1> 	
    71                              <1> 	
    72                              <1> 	
    73                              <1> 
    74                              <1> 	
     5                                  %include "vVc/assembly/w_runtime/vV_errors.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> 
     4                              <1> segment .bss
     5                              <1> 
     6                              <1> 
     7                              <1> 	ALIGNB 4
     8                              <1> 		
     9                              <1> 	vV_error_buffer:
    10 00000040 <res 00000040>      <1> 	resb 64
    11                              <1> 	vV_end_err_buff:
    12                              <1> 	vV_error_buffer_size equ vV_end_err_buff-vV_error_buffer
    13                              <1> 
    14                              <1> 
    15                              <1> 
    16                              <1> 
    17                              <1> segment .data
    18                              <1> 
    19                              <1> ;Error String	
    20                              <1> 
    21                              <1> 	
    22                              <1> 	vV_error_msg:
    23 00000100 556E68616E64656C65- <1> 	.default: db "Unhandeled Error "
    23 00000109 64204572726F7220    <1>
    24                              <1> 	default_size equ $-.default
    25 00000111 496E76616C69642049- <1> 	.invalid_index: db "Invalid Index Error : "
    25 0000011A 6E646578204572726F- <1>
    25 00000123 72203A20            <1>
    26                              <1> 	inv_indx_size equ $-.invalid_index
    27                              <1> 
    28                              <1> 
    29                              <1> 
    30                              <1> segment .text
    31                              <1> 
    32                              <1> 
    33                              <1> vV_error_invalid_index:
    34                              <1> 
    35                              <1> 
    36 0000009D 56                  <1> 	push rsi
    37 0000009E 57                  <1> 	push rdi	;Save reg used by syscall
    38 0000009F 4151                <1> 	push r9	;and by conversion func
    39 000000A1 53                  <1> 	push rbx	;Save Arg
    40                              <1> 	
    41 000000A2 BA16000000          <1> 	mov edx , inv_indx_size				;string lenght
    42 000000A7 48BE-               <1> 	mov rsi , vV_error_msg.invalid_index			;strng ptr
    42 000000A9 [1101000000000000]  <1>
    43 000000B1 BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    44 000000B6 B801000000          <1> 	mov rax , 1				; Write sysCall
    45 000000BB 0F05                <1> 	syscall	
    46                              <1> 	
    47                              <1> 	
    48 000000BD 58                  <1> 	pop rax
    49                              <1> 	
    50 000000BE BF[40000000]        <1> 	mov edi , vV_error_buffer
    51 000000C3 41B940000000        <1> 	mov r9d , vV_error_buffer_size
    52 000000C9 E8C9030000          <1> 	call vV_ascii_int_to_dec	
    53                              <1> 
    54 000000CE 67C680[40000000]0A  <1> 	mov BYTE[vV_error_buffer + eax] , 0xa
    55                              <1> 	
    56 000000D6 FFC0                <1> 	inc eax
    57                              <1> 	
    58 000000D8 89C2                <1> 	mov edx , eax				;string lenght
    59 000000DA 48BE-               <1> 	mov rsi , vV_error_buffer			;strng ptr
    59 000000DC [4000000000000000]  <1>
    60 000000E4 BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    61 000000E9 B801000000          <1> 	mov rax , 1				; Write sysCall
    62 000000EE 0F05                <1> 	syscall
    63                              <1> 	
    64 000000F0 4159                <1> 	pop r9
    65 000000F2 5F                  <1> 	pop rdi
    66 000000F3 5E                  <1> 	pop rsi
    67                              <1> 	
    68 000000F4 E88AFFFFFF          <1> 	call vV_error_fatal
    69                              <1> 	
    70 000000F9 C3                  <1> 	ret
    71                              <1> 	
    72                              <1> 	
    73                              <1> 	
    74                              <1> 
    75                              <1> 	
    76                              <1> vV_error_unhandeled:
    77                              <1> 
    78                              <1> 
    79 000000FA 56                  <1> 	push rsi
    80 000000FB 57                  <1> 	push rdi	;Save reg used by syscall
    81 000000FC 4151                <1> 	push r9	;and by conversion func
    82                              <1> 	
    83                              <1> 	
    84                              <1> ;push rax	;Save flags ( and value)
    85                              <1> 
    86 000000FE 53                  <1> 	push rbx	;Save Arg
    87 000000FF 52                  <1> push rdx		;Save error code
    88                              <1> 	
    89                              <1> 	
    90 00000100 BA11000000          <1> 	mov edx , default_size				;string lenght
    91 00000105 48BE-               <1> 	mov rsi , vV_error_msg.default			;strng ptr
    91 00000107 [0001000000000000]  <1>
    92 0000010F BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
    93 00000114 B801000000          <1> 	mov rax , 1				; Write sysCall
    94 00000119 0F05                <1> 	syscall	
    95                              <1> 	
    96                              <1> 	
    97 0000011B 58                  <1> pop rax	;error code
    98                              <1> 
    99                              <1> 
   100 0000011C C0E803              <1> 	shr al , 3
   101                              <1> 	
   102                              <1> 	
   103 0000011F BF[40000000]        <1> 	mov edi , vV_error_buffer
   104 00000124 41B940000000        <1> 	mov r9d , vV_error_buffer_size
   105                              <1> 	
   106                              <1> 
   107 0000012A E868030000          <1> 	call vV_ascii_int_to_dec	
   108                              <1> 	
   109                              <1> 		
   110                              <1> 	
   111 0000012F 67C680[40000000]20  <1> 	mov BYTE[vV_error_buffer + eax] , ' '
   112                              <1> 	
   113                              <1> 	
   114                              <1> 	
   115                              <1> 	
   116 00000137 67488DB8[41000000]  <1> 	lea rdi , [vV_error_buffer + eax + 1]
   117 0000013F 4129F9              <1> 	sub r9d , edi
   118                              <1> 	
   119 00000142 58                  <1> 	pop rax
   120                              <1> 	
   121 00000143 E84F030000          <1> 	call vV_ascii_int_to_dec
   122                              <1> 	
   123 00000148 674C8D0C07          <1> 	lea r9 , [edi + eax]
   124                              <1> 	
   125 0000014D 41C6010A            <1> 	mov BYTE[r9] , 0xa
   126                              <1> 	
   127 00000151 49FFC1              <1> 	inc r9
   128                              <1> 	
   129 00000154 4981E9[40000000]    <1> 	sub r9 , vV_error_buffer
   130                              <1> 	
   131 0000015B 4489CA              <1> 	mov edx , r9d				;string lenght
   132 0000015E 48BE-               <1> 	mov rsi , vV_error_buffer			;strng ptr
   132 00000160 [4000000000000000]  <1>
   133 00000168 BF02000000          <1> 	mov rdi , 2				;file descriptor, stderr
   134 0000016D B801000000          <1> 	mov rax , 1				; Write sysCall
   135 00000172 0F05                <1> 	syscall
   136                              <1> 	
   137 00000174 4159                <1> 	pop r9
   138 00000176 5F                  <1> 	pop rdi
   139 00000177 5E                  <1> 	pop rsi
   140                              <1> 	
   141                              <1> 	
   142                              <1> 	
   143                              <1> 	
   144 00000178 C3                  <1> 	ret
   145                              <1> 	
   146                              <1> 	
   147                              <1> 	
   148                              <1> 		
   149                              <1> 		
   150                              <1> 		
   151                              <1> 		
   152                              <1> 		
   153                              <1> 		
   154                              <1> 		
   155                              <1> 		
   156                              <1> 		
   157                              <1> 		
   158                              <1> 		
   159                              <1> 		
   160                              <1> 		
   161                              <1> 		
   162                              <1> 		
   163                              <1> 		
   164                              <1> 		
   165                              <1> 		
   166                              <1> 		
   167                              <1> 
     6                                  %include "vVc/assembly/w_runtime/vV_system10.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	ALIGNB 4
     5                              <1> 	
     6                              <1> 	
     7                              <1> 	;------------Input Buffer
     8                              <1> 
     9                              <1> 
    10                              <1> 	
    11 00000080 <res 00000004>      <1> 	vV_input_buffer_content: resb 4			;Input Buffer current content
    12 00000084 <res 000000FF>      <1> 	vV_input_buffer: resb vV_input_buffer_size		;Input Buffer of 256 char
    13                              <1> 	
    14                              <1> 	
    15                              <1> 	
    16                              <1> 	
    17                              <1> ;------------Output Buffer
    18                              <1> 
    19                              <1> 
    20                              <1> 
    21                              <1> 	
    22 00000183 <res 00000004>      <1> 	vV_output_buffer_content: resb 4			;Output Buffer current content
    23 00000187 <res 000000FF>      <1> 	vV_output_buffer: resb vV_output_buffer_size		;Output Buffer of 256 char
    24                              <1> 	
    25                              <1> 	
    26                              <1> 	
    27                              <1> 	
    28                              <1> ;------------Number Buffer
    29                              <1> 
    30                              <1> 
    31                              <1> 	
    32                              <1> 	
    33                              <1> 	;w_number_buffer: resb 10				;Todo: Handle Bigger Numbers
    34                              <1> 	;endofline: resb 1					;Maybe Not Needed
    35                              <1> 	
    36                              <1> 
    37                              <1> 
    38                              <1> segment .data
    39 00000127 90                  <1> 	ALIGN 4
    40 00000128 [97040000]          <1> 	vV_sys_format_mode: dd vV_ascii_int_to_dec
     7                                  %include "vVc/assembly/w_runtime/vV_io.asm"			
     1                              <1> 
     2                              <1> 
     3                              <1> ;%include "vVc/assembly/w_runtime/vV_ascii.asm"
     4                              <1> 
     5                              <1> 
     6                              <1> ;Group all read/wrie syscalls
     7                              <1> 
     8                              <1> ;global convert_to_string
     9                              <1> ;global convert_to_int
    10                              <1> 
    11                              <1> ;extern vV_input_buffer
    12                              <1> ;extern vV_output_buffer
    13                              <1> ;extern w_number_buffer
    14                              <1> 
    15                              <1> global wio_out
    16                              <1> global wio_get
    17                              <1> global wio_get_str_raw
    18                              <1> global wio_get_str_null
    19                              <1> global wio_get_str_nline
    20                              <1> global wio_move_in_to_out
    21                              <1> 
    22                              <1> 
    23                              <1> segment .text 
    24                              <1> 
    25                              <1> 
    26                              <1> 
    27                              <1> vV_io_flush_no_nline:							;Temporary
    28                              <1> 	
    29                              <1> 	
    30                              <1> 	
    31 00000179 8B1425[83010000]    <1> 	mov edx , DWORD[vV_output_buffer_content]			;string lenght	
    32                              <1> 	
    33 00000180 C70425[83010000]00- <1> 	mov DWORD[vV_output_buffer_content] , 0
    33 00000188 000000              <1>
    34                              <1> 	
    35 0000018B 48BE-               <1> 	mov rsi , vV_output_buffer			;strng ptr
    35 0000018D [8701000000000000]  <1>
    36                              <1> 		
    37 00000195 BF01000000          <1> 	mov rdi , 1					;file descriptor, stdout
    38 0000019A B801000000          <1> 	mov rax , 1					; Write sysCall
    39 0000019F 0F05                <1> 	syscall
    40                              <1> 	
    41                              <1> 	
    42                              <1> 	
    43 000001A1 C3                  <1> 	ret
    44                              <1> 
    45                              <1> vV_io_flush:
    46                              <1> 	
    47                              <1> 	
    48                              <1> 	
    49 000001A2 8B1425[83010000]    <1> 	mov edx , DWORD[vV_output_buffer_content]			;string lenght	
    50                              <1> 	
    51 000001A9 C70425[83010000]00- <1> 	mov DWORD[vV_output_buffer_content] , 0
    51 000001B1 000000              <1>
    52                              <1> 	
    53 000001B4 48BE-               <1> 	mov rsi , vV_output_buffer			;strng ptr
    53 000001B6 [8701000000000000]  <1>
    54                              <1> 		
    55 000001BE 67C682[87010000]0A  <1> 	mov BYTE[vV_output_buffer + edx] , 0xa
    56 000001C6 FFC2                <1> 	inc edx
    57                              <1> 		
    58 000001C8 BF01000000          <1> 	mov rdi , 1					;file descriptor, stdout
    59 000001CD B801000000          <1> 	mov rax , 1					; Write sysCall
    60 000001D2 0F05                <1> 	syscall
    61                              <1> 	
    62                              <1> 	
    63                              <1> 	
    64 000001D4 C3                  <1> 	ret
    65                              <1> 	
    66                              <1> 		
    67                              <1> ;-------------------------------------------------------------------------------
    68                              <1> ;-------------------------------------------------------------------------------
    69                              <1> 	
    70                              <1> vV_io_out_buffer_default:
    71                              <1> 
    72 000001D5 448B1425[28010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    73 000001DD E80F000000          <1> 	call vV_io_out_buffer
    74 000001E2 C3                  <1> 	ret
    75                              <1> 	
    76                              <1> vV_io_out_default:
    77                              <1> 
    78 000001E3 448B1425[28010000]  <1> 	mov r10d , DWORD[vV_sys_format_mode]	
    79 000001EB E80C000000          <1> 	call vV_io_out
    80 000001F0 C3                  <1> 	ret
    81                              <1> 
    82                              <1> ;-------------------------------------------------------------------------------
    83                              <1> ;-------------------------------------------------------------------------------
    84                              <1> 	
    85                              <1> vV_io_out_buffer:				;print str repr of Top Of Stack element
    86                              <1> 						
    87                              <1> 						
    88 000001F1 E811000000          <1> 	call vV_io_out01			
    89 000001F6 E84A000000          <1> 	call vV_io_out_buffer_end
    90 000001FB C3                  <1> 	ret
    91                              <1> 
    92                              <1> ;-------------------------------------------------------------------------------
    93                              <1> 		
    94                              <1> vV_io_out:					;print str repr of Top Of Stack element
    95                              <1> 
    96                              <1> 
    97 000001FC E806000000          <1> 	call vV_io_out01					
    98 00000201 E826000000          <1> 	call vV_io_out_direct_end
    99 00000206 C3                  <1> 	ret
   100                              <1> 
   101                              <1> ;-------------------------------------------------------------------------------	
   102                              <1> ;-------------------------------------------------------------------------------	
   103                              <1> 
   104                              <1> vV_io_out01:					;print str repr of Top Of Stack element
   105                              <1> 
   106                              <1> 
   107                              <1> 	vV_pop eax				;get value in eax
   107                              <2> 
   107 00000207 4983EF04            <2>  sub vV_sp , 4
   107 0000020B 418B07              <2>  mov %1 , [vV_sp]
   107                              <2> 
   108                              <1> 	
   109 0000020E BF[87010000]        <1> 	mov edi , vV_output_buffer		;set dest as O_buff
   110 00000213 033C25[83010000]    <1> 	add edi ,DWORD[vV_output_buffer_content]		;set offset to start of freespace
   111                              <1> 	
   112 0000021A 57                  <1> push rdi					;Save buffer origin
   113                              <1> 	
   114 0000021B 41B9FF000000        <1> 	mov r9 , 255				;set Max buffer available	
   115 00000221 4129F9              <1> 	sub r9d , edi				;#TODO: Stop HardCoding VALUES!!!!
   116 00000224 41FFD2              <1> 		call r10			;call current conversion format function
   117 00000227 4831FF              <1> 	xor rdi , rdi
   118                              <1> 	
   119 0000022A 5F                  <1> pop rdi						;recover Buffer origin
   120                              <1> 	
   121 0000022B C3                  <1> 	ret
   122                              <1> 
   123                              <1> ;-------------------------------------------------------------------------------	
   124                              <1> 	
   125                              <1> vV_io_out_direct_end:
   126                              <1> 
   127                              <1> 
   128                              <1> 
   129 0000022C 67C604070A          <1> 	mov BYTE[edi + eax] , 0xa		;add new_line
   130                              <1> 		
   131 00000231 FFC0                <1> 		inc eax
   132                              <1> 		
   133 00000233 89C2                <1> 		mov edx , eax				;string lenght		
   134 00000235 4889FE              <1> 		mov rsi , rdi				;strng ptr
   135 00000238 BF01000000          <1> 		mov rdi , 1				;file descriptor, stdout
   136 0000023D B801000000          <1> 		mov rax , 1				; Write sysCall
   137 00000242 0F05                <1> 		syscall
   138                              <1> 	
   139 00000244 C3                  <1> 		ret
   140                              <1> 
   141                              <1> ;-------------------------------------------------------------------------------		
   142                              <1> 		
   143                              <1> vV_io_out_buffer_end:
   144                              <1> 
   145 00000245 010425[83010000]    <1> 	add [vV_output_buffer_content] , eax
   146                              <1> 
   147 0000024C C3                  <1> 	ret
   148                              <1> 
   149                              <1> ;-------------------------------------------------------------------------------
   150                              <1> 
   151                              <1> vV_io_out_char:
   152                              <1> 
   153                              <1> 	
   154 0000024D E827000000          <1> 	call vV_io_read_char
   155 00000252 E8D5FFFFFF          <1> 	call vV_io_out_direct_end
   156                              <1> 	
   157 00000257 C3                  <1> 	ret
   158                              <1> 	
   159                              <1> vV_io_out_packed_char:
   160                              <1> 
   161                              <1> 	
   162 00000258 E842000000          <1> 	call vV_io_read_packed_char
   163                              <1> 	
   164 0000025D E8CAFFFFFF          <1> 	call vV_io_out_direct_end
   165                              <1> 	
   166 00000262 C3                  <1> 	ret
   167                              <1> 	
   168                              <1> vV_io_out_char_buffer:
   169                              <1> 
   170 00000263 E811000000          <1> 	call vV_io_read_char
   171                              <1> 	
   172 00000268 E8D8FFFFFF          <1> 	call vV_io_out_buffer_end
   173                              <1> 	
   174 0000026D C3                  <1> 	ret
   175                              <1> 	
   176                              <1> vV_io_out_packed_char_buffer:
   177                              <1> 
   178 0000026E E82C000000          <1> 	call vV_io_read_packed_char
   179                              <1> 	
   180 00000273 E8CDFFFFFF          <1> 	call vV_io_out_buffer_end
   181                              <1> 	
   182 00000278 C3                  <1> 	ret
   183                              <1> 	
   184                              <1> vV_io_read_char:
   185                              <1> 
   186                              <1> 	vV_pop eax
   186                              <2> 
   186 00000279 4983EF04            <2>  sub vV_sp , 4
   186 0000027D 418B07              <2>  mov %1 , [vV_sp]
   186                              <2> 
   187                              <1> 	
   188 00000280 48BF-               <1> 	mov rdi , vV_output_buffer
   188 00000282 [8701000000000000]  <1>
   189 0000028A 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   190                              <1> 	
   191 00000291 678807              <1> 	mov [edi] , al
   192                              <1> 	
   193 00000294 BF[87010000]        <1> 	mov edi , vV_output_buffer
   194 00000299 B801000000          <1> 	mov eax , 1
   195                              <1> 	
   196 0000029E C3                  <1> 	ret	
   197                              <1> 	
   198                              <1> vV_io_read_packed_char:
   199                              <1> 
   200                              <1> 	vV_pop eax
   200                              <2> 
   200 0000029F 4983EF04            <2>  sub vV_sp , 4
   200 000002A3 418B07              <2>  mov %1 , [vV_sp]
   200                              <2> 
   201                              <1> 	
   202 000002A6 48BF-               <1> 	mov rdi , vV_output_buffer
   202 000002A8 [8701000000000000]  <1>
   203 000002B0 033C25[83010000]    <1> 	add edi , [vV_output_buffer_content]
   204                              <1> 	
   205 000002B7 678907              <1> 	mov [edi] , eax
   206                              <1> 	
   207 000002BA BF[87010000]        <1> 	mov edi , vV_output_buffer
   208 000002BF B804000000          <1> 	mov eax , 4	
   209                              <1> 	
   210 000002C4 C3                  <1> 	ret
   211                              <1> 		
   212                              <1> ;-------------------------------------------------------------------------------
   213                              <1> ;-------------------------------------------------------------------------------
   214                              <1> ;-------------------------------------------------------------------------------
   215                              <1> ;-------------------------------------------------------------------------------
   216                              <1> ;-------------------------------------------------------------------------------
   217                              <1> ;-------------------------------------------------------------------------------
   218                              <1> ;-------------------------------------------------------------------------------
   219                              <1> 	
   220                              <1> vV_io_read:
   221                              <1> 
   222                              <1> 								
   223 000002C5 48BE-               <1> 		mov rsi , vV_input_buffer		;ptr to string destination	
   223 000002C7 [8400000000000000]  <1>
   224 000002CF BAFF000000          <1> 		mov edx , vV_input_buffer_size				;string lenght	
   225 000002D4 BF00000000          <1> 		mov rdi , 0				;file descriptor, stdin
   226 000002D9 B800000000          <1> 		mov rax , 0				; read sysCall
   227                              <1> 		
   228 000002DE 0F05                <1> 		syscall
   229                              <1> 	
   230                              <1> ;-------------Buffer_Overflow_Execption  
   231                              <1> 
   232                              <1> 
   233                              <1> 
   234 000002E0 3DFF000000          <1> 		cmp eax , 255				;Check if Buffer Is Full
   235                              <1> 		
   236 000002E5 721F                <1> 			jb .no_overflow
   237                              <1> 			
   238 000002E7 803C25[82010000]0A  <1> 		cmp BYTE[vV_input_buffer + vV_input_buffer_size-1] , 0xa	;Check if Buffer end with "\n"
   239                              <1> 		
   240 000002EF 7415                <1> 			je .no_overflow
   241                              <1> 		
   242                              <1> 		
   243 000002F1 50                  <1> 			push rax
   244 000002F2 53                  <1> 			push rbx
   245                              <1> 		
   246 000002F3 B401                <1> 			mov ah , vV_ERR_IO_I_OVERFLOW
   247 000002F5 6683C800            <1> 			or ax , 0
   248 000002F9 4831DB              <1> 			xor rbx , rbx
   249 000002FC 4889F3              <1> 			mov rbx , rsi
   250                              <1> 		
   251 000002FF E86DFDFFFF          <1> 			call vV_error
   252                              <1> 		
   253 00000304 5B                  <1> 			pop rbx
   254 00000305 58                  <1> 			pop rax
   255                              <1> 		
   256                              <1> 			;ret
   257                              <1> 		
   258                              <1> 		.no_overflow:
   259                              <1> 		
   260 00000306 C3                  <1> 			ret
   261                              <1> 		
   262                              <1> 		
   263                              <1> 	
   264                              <1> 	
   265                              <1> vV_io_get_default:
   266                              <1> 
   267 00000307 41BA[A7030000]      <1> 	mov r10d , vV_ascii_as_dec			;TODO: default settings
   268 0000030D E801000000          <1> 	call vV_io_get
   269 00000312 C3                  <1> 	ret
   270                              <1> 	
   271                              <1> 	
   272                              <1> vV_io_get:						;convert inputed value to 
   273                              <1> 							;32bit int, push it on
   274                              <1> 							;the stack
   275 00000313 E8ADFFFFFF          <1> 	call vV_io_read
   276                              <1> 		
   277                              <1> ;----------------------------------------------	
   278                              <1> 
   279 00000318 53                  <1> 	push rbx				;Save rbx (conversion uses it) 
   280                              <1> 
   281 00000319 89C3                <1> 		mov ebx , eax 			;send char count by ebx
   282 0000031B 31FF                <1> 		xor edi , edi 			;zero out counter
   283 0000031D BE[84000000]        <1> 		mov esi , vV_input_buffer	;Set source to I_buffer
   284                              <1> 		
   285                              <1> 
   286 00000322 41FFD2              <1> 		call r10
   287                              <1> 		
   288 00000325 5B                  <1> 	pop rbx
   289                              <1> 	
   290                              <1> 		vV_push eax
   290                              <2> 
   290 00000326 418907              <2>  mov DWORD[vV_sp] , %1
   290 00000329 4983C704            <2>  add vV_sp , 4
   290                              <2> 
   291                              <1> 		
   292 0000032D C3                  <1> 		ret
   293                              <1> 
   294                              <1> 
   295                              <1> ;-------------------------------------------------------------------------------
   296                              <1> ;-------------------------------------------------------------------------------
   297                              <1> 
   298                              <1> 
   299                              <1> vV_io_get_char:
   300                              <1> 
   301                              <1> 
   302 0000032E E892FFFFFF          <1> 	call vV_io_read
   303                              <1> 	
   304 00000333 31D2                <1> 	xor edx , edx
   305                              <1> 	
   306 00000335 8A1425[84000000]    <1> 	mov dl , [vV_input_buffer]
   307                              <1> 	
   308                              <1> 	vV_push edx
   308                              <2> 
   308 0000033C 418917              <2>  mov DWORD[vV_sp] , %1
   308 0000033F 4983C704            <2>  add vV_sp , 4
   308                              <2> 
   309                              <1> 	
   310 00000343 C3                  <1> 	ret
   311                              <1> 	
   312                              <1> vV_io_get_packed_char:
   313                              <1> 
   314 00000344 C70425[84000000]00- <1> 	mov DWORD [vV_input_buffer] , 0
   314 0000034C 000000              <1>
   315                              <1> 
   316 0000034F E871FFFFFF          <1> 	call vV_io_read
   317                              <1> 	
   318 00000354 31D2                <1> 	xor edx , edx
   319                              <1> 	
   320 00000356 8B1425[84000000]    <1> 	mov edx, [vV_input_buffer]
   321                              <1> 	
   322                              <1> 	vV_push edx
   322                              <2> 
   322 0000035D 418917              <2>  mov DWORD[vV_sp] , %1
   322 00000360 4983C704            <2>  add vV_sp , 4
   322                              <2> 
   323                              <1> 	
   324 00000364 C3                  <1> 	ret
   325                              <1> 	
   326                              <1> 		
   327                              <1> 		
   328                              <1> 
   329                              <1> 
   330                              <1> 
     8                                  %include "vVc/assembly/w_runtime/vV_ascii.asm"		
     1                              <1> 
     2                              <1> 
     3                              <1> segment .text 
     4                              <1> 
     5                              <1> 
     6                              <1> 
     7                              <1> 
     8                              <1> vV_ascii_as_hex2:						;Jumped to from parse_num OR called
     9                              <1> 								;use edi as counter/offset in string !Set if direct call
    10                              <1> 								;use esi as source string
    11                              <1> 								;concatenate result in eax
    12                              <1> 								;parse digit in cl
    13                              <1> 								
    14                              <1> 								;use r8 for base
    15                              <1> 								;use r9 for max_value
    16                              <1> 								
    17                              <1> 							
    18                              <1> 	;mov r8 , 16	
    19                              <1> 	
    20                              <1> 	.start_loop:
    21                              <1> 	
    22 00000365 678A0C3E            <1> 		mov cl , [esi + edi]
    23                              <1> 	
    24                              <1> 		
    25 00000369 80F930              <1> 		cmp cl , 48
    26                              <1> 		
    27 0000036C 7265                <1> 			jb vV_ascii_unvalid
    28                              <1> 			
    29 0000036E 80F93A              <1> 		cmp cl , 58
    30                              <1> 		
    31 00000371 720D                <1> 			jb .pass_int
    32                              <1> 			
    33 00000373 80F966              <1> 			cmp cl , 'f'
    34                              <1> 			
    35 00000376 775B                <1> 				ja vV_ascii_unvalid
    36                              <1> 			
    37 00000378 80F961              <1> 			cmp cl , 'a'
    38                              <1> 			
    39 0000037B 7256                <1> 				jb vV_ascii_unvalid
    40                              <1> 				
    41 0000037D 80E927              <1> 			sub cl , 39
    42                              <1> 				
    43                              <1> 			
    44                              <1> 		.pass_int:	
    45                              <1> 			
    46 00000380 80E930              <1> 		sub cl , '0'
    47                              <1> 		
    48                              <1> 		
    49                              <1> 		
    50 00000383 31D2                <1> 		xor edx , edx
    51                              <1> 		
    52 00000385 F8                  <1> 		clc
    53                              <1> 		
    54 00000386 41F7E0              <1> 		mul r8d
    55                              <1> 		
    56 00000389 725D                <1> 		jc vV_ascii_overflow
    57                              <1> 		
    58 0000038B 01C8                <1> 		add eax , ecx
    59                              <1> 		
    60                              <1> 		.pass02:
    61                              <1> 		
    62 0000038D FFC7                <1> 		inc edi
    63                              <1> 		
    64 0000038F 39DF                <1> 		cmp edi , ebx
    65                              <1> 		
    66 00000391 72D2                <1> 		jb .start_loop
    67                              <1> 
    68                              <1> 		
    69 00000393 C3                  <1> 		ret	
    70                              <1> 		
    71                              <1> 		
    72                              <1> ;
    73                              <1> ;				ebx		esi
    74                              <1> ;	ascii_to_format( buffer_size , buffer_adress ) 
    75                              <1> ;		
    76                              <1> ;
    77                              <1> ;	set:	rcx,rdx (rax) to 0
    78                              <1> ;		r8,r9
    79                              <1> ;		
    80                              <1> ;	call: specialized dexodefunction
    81                              <1> 		
    82                              <1> vV_ascii_as_hex:
    83                              <1> 	
    84 00000394 FFCB                <1> 	dec ebx
    85 00000396 41B810000000        <1> 	mov r8 , 16	
    86 0000039C 4831C0              <1> 	xor rax , rax 		;(just in case not switching from dec mode)			
    87 0000039F 4831C9              <1> 	xor rcx , rcx
    88 000003A2 4831D2              <1> 	xor rdx , rdx
    89 000003A5 EBBE                <1> 	jmp vV_ascii_as_hex2
    90                              <1> 
    91                              <1> vV_ascii_as_dec:
    92                              <1> 
    93 000003A7 FFCB                <1> 	dec ebx
    94 000003A9 41B80A000000        <1> 	mov r8 , 10			
    95 000003AF 41B93A000000        <1> 	mov r9 , 58
    96 000003B5 4831C9              <1> 	xor rcx , rcx
    97 000003B8 4831D2              <1> 	xor rdx , rdx
    98 000003BB EB5E                <1> 	jmp vV_ascii_as_decbin
    99                              <1> 
   100                              <1> vV_ascii_as_bin:
   101                              <1> 
   102 000003BD FFCB                <1> 	dec ebx
   103 000003BF 41B802000000        <1> 	mov r8 , 2			
   104 000003C5 41B932000000        <1> 	mov r9 , 50
   105 000003CB 4831C9              <1> 	xor rcx , rcx
   106 000003CE 4831D2              <1> 	xor rdx , rdx
   107                              <1> 	
   108 000003D1 EB48                <1> 	jmp vV_ascii_as_decbin
   109                              <1> 	
   110                              <1> vV_ascii_unvalid:
   111                              <1> 	
   112                              <1> 		;mov rax , 24;	#TODO: Defined Errors code/ data in file
   113                              <1> 		;xor rdx , rdx
   114                              <1> 		;mov dl , cl
   115                              <1> 		
   116                              <1> 		;call w_forced_exit
   117                              <1> 		
   118 000003D3 50                  <1> 		push rax
   119 000003D4 53                  <1> 		push rbx
   120                              <1> 		
   121 000003D5 B403                <1> 		mov ah , vV_ERR_IO_I_UNVALID
   122 000003D7 6683C800            <1> 		or ax , 0
   123 000003DB 4831DB              <1> 		xor rbx , rbx
   124 000003DE 88CB                <1> 		mov bl , cl
   125                              <1> 		
   126 000003E0 E88CFCFFFF          <1> 		call vV_error
   127                              <1> 		
   128 000003E5 5B                  <1> 		pop rbx
   129 000003E6 58                  <1> 		pop rax
   130                              <1> 		
   131 000003E7 C3                  <1> 		ret
   132                              <1> 		
   133                              <1> 		
   134                              <1> 		
   135                              <1> 		
   136                              <1> vV_ascii_overflow:
   137                              <1> 	
   138 000003E8 50                  <1> 		push rax
   139 000003E9 53                  <1> 		push rbx
   140                              <1> 		
   141 000003EA 4831DB              <1> 		xor rbx , rbx
   142 000003ED 4889C3              <1> 		mov rbx , rax
   143                              <1> 		
   144                              <1> 		;or rbx , 0x00010000
   145                              <1> 		
   146 000003F0 B401                <1> 		mov ah , vV_ERR_IO_I_OVERFLOW
   147 000003F2 6683C800            <1> 		or ax , 0
   148                              <1> 		
   149                              <1> 		
   150                              <1> 		
   151 000003F6 E876FCFFFF          <1> 		call vV_error
   152                              <1> 		
   153 000003FB 5B                  <1> 		pop rbx
   154 000003FC 58                  <1> 		pop rax
   155                              <1> 		
   156                              <1> 		;TODO: Maybe use vV_error return value for decision making
   157                              <1> 		
   158 000003FD B8FFFFFFFF          <1> 		mov eax , -1
   159                              <1> 		
   160 00000402 C3                  <1> 		ret
   161                              <1> 		
   162                              <1> 		
   163                              <1> vV_ascii_change_to_hex:
   164                              <1> 		
   165 00000403 83F800              <1> 		cmp eax , 0
   166                              <1> 			
   167 00000406 75CB                <1> 			jne vV_ascii_unvalid
   168                              <1> 			
   169 00000408 41B810000000        <1> 		mov r8 , 16
   170 0000040E 4831C9              <1> 		xor rcx , rcx
   171 00000411 4831C0              <1> 		xor rax ,rax
   172                              <1> 				
   173 00000414 FFC7                <1> 		inc edi
   174 00000416 E94AFFFFFF          <1> 		jmp vV_ascii_as_hex2		
   175                              <1> 		
   176                              <1> 	
   177                              <1> 
   178                              <1> 
   179                              <1> vV_ascii_as_decbin:						;ebx: number of char to read
   180                              <1> 
   181                              <1> 	
   182                              <1> 
   183                              <1> 								;use edi as counter/offset in string
   184                              <1> 								;concatenate result in eax
   185                              <1> 								;parse digit in cl
   186                              <1> 								
   187                              <1> 								;use r8 for base
   188                              <1> 								;use r9 for max_value					
   189                              <1> 								;itou
   190                              <1> 	;xor edi, edi			;should be set by caller
   191 0000041B 4831C0              <1> 	xor rax , rax
   192                              <1> 	
   193 0000041E 4831C9              <1> 	xor rcx , rcx
   194                              <1> 	
   195 00000421 4831D2              <1> 	xor rdx , rdx
   196                              <1> 	
   197                              <1> 	
   198                              <1> 	.start_loop:
   199                              <1> 	
   200 00000424 678A0C3E            <1> 		mov cl , [esi + edi]
   201                              <1> 		
   202                              <1> 		
   203 00000428 80F962              <1> 		cmp cl , 'b'										
   204 0000042B 7513                <1> 			jne .pass01
   205                              <1> 		
   206                              <1> 		.format_change:
   207                              <1> 			
   208 0000042D 83F800              <1> 			cmp eax , 0
   209                              <1> 			
   210 00000430 75A1                <1> 				jne vV_ascii_unvalid
   211                              <1> 				
   212 00000432 41B802000000        <1> 			mov r8 , 2
   213                              <1> 			
   214 00000438 41B932000000        <1> 			mov r9 , 50
   215                              <1> 	
   216 0000043E EB26                <1> 			jmp .pass02
   217                              <1> 		
   218                              <1> 		
   219                              <1> 	
   220                              <1> 		.pass01:
   221                              <1> 		
   222 00000440 80F968              <1> 		cmp cl , 'h'											
   223 00000443 74BE                <1> 			je vV_ascii_change_to_hex
   224 00000445 80F978              <1> 		cmp cl , 'x'											
   225 00000448 74B9                <1> 			je vV_ascii_change_to_hex
   226                              <1> 			
   227                              <1> 			
   228 0000044A 4438C9              <1> 		cmp cl , r9b
   229                              <1> 		
   230 0000044D 7384                <1> 			jae vV_ascii_unvalid
   231                              <1> 		
   232 0000044F 80F930              <1> 		cmp cl , 48
   233                              <1> 		
   234 00000452 0F827BFFFFFF        <1> 			jb vV_ascii_unvalid
   235                              <1> 			
   236                              <1> 		
   237                              <1> 			
   238 00000458 80E930              <1> 		sub cl , 48
   239                              <1> 		
   240 0000045B 4831D2              <1> 		xor rdx , rdx
   241 0000045E F8                  <1> 		clc
   242                              <1> 		
   243 0000045F 41F7E0              <1> 		mul r8d
   244                              <1> 		
   245 00000462 7284                <1> 		jc vV_ascii_overflow
   246                              <1> 		
   247 00000464 01C8                <1> 		add eax , ecx
   248                              <1> 		
   249                              <1> 		.pass02:
   250                              <1> 		
   251 00000466 FFC7                <1> 		inc edi
   252                              <1> 		
   253 00000468 39DF                <1> 		cmp edi , ebx
   254                              <1> 		
   255 0000046A 72B8                <1> 		jb .start_loop
   256                              <1> 		
   257                              <1> 		
   258 0000046C C3                  <1> 		ret			; result should be in eax
   259                              <1> 		
   260                              <1> 
   261                              <1> 	
   262                              <1> ;------------------------------------------------------------------------------------------
   263                              <1> ;------------------------------------------------------------------------------------------
   264                              <1> 
   265                              <1> 
   266                              <1> 
   267                              <1> vV_ascii_int_to_hex:					;value in eax
   268                              <1> 						;dest in rdi
   269                              <1> 
   270                              <1> 
   271                              <1> 
   272 0000046D 31C9                <1> 	xor ecx , ecx	
   273                              <1> 	
   274 0000046F BE10000000          <1> 	mov esi , 16
   275                              <1> 
   276                              <1> 	
   277                              <1> 	.loop01:
   278                              <1> 	
   279 00000474 4831D2              <1> 		xor rdx , rdx
   280                              <1> 		
   281 00000477 F7F6                <1> 		div esi
   282                              <1> 		
   283                              <1> 		
   284 00000479 80FA0A              <1> 		cmp dl , 10
   285                              <1> 		
   286 0000047C 7203                <1> 		jb .dec
   287                              <1> 		
   288 0000047E 80C207              <1> 			add dl , 7
   289                              <1> 		
   290                              <1> 		.dec:
   291                              <1> 		
   292 00000481 80C230              <1> 			add dl , '0'
   293                              <1> 		
   294                              <1> 		
   295 00000484 52                  <1> 		push rdx
   296                              <1> 		
   297 00000485 FFC1                <1> 		inc ecx
   298                              <1> 		
   299 00000487 39F0                <1> 		cmp eax , esi
   300                              <1> 		
   301 00000489 73E9                <1> 		jae .loop01
   302                              <1> 	
   303                              <1> 	
   304 0000048B 3C0A                <1> 	cmp al , 10
   305                              <1> 		
   306 0000048D 7202                <1> 		jb .dec2
   307                              <1> 		
   308 0000048F 0407                <1> 			add al , 7
   309                              <1> 		
   310                              <1> 		.dec2:
   311                              <1> 		
   312 00000491 0430                <1> 			add al , '0'	
   313 00000493 8807                <1> 	mov [rdi] , al
   314                              <1> 	
   315 00000495 EB1B                <1> 	jmp vV_ascii_pop_digits
   316                              <1> 		
   317                              <1> 	
   318                              <1> 	
   319                              <1> 	
   320                              <1> vV_ascii_int_to_dec:					;value in eax
   321                              <1> 						;dest in rdi
   322                              <1> 						;max_dest_size in r9d
   323                              <1> 
   324                              <1> 
   325                              <1> 
   326 00000497 31C9                <1> 	xor ecx , ecx	
   327                              <1> 	
   328 00000499 BE0A000000          <1> 	mov esi , 10
   329                              <1> 	
   330                              <1> 
   331                              <1> 
   332                              <1> 	
   333                              <1> 	.loop01:
   334                              <1> 	
   335 0000049E 4831D2              <1> 		xor rdx , rdx
   336                              <1> 		
   337 000004A1 F7F6                <1> 		div esi
   338                              <1> 		
   339                              <1> 		
   340 000004A3 80C230              <1> 		add dl , '0'
   341 000004A6 52                  <1> 		push rdx
   342                              <1> 		
   343 000004A7 FFC1                <1> 		inc ecx
   344                              <1> 		
   345 000004A9 83F80A              <1> 		cmp eax , 10
   346                              <1> 		
   347 000004AC 73F0                <1> 		jae .loop01
   348                              <1> 	
   349 000004AE 0430                <1> 	add al , '0'	
   350 000004B0 8807                <1> 	mov [rdi] , al
   351                              <1> 		
   352                              <1> 	
   353                              <1> 		
   354                              <1> vV_ascii_pop_digits:			; Need nb of digits currently on stack(ecx)
   355                              <1> 						;dest in rdi
   356 000004B2 41B801000000        <1> 		mov r8d , 1
   357 000004B8 FFC1                <1> 		inc ecx
   358                              <1> 		
   359 000004BA 4439C9              <1> 		cmp ecx , r9d
   360                              <1> 		
   361 000004BD 7219                <1> 		jb .loopstart
   362                              <1> 		
   363                              <1> 	
   364 000004BF 50                  <1> 			push rax
   365 000004C0 53                  <1> 			push rbx
   366                              <1> 		
   367 000004C1 B410                <1> 			mov ah , vV_ERR_MEMORY_BUFFER_LIMIT
   368 000004C3 6683C800            <1> 			or ax , 0
   369 000004C7 4831DB              <1> 			xor rbx , rbx
   370 000004CA 89FB                <1> 			mov ebx , edi
   371                              <1> 		
   372 000004CC E8A0FBFFFF          <1> 			call vV_error
   373                              <1> 		
   374 000004D1 5B                  <1> 			pop rbx
   375 000004D2 58                  <1> 			pop rax
   376                              <1> 			
   377 000004D3 4489C9              <1> 			mov ecx , r9d		;Should protect memory..
   378 000004D6 FFC9                <1> 			dec ecx		;will need testing
   379                              <1> 		
   380                              <1> 						
   381                              <1> 		.loopstart:
   382                              <1> 		
   383 000004D8 5A                  <1> 			pop rdx
   384 000004D9 6742881407          <1> 			mov BYTE[edi + r8d] , dl
   385 000004DE 41FFC0              <1> 			inc r8d
   386                              <1> 			
   387 000004E1 4139C8              <1> 			cmp r8d , ecx
   388                              <1> 		
   389 000004E4 72F2                <1> 		jb .loopstart
   390                              <1> 	
   391                              <1> 	
   392 000004E6 89C8                <1> 		mov eax , ecx
   393                              <1> 		
   394 000004E8 C3                  <1> 		ret	
   395                              <1> 	
   396                              <1> 	
   397                              <1> vV_ascii_int_to_bin:					;value in eax, 
   398                              <1> 							
   399                              <1> 
   400                              <1> 
   401 000004E9 31C9                <1> 	xor ecx , ecx
   402                              <1> 	
   403                              <1> 	
   404                              <1> 	.loop01:
   405                              <1> 	
   406                              <1> 		
   407 000004EB D1E8                <1> 		shr eax , 1
   408                              <1> 		
   409 000004ED 7205                <1> 		jc .one
   410                              <1> 		
   411 000004EF B230                <1> 			mov dl , '0'
   412 000004F1 52                  <1> 			push rdx
   413                              <1> 			
   414 000004F2 EB03                <1> 		jmp .next
   415                              <1> 		.one:
   416                              <1> 			
   417 000004F4 B231                <1> 			mov dl , '1'
   418 000004F6 52                  <1> 			push rdx
   419                              <1> 		
   420                              <1> 		.next:
   421                              <1> 		
   422 000004F7 FFC1                <1> 		inc ecx
   423                              <1> 		
   424 000004F9 83F801              <1> 		cmp eax , 1
   425                              <1> 		
   426 000004FC 77ED                <1> 		ja .loop01
   427                              <1> 	
   428 000004FE 0430                <1> 	add al , '0'	
   429 00000500 8807                <1> 	mov [rdi] , al
   430                              <1> 	
   431 00000502 EBAE                <1> 	jmp vV_ascii_pop_digits
   432                              <1> 	
   433                              <1> 	
   434                              <1> ;Will need a special version for String stack
   435                              <1> 
   436                              <1> 
   437                              <1> 
   438                              <1> 
   439                              <1> 
   440                              <1> 
   441                              <1> 
     9                                  %include "w_samples/assembly/stresstest_vars.was"	
     1                              <1>  segment .data 
     2                              <1> 
     3                              <1>  i_global:
     4 0000012C 4500000000000000    <1> .var_1: dq 69
     5                              <1>  segment .bss 
     6                              <1> 
     7                              <1> 	u_global:
     8 00000286 <res 00000004>      <1> .ref_var_1: resb 4 
     9 0000028A <res 00000004>      <1> .ref_var_2: resb 4 
    10 0000028E <res 00000020>      <1> .array_1: resb 32 
    11 000002AE <res 00000020>      <1> .array_of_ref_1: resb 32 
    12 000002CE <res 00000004>      <1> .double_ref_var_1: resb 4 
    13 000002D2 <res 00000004>      <1> .ref_to_array_1: resb 4 
    14 000002D6 <res 00000004>      <1> .var_2: resb 4 
    10                                  %include "vVc/assembly/w_runtime/vV_system90.asm"		
     1                              <1> 
     2                              <1> segment .bss
     3                              <1> 
     4                              <1> 	
     5                              <1> 	
     6                              <1> 	stacks: 
     7                              <1> 
     8                              <1> 
     9 000002DA <res 00040000>      <1> 	string_stack_start: resb 262144
    10                              <1> 
    11                              <1> 
    12                              <1> 	
    13                              <1> 	
    14                              <1> 						
    15 000402DA <res 00020000>      <1> 	fake_stack_start: resb 131072
    11                                  
    12                                  
    13                                  
    14                                  global w_entry_point
    15                                  
    16                                  
    17                                  
    18                                  segment .text 
    19                                  
    20                                  
    21                                  liner:		
    22 00000504 55                      	push rbp	
    23 00000505 4889E5                  	mov rbp , rsp	
    24                                  
    25                                  ;------Setup Phase
    26                                  
    27                                  ;------Init Phase
    28                                  
    29                                  .tailcall:		;Body Section	
    30                                  
    31                                   ;OpADR: [0]  ; PUSH opcode 
    32                                  
    33                                  	vV_push 757935405 
    33                              <1> 
    33 00000508 41C7072D2D2D2D      <1>  mov DWORD[vV_sp] , %1
    33 0000050F 4983C704            <1>  add vV_sp , 4
    33                              <1> 
    34                                  
    35                                  
    36                                   ;OpADR: [1]  ; DUP opcode (1)			
    37                                  
    38                                  	vV_dup 1			
    38                              <1> 
    38 00000513 B901000000          <1>  mov ecx , %1
    38 00000518 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
    38 0000051C 4C89FF              <1>  mov rdi , vV_sp
    38                              <1> 
    38 0000051F F3A5                <1>  rep movsd
    38                              <1> 
    38 00000521 4983C704            <1>  add vV_sp , cell(%1)
    38                              <1> 
    39                                  
    40                                  
    41                                   ;OpADR: [2]  ; BUFF_OUT opcode (9)			
    42                                  
    43                                  
    44 00000525 E844FDFFFF              	call vV_io_out_packed_char_buffer				
    45                                  						
    46                                  
    47                                   ;OpADR: [3]  ; DUP opcode (1)			
    48                                  
    49                                  	vV_dup 1			
    49                              <1> 
    49 0000052A B901000000          <1>  mov ecx , %1
    49 0000052F 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
    49 00000533 4C89FF              <1>  mov rdi , vV_sp
    49                              <1> 
    49 00000536 F3A5                <1>  rep movsd
    49                              <1> 
    49 00000538 4983C704            <1>  add vV_sp , cell(%1)
    49                              <1> 
    50                                  
    51                                  
    52                                   ;OpADR: [4]  ; BUFF_OUT opcode (9)			
    53                                  
    54                                  
    55 0000053C E82DFDFFFF              	call vV_io_out_packed_char_buffer				
    56                                  						
    57                                  
    58                                   ;OpADR: [5]  ; DUP opcode (1)			
    59                                  
    60                                  	vV_dup 1			
    60                              <1> 
    60 00000541 B901000000          <1>  mov ecx , %1
    60 00000546 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
    60 0000054A 4C89FF              <1>  mov rdi , vV_sp
    60                              <1> 
    60 0000054D F3A5                <1>  rep movsd
    60                              <1> 
    60 0000054F 4983C704            <1>  add vV_sp , cell(%1)
    60                              <1> 
    61                                  
    62                                  
    63                                   ;OpADR: [6]  ; BUFF_OUT opcode (9)			
    64                                  
    65                                  
    66 00000553 E816FDFFFF              	call vV_io_out_packed_char_buffer				
    67                                  						
    68                                  
    69                                   ;OpADR: [7]  ; FLUSH opcode					
    70                                  
    71 00000558 E845FCFFFF              		call vV_io_flush	
    72                                  
    73                                   ;OpADR: [8]  ; End of func opcode					
    74                                  
    75                                  
    76                                  ;------Cleanup Phase
    77                                  
    78                                  ;------frame restore Phase
    79 0000055D 4889EC                  	mov rsp , rbp	
    80 00000560 5D                      	pop rbp	
    81 00000561 C3                      	ret	
    82                                  print_array:		
    83 00000562 55                      	push rbp	
    84 00000563 4889E5                  	mov rbp , rsp	
    85                                  
    86                                  ;------Setup Phase
    87                                  
    88                                  ;------Init Phase
    89                                  
    90                                  .tailcall:		;Body Section	
    91                                  
    92                                   ;OpADR: [9]  ; PUSH opcode 
    93                                  
    94                                  	vV_push 8 
    94                              <1> 
    94 00000566 41C70708000000      <1>  mov DWORD[vV_sp] , %1
    94 0000056D 4983C704            <1>  add vV_sp , 4
    94                              <1> 
    95                                  
    96                                  
    97                                   ;OpADR: [10]  ; PUSH opcode 
    98                                  
    99                                  	vV_push 0 
    99                              <1> 
    99 00000571 41C70700000000      <1>  mov DWORD[vV_sp] , %1
    99 00000578 4983C704            <1>  add vV_sp , 4
    99                              <1> 
   100                                  
   101                                  
   102                                  
   103                                  	wblock_0:		
   104                                  
   105                                  ;------------------------------------------------------
   106                                  
   107                                  
   108                                   ;OpADR: [11]  
   109                                   ;OpADR: [12]  ; DUP opcode (1)			
   110                                  
   111                                  	vV_dup 1			
   111                              <1> 
   111 0000057C B901000000          <1>  mov ecx , %1
   111 00000581 498D77FC            <1>  lea rsi , [vV_sp-cell(%1)]
   111 00000585 4C89FF              <1>  mov rdi , vV_sp
   111                              <1> 
   111 00000588 F3A5                <1>  rep movsd
   111                              <1> 
   111 0000058A 4983C704            <1>  add vV_sp , cell(%1)
   111                              <1> 
   112                                  
   113                                  
   114                                   ;OpADR: [13]  ; Var invocation					
   115                                  
   116 0000058E 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   117 00000595 31C0                    	xor eax , eax	
   118                                  	vV_pop ecx	
   118                              <1> 
   118 00000597 4983EF04            <1>  sub vV_sp , 4
   118 0000059B 418B0F              <1>  mov %1 , [vV_sp]
   118                              <1> 
   119 0000059E 83F908                  	cmp ecx , 8	
   120 000005A1 0F8DE6FAFFFF            	jge vV_bound_error	
   121 000005A7 01C8                    	add eax , ecx	
   122 000005A9 C1E002                  	shl eax , 2	
   123 000005AC 678B0C07                	mov ecx , [edi+eax]	
   124                                  	vV_push ecx	
   124                              <1> 
   124 000005B0 41890F              <1>  mov DWORD[vV_sp] , %1
   124 000005B3 4983C704            <1>  add vV_sp , 4
   124                              <1> 
   125                                  
   126                                   ;OpADR: [14]  ; OUT opcode (0)			
   127                                  
   128 000005B7 E827FCFFFF              	call vV_io_out_default			
   129                                  						
   130                                  
   131                                   ;OpADR: [15]  ; PUSH opcode 
   132                                  
   133                                  	vV_push 1 
   133                              <1> 
   133 000005BC 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   133 000005C3 4983C704            <1>  add vV_sp , 4
   133                              <1> 
   134                                  
   135                                  
   136                                   ;OpADR: [16]  ; ADD opcode 					
   137                                  
   138 000005C7 418B47F8                	mov eax , vV_2nd			
   139 000005CB 410347FC                	add eax , vV_top			
   140 000005CF 418947F8                	mov vV_2nd , eax			
   141                                  
   142                                  	vV_dec_sp 1		
   142                              <1> 
   142 000005D3 4983EF04            <1>  sub vV_sp , cell(%1)
   142                              <1> 
   143                                  
   144                                   ;OpADR: [17]  ; DUP opcode (2)			
   145                                  
   146                                  	vV_dup 2			
   146                              <1> 
   146 000005D7 B902000000          <1>  mov ecx , %1
   146 000005DC 498D77F8            <1>  lea rsi , [vV_sp-cell(%1)]
   146 000005E0 4C89FF              <1>  mov rdi , vV_sp
   146                              <1> 
   146 000005E3 F3A5                <1>  rep movsd
   146                              <1> 
   146 000005E5 4983C708            <1>  add vV_sp , cell(%1)
   146                              <1> 
   147                                  
   148                                  
   149                                   ;OpADR: [18]  ; MORE opcode					
   150                                  
   151 000005E9 418B47FC                	mov eax , vV_top			
   152 000005ED 413947F8                	cmp DWORD vV_2nd , eax			
   153                                  
   154 000005F1 76(0B)                  	jbe short 0xb				
   155                                  
   156 000005F3 41C747F8FFFFFFFF        			mov DWORD vV_2nd , -1	
   157                                  
   158 000005FB EB(09)                  	jmp short 0x9				
   159                                  
   160 000005FD 41C747F800000000        			mov DWORD vV_2nd , 0	
   161                                  
   162                                  	vV_dec_sp 1				
   162                              <1> 
   162 00000605 4983EF04            <1>  sub vV_sp , cell(%1)
   162                              <1> 
   163                                  
   164                                   ;OpADR: [19]  ; WHILE opcode					
   165                                  
   166                                  	vV_dec_sp 1				
   166                              <1> 
   166 00000609 4983EF04            <1>  sub vV_sp , cell(%1)
   166                              <1> 
   167 0000060D 41830F00                	or DWORD[vV_sp] , 0			
   168 00000611 0F8565FFFFFF            	jne wblock_0		
   169                                  
   170                                  
   171                                  	wblock_1:		
   172                                  
   173                                  ;------------------------------------------------------
   174                                  
   175                                  
   176                                   ;OpADR: [20]  ; End of func opcode					
   177                                  
   178                                  
   179                                  ;------Cleanup Phase
   180                                  
   181                                  ;------frame restore Phase
   182 00000617 4889EC                  	mov rsp , rbp	
   183 0000061A 5D                      	pop rbp	
   184 0000061B C3                      	ret	
   185                                  
   186                                  		
   187                                  
   188                                  
   189                                  
   190                                  vV_entry_point:
   191                                  
   192                                  
   193 0000061C 4889E5                  	mov rbp, rsp			;Setup Stack Frame
   194                                  	
   195                                  	
   196                                   ;OpADR: [0]  ; Var Ref assignement					
   197                                  
   198 0000061F 31C0                    	xor eax , eax
   199 00000621 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   200 00000628 678D3407                	lea esi , [edi+eax]	
   201 0000062C 31C0                    	xor eax , eax
   202 0000062E 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   203 00000635 678D3C07                	lea edi , [edi+eax]	
   204 00000639 678B06                  	mov eax , [esi]	
   205 0000063C 678907                  	mov DWORD[edi] , eax	
   206                                  
   207                                   ;OpADR: [1]  ; Var Ref assignement					
   208                                  
   209 0000063F 31C0                    	xor eax , eax
   210 00000641 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   211 00000648 678D3407                	lea esi , [edi+eax]	
   212 0000064C 31C0                    	xor eax , eax
   213 0000064E 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   214 00000655 678D3C07                	lea edi , [edi+eax]	
   215 00000659 678937                  	mov [edi] , esi	
   216                                  
   217                                   ;OpADR: [2]  ; Var invocation					
   218                                  
   219 0000065C 31C0                    	xor eax , eax
   220 0000065E 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   221 00000665 678B0C07                	mov ecx , [edi+eax]	
   222                                  	vV_push ecx	
   222                              <1> 
   222 00000669 41890F              <1>  mov DWORD[vV_sp] , %1
   222 0000066C 4983C704            <1>  add vV_sp , 4
   222                              <1> 
   223                                  
   224                                   ;OpADR: [3]  ; OUT opcode (0)			
   225                                  
   226 00000670 E86EFBFFFF              	call vV_io_out_default			
   227                                  						
   228                                  
   229                                   ;OpADR: [4]  ; Var invocation					
   230                                  
   231 00000675 31C0                    	xor eax , eax
   232 00000677 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   233 0000067E 678B0C07                	mov ecx , [edi+eax]	
   234                                  	vV_push ecx	
   234                              <1> 
   234 00000682 41890F              <1>  mov DWORD[vV_sp] , %1
   234 00000685 4983C704            <1>  add vV_sp , 4
   234                              <1> 
   235                                  
   236                                   ;OpADR: [5]  ; OUT opcode (0)			
   237                                  
   238 00000689 E855FBFFFF              	call vV_io_out_default			
   239                                  						
   240                                  
   241                                   ;OpADR: [6]  ; Var invocation					
   242                                  
   243 0000068E 31C0                    	xor eax , eax
   244 00000690 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   245 00000697 678B0C07                	mov ecx , [edi+eax]	
   246 0000069B 678B09                  	mov ecx , [ecx]	
   247                                  	vV_push ecx	
   247                              <1> 
   247 0000069E 41890F              <1>  mov DWORD[vV_sp] , %1
   247 000006A1 4983C704            <1>  add vV_sp , 4
   247                              <1> 
   248                                  
   249                                   ;OpADR: [7]  ; OUT opcode (0)			
   250                                  
   251 000006A5 E839FBFFFF              	call vV_io_out_default			
   252                                  						
   253                                  
   254                                   ;OpADR: [8]  ; FLUSH opcode					
   255                                  
   256 000006AA E8F3FAFFFF              		call vV_io_flush	
   257                                  
   258                                   ;OpADR: [9]  ; PUSH opcode 
   259                                  
   260                                  	vV_push 420 
   260                              <1> 
   260 000006AF 41C707A4010000      <1>  mov DWORD[vV_sp] , %1
   260 000006B6 4983C704            <1>  add vV_sp , 4
   260                              <1> 
   261                                  
   262                                  
   263                                   ;OpADR: [10]  ; Var assignement					
   264                                  
   265 000006BA 31C0                    	xor eax , eax
   266 000006BC 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   267                                  	vV_pop ecx	
   267                              <1> 
   267 000006C3 4983EF04            <1>  sub vV_sp , 4
   267 000006C7 418B0F              <1>  mov %1 , [vV_sp]
   267                              <1> 
   268 000006CA 678D3C07                	lea edi , [edi+eax]	
   269 000006CE 678B3F                  	mov edi , [edi]	
   270 000006D1 67890F                  	mov [edi] , ecx	
   271                                  
   272                                   ;OpADR: [11]  ; Var invocation					
   273                                  
   274 000006D4 31C0                    	xor eax , eax
   275 000006D6 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   276 000006DD 678B0C07                	mov ecx , [edi+eax]	
   277                                  	vV_push ecx	
   277                              <1> 
   277 000006E1 41890F              <1>  mov DWORD[vV_sp] , %1
   277 000006E4 4983C704            <1>  add vV_sp , 4
   277                              <1> 
   278                                  
   279                                   ;OpADR: [12]  ; OUT opcode (0)			
   280                                  
   281 000006E8 E8F6FAFFFF              	call vV_io_out_default			
   282                                  						
   283                                  
   284                                   ;OpADR: [13]  ; Var invocation					
   285                                  
   286 000006ED 31C0                    	xor eax , eax
   287 000006EF 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   288 000006F6 678B0C07                	mov ecx , [edi+eax]	
   289                                  	vV_push ecx	
   289                              <1> 
   289 000006FA 41890F              <1>  mov DWORD[vV_sp] , %1
   289 000006FD 4983C704            <1>  add vV_sp , 4
   289                              <1> 
   290                                  
   291                                   ;OpADR: [14]  ; OUT opcode (0)			
   292                                  
   293 00000701 E8DDFAFFFF              	call vV_io_out_default			
   294                                  						
   295                                  
   296                                   ;OpADR: [15]  ; Var invocation					
   297                                  
   298 00000706 31C0                    	xor eax , eax
   299 00000708 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   300 0000070F 678B0C07                	mov ecx , [edi+eax]	
   301 00000713 678B09                  	mov ecx , [ecx]	
   302                                  	vV_push ecx	
   302                              <1> 
   302 00000716 41890F              <1>  mov DWORD[vV_sp] , %1
   302 00000719 4983C704            <1>  add vV_sp , 4
   302                              <1> 
   303                                  
   304                                   ;OpADR: [16]  ; OUT opcode (0)			
   305                                  
   306 0000071D E8C1FAFFFF              	call vV_io_out_default			
   307                                  						
   308                                  
   309                                   ;OpADR: [17]  ; FLUSH opcode					
   310                                  
   311 00000722 E87BFAFFFF              		call vV_io_flush	
   312                                  
   313                                   ;OpADR: [18]  ; PUSH opcode 
   314                                  
   315                                  	vV_push 666999 
   315                              <1> 
   315 00000727 41C707772D0A00      <1>  mov DWORD[vV_sp] , %1
   315 0000072E 4983C704            <1>  add vV_sp , 4
   315                              <1> 
   316                                  
   317                                  
   318                                   ;OpADR: [19]  ; Var assignement					
   319                                  
   320 00000732 31C0                    	xor eax , eax
   321 00000734 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   322                                  	vV_pop ecx	
   322                              <1> 
   322 0000073B 4983EF04            <1>  sub vV_sp , 4
   322 0000073F 418B0F              <1>  mov %1 , [vV_sp]
   322                              <1> 
   323 00000742 678D3C07                	lea edi , [edi+eax]	
   324 00000746 67890F                  	mov [edi] , ecx	
   325                                  
   326                                   ;OpADR: [20]  ; Var invocation					
   327                                  
   328 00000749 31C0                    	xor eax , eax
   329 0000074B 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   330 00000752 678B0C07                	mov ecx , [edi+eax]	
   331                                  	vV_push ecx	
   331                              <1> 
   331 00000756 41890F              <1>  mov DWORD[vV_sp] , %1
   331 00000759 4983C704            <1>  add vV_sp , 4
   331                              <1> 
   332                                  
   333                                   ;OpADR: [21]  ; OUT opcode (0)			
   334                                  
   335 0000075D E881FAFFFF              	call vV_io_out_default			
   336                                  						
   337                                  
   338                                   ;OpADR: [22]  ; Var invocation					
   339                                  
   340 00000762 31C0                    	xor eax , eax
   341 00000764 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   342 0000076B 678B0C07                	mov ecx , [edi+eax]	
   343                                  	vV_push ecx	
   343                              <1> 
   343 0000076F 41890F              <1>  mov DWORD[vV_sp] , %1
   343 00000772 4983C704            <1>  add vV_sp , 4
   343                              <1> 
   344                                  
   345                                   ;OpADR: [23]  ; OUT opcode (0)			
   346                                  
   347 00000776 E868FAFFFF              	call vV_io_out_default			
   348                                  						
   349                                  
   350                                   ;OpADR: [24]  ; Var invocation					
   351                                  
   352 0000077B 31C0                    	xor eax , eax
   353 0000077D 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   354 00000784 678B0C07                	mov ecx , [edi+eax]	
   355 00000788 678B09                  	mov ecx , [ecx]	
   356                                  	vV_push ecx	
   356                              <1> 
   356 0000078B 41890F              <1>  mov DWORD[vV_sp] , %1
   356 0000078E 4983C704            <1>  add vV_sp , 4
   356                              <1> 
   357                                  
   358                                   ;OpADR: [25]  ; OUT opcode (0)			
   359                                  
   360 00000792 E84CFAFFFF              	call vV_io_out_default			
   361                                  						
   362                                  
   363                                   ;OpADR: [26]  ; FLUSH opcode					
   364                                  
   365 00000797 E806FAFFFF              		call vV_io_flush	
   366                                  
   367                                   ;OpADR: [27]  ; PUSH opcode 
   368                                  
   369                                  	vV_push 0 
   369                              <1> 
   369 0000079C 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   369 000007A3 4983C704            <1>  add vV_sp , 4
   369                              <1> 
   370                                  
   371                                  
   372                                   ;OpADR: [28]  ; Var assignement					
   373                                  
   374 000007A7 31C0                    	xor eax , eax
   375 000007A9 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   376                                  	vV_pop ecx	
   376                              <1> 
   376 000007B0 4983EF04            <1>  sub vV_sp , 4
   376 000007B4 418B0F              <1>  mov %1 , [vV_sp]
   376                              <1> 
   377 000007B7 678D3C07                	lea edi , [edi+eax]	
   378 000007BB 67890F                  	mov [edi] , ecx	
   379                                  
   380                                   ;OpADR: [29]  ; Var invocation					
   381                                  
   382 000007BE 31C0                    	xor eax , eax
   383 000007C0 8D3C25[2C010000]        	lea edi , [i_global.var_1]	
   384 000007C7 678B0C07                	mov ecx , [edi+eax]	
   385                                  	vV_push ecx	
   385                              <1> 
   385 000007CB 41890F              <1>  mov DWORD[vV_sp] , %1
   385 000007CE 4983C704            <1>  add vV_sp , 4
   385                              <1> 
   386                                  
   387                                   ;OpADR: [30]  ; OUT opcode (0)			
   388                                  
   389 000007D2 E80CFAFFFF              	call vV_io_out_default			
   390                                  						
   391                                  
   392                                   ;OpADR: [31]  ; Var invocation					
   393                                  
   394 000007D7 31C0                    	xor eax , eax
   395 000007D9 8D3C25[D6020000]        	lea edi , [u_global.var_2]	
   396 000007E0 678B0C07                	mov ecx , [edi+eax]	
   397                                  	vV_push ecx	
   397                              <1> 
   397 000007E4 41890F              <1>  mov DWORD[vV_sp] , %1
   397 000007E7 4983C704            <1>  add vV_sp , 4
   397                              <1> 
   398                                  
   399                                   ;OpADR: [32]  ; OUT opcode (0)			
   400                                  
   401 000007EB E8F3F9FFFF              	call vV_io_out_default			
   402                                  						
   403                                  
   404                                   ;OpADR: [33]  ; Var invocation					
   405                                  
   406 000007F0 31C0                    	xor eax , eax
   407 000007F2 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   408 000007F9 678B0C07                	mov ecx , [edi+eax]	
   409 000007FD 678B09                  	mov ecx , [ecx]	
   410                                  	vV_push ecx	
   410                              <1> 
   410 00000800 41890F              <1>  mov DWORD[vV_sp] , %1
   410 00000803 4983C704            <1>  add vV_sp , 4
   410                              <1> 
   411                                  
   412                                   ;OpADR: [34]  ; OUT opcode (0)			
   413                                  
   414 00000807 E8D7F9FFFF              	call vV_io_out_default			
   415                                  						
   416                                  
   417                                   ;OpADR: [35]  ; Function Call					
   418                                  
   419 0000080C E8F3FCFFFF              		call liner			
   420                                  
   421                                   ;OpADR: [36]  ; PUSH opcode 
   422                                  
   423                                  	vV_push 11 
   423                              <1> 
   423 00000811 41C7070B000000      <1>  mov DWORD[vV_sp] , %1
   423 00000818 4983C704            <1>  add vV_sp , 4
   423                              <1> 
   424                                  
   425                                  
   426                                   ;OpADR: [37]  ; PUSH opcode 
   427                                  
   428                                  	vV_push 0 
   428                              <1> 
   428 0000081C 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   428 00000823 4983C704            <1>  add vV_sp , 4
   428                              <1> 
   429                                  
   430                                  
   431                                   ;OpADR: [38]  ; Var assignement					
   432                                  
   433 00000827 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   434 0000082E 31C0                    	xor eax , eax	
   435                                  	vV_pop ecx	
   435                              <1> 
   435 00000830 4983EF04            <1>  sub vV_sp , 4
   435 00000834 418B0F              <1>  mov %1 , [vV_sp]
   435                              <1> 
   436 00000837 83F908                  	cmp ecx , 8	
   437 0000083A 0F8D4DF8FFFF            	jge vV_bound_error	
   438 00000840 01C8                    	add eax , ecx	
   439 00000842 C1E002                  	shl eax , 2	
   440                                  	vV_pop ecx	
   440                              <1> 
   440 00000845 4983EF04            <1>  sub vV_sp , 4
   440 00000849 418B0F              <1>  mov %1 , [vV_sp]
   440                              <1> 
   441 0000084C 678D3C07                	lea edi , [edi+eax]	
   442 00000850 67890F                  	mov [edi] , ecx	
   443                                  
   444                                   ;OpADR: [39]  ; PUSH opcode 
   445                                  
   446                                  	vV_push 22 
   446                              <1> 
   446 00000853 41C70716000000      <1>  mov DWORD[vV_sp] , %1
   446 0000085A 4983C704            <1>  add vV_sp , 4
   446                              <1> 
   447                                  
   448                                  
   449                                   ;OpADR: [40]  ; PUSH opcode 
   450                                  
   451                                  	vV_push 1 
   451                              <1> 
   451 0000085E 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   451 00000865 4983C704            <1>  add vV_sp , 4
   451                              <1> 
   452                                  
   453                                  
   454                                   ;OpADR: [41]  ; Var assignement					
   455                                  
   456 00000869 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   457 00000870 31C0                    	xor eax , eax	
   458                                  	vV_pop ecx	
   458                              <1> 
   458 00000872 4983EF04            <1>  sub vV_sp , 4
   458 00000876 418B0F              <1>  mov %1 , [vV_sp]
   458                              <1> 
   459 00000879 83F908                  	cmp ecx , 8	
   460 0000087C 0F8D0BF8FFFF            	jge vV_bound_error	
   461 00000882 01C8                    	add eax , ecx	
   462 00000884 C1E002                  	shl eax , 2	
   463                                  	vV_pop ecx	
   463                              <1> 
   463 00000887 4983EF04            <1>  sub vV_sp , 4
   463 0000088B 418B0F              <1>  mov %1 , [vV_sp]
   463                              <1> 
   464 0000088E 678D3C07                	lea edi , [edi+eax]	
   465 00000892 67890F                  	mov [edi] , ecx	
   466                                  
   467                                   ;OpADR: [42]  ; PUSH opcode 
   468                                  
   469                                  	vV_push 33 
   469                              <1> 
   469 00000895 41C70721000000      <1>  mov DWORD[vV_sp] , %1
   469 0000089C 4983C704            <1>  add vV_sp , 4
   469                              <1> 
   470                                  
   471                                  
   472                                   ;OpADR: [43]  ; PUSH opcode 
   473                                  
   474                                  	vV_push 2 
   474                              <1> 
   474 000008A0 41C70702000000      <1>  mov DWORD[vV_sp] , %1
   474 000008A7 4983C704            <1>  add vV_sp , 4
   474                              <1> 
   475                                  
   476                                  
   477                                   ;OpADR: [44]  ; Var assignement					
   478                                  
   479 000008AB 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   480 000008B2 31C0                    	xor eax , eax	
   481                                  	vV_pop ecx	
   481                              <1> 
   481 000008B4 4983EF04            <1>  sub vV_sp , 4
   481 000008B8 418B0F              <1>  mov %1 , [vV_sp]
   481                              <1> 
   482 000008BB 83F908                  	cmp ecx , 8	
   483 000008BE 0F8DC9F7FFFF            	jge vV_bound_error	
   484 000008C4 01C8                    	add eax , ecx	
   485 000008C6 C1E002                  	shl eax , 2	
   486                                  	vV_pop ecx	
   486                              <1> 
   486 000008C9 4983EF04            <1>  sub vV_sp , 4
   486 000008CD 418B0F              <1>  mov %1 , [vV_sp]
   486                              <1> 
   487 000008D0 678D3C07                	lea edi , [edi+eax]	
   488 000008D4 67890F                  	mov [edi] , ecx	
   489                                  
   490                                   ;OpADR: [45]  ; PUSH opcode 
   491                                  
   492                                  	vV_push 44 
   492                              <1> 
   492 000008D7 41C7072C000000      <1>  mov DWORD[vV_sp] , %1
   492 000008DE 4983C704            <1>  add vV_sp , 4
   492                              <1> 
   493                                  
   494                                  
   495                                   ;OpADR: [46]  ; PUSH opcode 
   496                                  
   497                                  	vV_push 3 
   497                              <1> 
   497 000008E2 41C70703000000      <1>  mov DWORD[vV_sp] , %1
   497 000008E9 4983C704            <1>  add vV_sp , 4
   497                              <1> 
   498                                  
   499                                  
   500                                   ;OpADR: [47]  ; Var assignement					
   501                                  
   502 000008ED 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   503 000008F4 31C0                    	xor eax , eax	
   504                                  	vV_pop ecx	
   504                              <1> 
   504 000008F6 4983EF04            <1>  sub vV_sp , 4
   504 000008FA 418B0F              <1>  mov %1 , [vV_sp]
   504                              <1> 
   505 000008FD 83F908                  	cmp ecx , 8	
   506 00000900 0F8D87F7FFFF            	jge vV_bound_error	
   507 00000906 01C8                    	add eax , ecx	
   508 00000908 C1E002                  	shl eax , 2	
   509                                  	vV_pop ecx	
   509                              <1> 
   509 0000090B 4983EF04            <1>  sub vV_sp , 4
   509 0000090F 418B0F              <1>  mov %1 , [vV_sp]
   509                              <1> 
   510 00000912 678D3C07                	lea edi , [edi+eax]	
   511 00000916 67890F                  	mov [edi] , ecx	
   512                                  
   513                                   ;OpADR: [48]  ; PUSH opcode 
   514                                  
   515                                  	vV_push 55 
   515                              <1> 
   515 00000919 41C70737000000      <1>  mov DWORD[vV_sp] , %1
   515 00000920 4983C704            <1>  add vV_sp , 4
   515                              <1> 
   516                                  
   517                                  
   518                                   ;OpADR: [49]  ; PUSH opcode 
   519                                  
   520                                  	vV_push 4 
   520                              <1> 
   520 00000924 41C70704000000      <1>  mov DWORD[vV_sp] , %1
   520 0000092B 4983C704            <1>  add vV_sp , 4
   520                              <1> 
   521                                  
   522                                  
   523                                   ;OpADR: [50]  ; Var assignement					
   524                                  
   525 0000092F 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   526 00000936 31C0                    	xor eax , eax	
   527                                  	vV_pop ecx	
   527                              <1> 
   527 00000938 4983EF04            <1>  sub vV_sp , 4
   527 0000093C 418B0F              <1>  mov %1 , [vV_sp]
   527                              <1> 
   528 0000093F 83F908                  	cmp ecx , 8	
   529 00000942 0F8D45F7FFFF            	jge vV_bound_error	
   530 00000948 01C8                    	add eax , ecx	
   531 0000094A C1E002                  	shl eax , 2	
   532                                  	vV_pop ecx	
   532                              <1> 
   532 0000094D 4983EF04            <1>  sub vV_sp , 4
   532 00000951 418B0F              <1>  mov %1 , [vV_sp]
   532                              <1> 
   533 00000954 678D3C07                	lea edi , [edi+eax]	
   534 00000958 67890F                  	mov [edi] , ecx	
   535                                  
   536                                   ;OpADR: [51]  ; PUSH opcode 
   537                                  
   538                                  	vV_push 66 
   538                              <1> 
   538 0000095B 41C70742000000      <1>  mov DWORD[vV_sp] , %1
   538 00000962 4983C704            <1>  add vV_sp , 4
   538                              <1> 
   539                                  
   540                                  
   541                                   ;OpADR: [52]  ; PUSH opcode 
   542                                  
   543                                  	vV_push 5 
   543                              <1> 
   543 00000966 41C70705000000      <1>  mov DWORD[vV_sp] , %1
   543 0000096D 4983C704            <1>  add vV_sp , 4
   543                              <1> 
   544                                  
   545                                  
   546                                   ;OpADR: [53]  ; Var assignement					
   547                                  
   548 00000971 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   549 00000978 31C0                    	xor eax , eax	
   550                                  	vV_pop ecx	
   550                              <1> 
   550 0000097A 4983EF04            <1>  sub vV_sp , 4
   550 0000097E 418B0F              <1>  mov %1 , [vV_sp]
   550                              <1> 
   551 00000981 83F908                  	cmp ecx , 8	
   552 00000984 0F8D03F7FFFF            	jge vV_bound_error	
   553 0000098A 01C8                    	add eax , ecx	
   554 0000098C C1E002                  	shl eax , 2	
   555                                  	vV_pop ecx	
   555                              <1> 
   555 0000098F 4983EF04            <1>  sub vV_sp , 4
   555 00000993 418B0F              <1>  mov %1 , [vV_sp]
   555                              <1> 
   556 00000996 678D3C07                	lea edi , [edi+eax]	
   557 0000099A 67890F                  	mov [edi] , ecx	
   558                                  
   559                                   ;OpADR: [54]  ; PUSH opcode 
   560                                  
   561                                  	vV_push 77 
   561                              <1> 
   561 0000099D 41C7074D000000      <1>  mov DWORD[vV_sp] , %1
   561 000009A4 4983C704            <1>  add vV_sp , 4
   561                              <1> 
   562                                  
   563                                  
   564                                   ;OpADR: [55]  ; PUSH opcode 
   565                                  
   566                                  	vV_push 6 
   566                              <1> 
   566 000009A8 41C70706000000      <1>  mov DWORD[vV_sp] , %1
   566 000009AF 4983C704            <1>  add vV_sp , 4
   566                              <1> 
   567                                  
   568                                  
   569                                   ;OpADR: [56]  ; Var assignement					
   570                                  
   571 000009B3 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   572 000009BA 31C0                    	xor eax , eax	
   573                                  	vV_pop ecx	
   573                              <1> 
   573 000009BC 4983EF04            <1>  sub vV_sp , 4
   573 000009C0 418B0F              <1>  mov %1 , [vV_sp]
   573                              <1> 
   574 000009C3 83F908                  	cmp ecx , 8	
   575 000009C6 0F8DC1F6FFFF            	jge vV_bound_error	
   576 000009CC 01C8                    	add eax , ecx	
   577 000009CE C1E002                  	shl eax , 2	
   578                                  	vV_pop ecx	
   578                              <1> 
   578 000009D1 4983EF04            <1>  sub vV_sp , 4
   578 000009D5 418B0F              <1>  mov %1 , [vV_sp]
   578                              <1> 
   579 000009D8 678D3C07                	lea edi , [edi+eax]	
   580 000009DC 67890F                  	mov [edi] , ecx	
   581                                  
   582                                   ;OpADR: [57]  ; PUSH opcode 
   583                                  
   584                                  	vV_push 88 
   584                              <1> 
   584 000009DF 41C70758000000      <1>  mov DWORD[vV_sp] , %1
   584 000009E6 4983C704            <1>  add vV_sp , 4
   584                              <1> 
   585                                  
   586                                  
   587                                   ;OpADR: [58]  ; PUSH opcode 
   588                                  
   589                                  	vV_push 7 
   589                              <1> 
   589 000009EA 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   589 000009F1 4983C704            <1>  add vV_sp , 4
   589                              <1> 
   590                                  
   591                                  
   592                                   ;OpADR: [59]  ; Var assignement					
   593                                  
   594 000009F5 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   595 000009FC 31C0                    	xor eax , eax	
   596                                  	vV_pop ecx	
   596                              <1> 
   596 000009FE 4983EF04            <1>  sub vV_sp , 4
   596 00000A02 418B0F              <1>  mov %1 , [vV_sp]
   596                              <1> 
   597 00000A05 83F908                  	cmp ecx , 8	
   598 00000A08 0F8D7FF6FFFF            	jge vV_bound_error	
   599 00000A0E 01C8                    	add eax , ecx	
   600 00000A10 C1E002                  	shl eax , 2	
   601                                  	vV_pop ecx	
   601                              <1> 
   601 00000A13 4983EF04            <1>  sub vV_sp , 4
   601 00000A17 418B0F              <1>  mov %1 , [vV_sp]
   601                              <1> 
   602 00000A1A 678D3C07                	lea edi , [edi+eax]	
   603 00000A1E 67890F                  	mov [edi] , ecx	
   604                                  
   605                                   ;OpADR: [60]  ; Function Call					
   606                                  
   607 00000A21 E83CFBFFFF              		call print_array			
   608                                  
   609                                   ;OpADR: [61]  ; Var Ref assignement					
   610                                  
   611 00000A26 31C0                    	xor eax , eax
   612 00000A28 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   613 00000A2F 678D3407                	lea esi , [edi+eax]	
   614 00000A33 31C0                    	xor eax , eax
   615 00000A35 8D3C25[D2020000]        	lea edi , [u_global.ref_to_array_1]	
   616 00000A3C 678D3C07                	lea edi , [edi+eax]	
   617 00000A40 678937                  	mov [edi] , esi	
   618                                  
   619                                   ;OpADR: [62]  ; Var Ref assignement					
   620                                  
   621 00000A43 31C0                    	xor eax , eax
   622 00000A45 8D3C25[8E020000]        	lea edi , [u_global.array_1]	
   623 00000A4C 678D3407                	lea esi , [edi+eax]	
   624 00000A50 31C0                    	xor eax , eax
   625 00000A52 8D3C25[AE020000]        	lea edi , [u_global.array_of_ref_1]	
   626 00000A59 678D3C07                	lea edi , [edi+eax]	
   627 00000A5D 4989E0                  	mov r8 , rsp	
   628 00000A60 56                      	push rsi 	
   629 00000A61 57                      	push rdi	
   630 00000A62 31C9                    	xor ecx , ecx	
   631                                  loop_assign_7_0:	
   632 00000A64 418B70F8                	mov esi , [r8 - 8]	
   633 00000A68 678D348E                	lea esi , [esi + ecx * 4]	
   634 00000A6C 418B78F0                	mov edi , [r8 -16]	
   635 00000A70 678D3C8F                	lea edi , [edi + ecx * 4]	
   636 00000A74 678937                  	mov [edi] , esi	
   637 00000A77 FFC1                    	inc ecx	
   638 00000A79 83F908                  	cmp ecx , 8	
   639 00000A7C 72E6                    	jb loop_assign_7_0	
   640 00000A7E 4883C410                	add rsp , 16	
   641                                  
   642                                   ;OpADR: [63]  ; FLUSH opcode					
   643                                  
   644 00000A82 E81BF7FFFF              		call vV_io_flush	
   645                                  
   646                                   ;OpADR: [64]  ; PUSH opcode 
   647                                  
   648                                  	vV_push 69 
   648                              <1> 
   648 00000A87 41C70745000000      <1>  mov DWORD[vV_sp] , %1
   648 00000A8E 4983C704            <1>  add vV_sp , 4
   648                              <1> 
   649                                  
   650                                  
   651                                   ;OpADR: [65]  ; PUSH opcode 
   652                                  
   653                                  	vV_push 0 
   653                              <1> 
   653 00000A92 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   653 00000A99 4983C704            <1>  add vV_sp , 4
   653                              <1> 
   654                                  
   655                                  
   656                                   ;OpADR: [66]  ; Var assignement					
   657                                  
   658 00000A9D 8D3C25[D2020000]        	lea edi , [u_global.ref_to_array_1]	
   659 00000AA4 678B3F                  	mov edi , [edi]	
   660 00000AA7 31C0                    	xor eax , eax	
   661                                  	vV_pop ecx	
   661                              <1> 
   661 00000AA9 4983EF04            <1>  sub vV_sp , 4
   661 00000AAD 418B0F              <1>  mov %1 , [vV_sp]
   661                              <1> 
   662 00000AB0 83F908                  	cmp ecx , 8	
   663 00000AB3 0F8DD4F5FFFF            	jge vV_bound_error	
   664 00000AB9 01C8                    	add eax , ecx	
   665 00000ABB C1E002                  	shl eax , 2	
   666                                  	vV_pop ecx	
   666                              <1> 
   666 00000ABE 4983EF04            <1>  sub vV_sp , 4
   666 00000AC2 418B0F              <1>  mov %1 , [vV_sp]
   666                              <1> 
   667 00000AC5 678D3C07                	lea edi , [edi+eax]	
   668 00000AC9 67890F                  	mov [edi] , ecx	
   669                                  
   670                                   ;OpADR: [67]  ; PUSH opcode 
   671                                  
   672                                  	vV_push 420 
   672                              <1> 
   672 00000ACC 41C707A4010000      <1>  mov DWORD[vV_sp] , %1
   672 00000AD3 4983C704            <1>  add vV_sp , 4
   672                              <1> 
   673                                  
   674                                  
   675                                   ;OpADR: [68]  ; PUSH opcode 
   676                                  
   677                                  	vV_push 1 
   677                              <1> 
   677 00000AD7 41C70701000000      <1>  mov DWORD[vV_sp] , %1
   677 00000ADE 4983C704            <1>  add vV_sp , 4
   677                              <1> 
   678                                  
   679                                  
   680                                   ;OpADR: [69]  ; Var assignement					
   681                                  
   682 00000AE2 8D3C25[D2020000]        	lea edi , [u_global.ref_to_array_1]	
   683 00000AE9 678B3F                  	mov edi , [edi]	
   684 00000AEC 31C0                    	xor eax , eax	
   685                                  	vV_pop ecx	
   685                              <1> 
   685 00000AEE 4983EF04            <1>  sub vV_sp , 4
   685 00000AF2 418B0F              <1>  mov %1 , [vV_sp]
   685                              <1> 
   686 00000AF5 83F908                  	cmp ecx , 8	
   687 00000AF8 0F8D8FF5FFFF            	jge vV_bound_error	
   688 00000AFE 01C8                    	add eax , ecx	
   689 00000B00 C1E002                  	shl eax , 2	
   690                                  	vV_pop ecx	
   690                              <1> 
   690 00000B03 4983EF04            <1>  sub vV_sp , 4
   690 00000B07 418B0F              <1>  mov %1 , [vV_sp]
   690                              <1> 
   691 00000B0A 678D3C07                	lea edi , [edi+eax]	
   692 00000B0E 67890F                  	mov [edi] , ecx	
   693                                  
   694                                   ;OpADR: [70]  ; PUSH opcode 
   695                                  
   696                                  	vV_push 666999 
   696                              <1> 
   696 00000B11 41C707772D0A00      <1>  mov DWORD[vV_sp] , %1
   696 00000B18 4983C704            <1>  add vV_sp , 4
   696                              <1> 
   697                                  
   698                                  
   699                                   ;OpADR: [71]  ; PUSH opcode 
   700                                  
   701                                  	vV_push 2 
   701                              <1> 
   701 00000B1C 41C70702000000      <1>  mov DWORD[vV_sp] , %1
   701 00000B23 4983C704            <1>  add vV_sp , 4
   701                              <1> 
   702                                  
   703                                  
   704                                   ;OpADR: [72]  ; Var assignement					
   705                                  
   706 00000B27 8D3C25[D2020000]        	lea edi , [u_global.ref_to_array_1]	
   707 00000B2E 678B3F                  	mov edi , [edi]	
   708 00000B31 31C0                    	xor eax , eax	
   709                                  	vV_pop ecx	
   709                              <1> 
   709 00000B33 4983EF04            <1>  sub vV_sp , 4
   709 00000B37 418B0F              <1>  mov %1 , [vV_sp]
   709                              <1> 
   710 00000B3A 83F908                  	cmp ecx , 8	
   711 00000B3D 0F8D4AF5FFFF            	jge vV_bound_error	
   712 00000B43 01C8                    	add eax , ecx	
   713 00000B45 C1E002                  	shl eax , 2	
   714                                  	vV_pop ecx	
   714                              <1> 
   714 00000B48 4983EF04            <1>  sub vV_sp , 4
   714 00000B4C 418B0F              <1>  mov %1 , [vV_sp]
   714                              <1> 
   715 00000B4F 678D3C07                	lea edi , [edi+eax]	
   716 00000B53 67890F                  	mov [edi] , ecx	
   717                                  
   718                                   ;OpADR: [73]  ; PUSH opcode 
   719                                  
   720                                  	vV_push 10001 
   720                              <1> 
   720 00000B56 41C70711270000      <1>  mov DWORD[vV_sp] , %1
   720 00000B5D 4983C704            <1>  add vV_sp , 4
   720                              <1> 
   721                                  
   722                                  
   723                                   ;OpADR: [74]  ; PUSH opcode 
   724                                  
   725                                  	vV_push 3 
   725                              <1> 
   725 00000B61 41C70703000000      <1>  mov DWORD[vV_sp] , %1
   725 00000B68 4983C704            <1>  add vV_sp , 4
   725                              <1> 
   726                                  
   727                                  
   728                                   ;OpADR: [75]  ; Var assignement					
   729                                  
   730 00000B6C 8D3C25[D2020000]        	lea edi , [u_global.ref_to_array_1]	
   731 00000B73 678B3F                  	mov edi , [edi]	
   732 00000B76 31C0                    	xor eax , eax	
   733                                  	vV_pop ecx	
   733                              <1> 
   733 00000B78 4983EF04            <1>  sub vV_sp , 4
   733 00000B7C 418B0F              <1>  mov %1 , [vV_sp]
   733                              <1> 
   734 00000B7F 83F908                  	cmp ecx , 8	
   735 00000B82 0F8D05F5FFFF            	jge vV_bound_error	
   736 00000B88 01C8                    	add eax , ecx	
   737 00000B8A C1E002                  	shl eax , 2	
   738                                  	vV_pop ecx	
   738                              <1> 
   738 00000B8D 4983EF04            <1>  sub vV_sp , 4
   738 00000B91 418B0F              <1>  mov %1 , [vV_sp]
   738                              <1> 
   739 00000B94 678D3C07                	lea edi , [edi+eax]	
   740 00000B98 67890F                  	mov [edi] , ecx	
   741                                  
   742                                   ;OpADR: [76]  ; Function Call					
   743                                  
   744 00000B9B E8C2F9FFFF              		call print_array			
   745                                  
   746                                   ;OpADR: [77]  ; FLUSH opcode					
   747                                  
   748 00000BA0 E8FDF5FFFF              		call vV_io_flush	
   749                                  
   750                                   ;OpADR: [78]  ; PUSH opcode 
   751                                  
   752                                  	vV_push 690000 
   752                              <1> 
   752 00000BA5 41C70750870A00      <1>  mov DWORD[vV_sp] , %1
   752 00000BAC 4983C704            <1>  add vV_sp , 4
   752                              <1> 
   753                                  
   754                                  
   755                                   ;OpADR: [79]  ; PUSH opcode 
   756                                  
   757                                  	vV_push 0 
   757                              <1> 
   757 00000BB0 41C70700000000      <1>  mov DWORD[vV_sp] , %1
   757 00000BB7 4983C704            <1>  add vV_sp , 4
   757                              <1> 
   758                                  
   759                                  
   760                                   ;OpADR: [80]  ; Var assignement					
   761                                  
   762 00000BBB 8D3C25[AE020000]        	lea edi , [u_global.array_of_ref_1]	
   763 00000BC2 31C0                    	xor eax , eax	
   764                                  	vV_pop ecx	
   764                              <1> 
   764 00000BC4 4983EF04            <1>  sub vV_sp , 4
   764 00000BC8 418B0F              <1>  mov %1 , [vV_sp]
   764                              <1> 
   765 00000BCB 83F908                  	cmp ecx , 8	
   766 00000BCE 0F8DB9F4FFFF            	jge vV_bound_error	
   767 00000BD4 01C8                    	add eax , ecx	
   768 00000BD6 C1E002                  	shl eax , 2	
   769                                  	vV_pop ecx	
   769                              <1> 
   769 00000BD9 4983EF04            <1>  sub vV_sp , 4
   769 00000BDD 418B0F              <1>  mov %1 , [vV_sp]
   769                              <1> 
   770 00000BE0 678D3C07                	lea edi , [edi+eax]	
   771 00000BE4 678B3F                  	mov edi , [edi]	
   772 00000BE7 67890F                  	mov [edi] , ecx	
   773                                  
   774                                   ;OpADR: [81]  ; PUSH opcode 
   775                                  
   776                                  	vV_push 420 
   776                              <1> 
   776 00000BEA 41C707A4010000      <1>  mov DWORD[vV_sp] , %1
   776 00000BF1 4983C704            <1>  add vV_sp , 4
   776                              <1> 
   777                                  
   778                                  
   779                                   ;OpADR: [82]  ; PUSH opcode 
   780                                  
   781                                  	vV_push 5 
   781                              <1> 
   781 00000BF5 41C70705000000      <1>  mov DWORD[vV_sp] , %1
   781 00000BFC 4983C704            <1>  add vV_sp , 4
   781                              <1> 
   782                                  
   783                                  
   784                                   ;OpADR: [83]  ; Var assignement					
   785                                  
   786 00000C00 8D3C25[AE020000]        	lea edi , [u_global.array_of_ref_1]	
   787 00000C07 31C0                    	xor eax , eax	
   788                                  	vV_pop ecx	
   788                              <1> 
   788 00000C09 4983EF04            <1>  sub vV_sp , 4
   788 00000C0D 418B0F              <1>  mov %1 , [vV_sp]
   788                              <1> 
   789 00000C10 83F908                  	cmp ecx , 8	
   790 00000C13 0F8D74F4FFFF            	jge vV_bound_error	
   791 00000C19 01C8                    	add eax , ecx	
   792 00000C1B C1E002                  	shl eax , 2	
   793                                  	vV_pop ecx	
   793                              <1> 
   793 00000C1E 4983EF04            <1>  sub vV_sp , 4
   793 00000C22 418B0F              <1>  mov %1 , [vV_sp]
   793                              <1> 
   794 00000C25 678D3C07                	lea edi , [edi+eax]	
   795 00000C29 678B3F                  	mov edi , [edi]	
   796 00000C2C 67890F                  	mov [edi] , ecx	
   797                                  
   798                                   ;OpADR: [84]  ; PUSH opcode 
   799                                  
   800                                  	vV_push 666999 
   800                              <1> 
   800 00000C2F 41C707772D0A00      <1>  mov DWORD[vV_sp] , %1
   800 00000C36 4983C704            <1>  add vV_sp , 4
   800                              <1> 
   801                                  
   802                                  
   803                                   ;OpADR: [85]  ; PUSH opcode 
   804                                  
   805                                  	vV_push 6 
   805                              <1> 
   805 00000C3A 41C70706000000      <1>  mov DWORD[vV_sp] , %1
   805 00000C41 4983C704            <1>  add vV_sp , 4
   805                              <1> 
   806                                  
   807                                  
   808                                   ;OpADR: [86]  ; Var assignement					
   809                                  
   810 00000C45 8D3C25[AE020000]        	lea edi , [u_global.array_of_ref_1]	
   811 00000C4C 31C0                    	xor eax , eax	
   812                                  	vV_pop ecx	
   812                              <1> 
   812 00000C4E 4983EF04            <1>  sub vV_sp , 4
   812 00000C52 418B0F              <1>  mov %1 , [vV_sp]
   812                              <1> 
   813 00000C55 83F908                  	cmp ecx , 8	
   814 00000C58 0F8D2FF4FFFF            	jge vV_bound_error	
   815 00000C5E 01C8                    	add eax , ecx	
   816 00000C60 C1E002                  	shl eax , 2	
   817                                  	vV_pop ecx	
   817                              <1> 
   817 00000C63 4983EF04            <1>  sub vV_sp , 4
   817 00000C67 418B0F              <1>  mov %1 , [vV_sp]
   817                              <1> 
   818 00000C6A 678D3C07                	lea edi , [edi+eax]	
   819 00000C6E 678B3F                  	mov edi , [edi]	
   820 00000C71 67890F                  	mov [edi] , ecx	
   821                                  
   822                                   ;OpADR: [87]  ; PUSH opcode 
   823                                  
   824                                  	vV_push 10001 
   824                              <1> 
   824 00000C74 41C70711270000      <1>  mov DWORD[vV_sp] , %1
   824 00000C7B 4983C704            <1>  add vV_sp , 4
   824                              <1> 
   825                                  
   826                                  
   827                                   ;OpADR: [88]  ; PUSH opcode 
   828                                  
   829                                  	vV_push 7 
   829                              <1> 
   829 00000C7F 41C70707000000      <1>  mov DWORD[vV_sp] , %1
   829 00000C86 4983C704            <1>  add vV_sp , 4
   829                              <1> 
   830                                  
   831                                  
   832                                   ;OpADR: [89]  ; Var assignement					
   833                                  
   834 00000C8A 8D3C25[AE020000]        	lea edi , [u_global.array_of_ref_1]	
   835 00000C91 31C0                    	xor eax , eax	
   836                                  	vV_pop ecx	
   836                              <1> 
   836 00000C93 4983EF04            <1>  sub vV_sp , 4
   836 00000C97 418B0F              <1>  mov %1 , [vV_sp]
   836                              <1> 
   837 00000C9A 83F908                  	cmp ecx , 8	
   838 00000C9D 0F8DEAF3FFFF            	jge vV_bound_error	
   839 00000CA3 01C8                    	add eax , ecx	
   840 00000CA5 C1E002                  	shl eax , 2	
   841                                  	vV_pop ecx	
   841                              <1> 
   841 00000CA8 4983EF04            <1>  sub vV_sp , 4
   841 00000CAC 418B0F              <1>  mov %1 , [vV_sp]
   841                              <1> 
   842 00000CAF 678D3C07                	lea edi , [edi+eax]	
   843 00000CB3 678B3F                  	mov edi , [edi]	
   844 00000CB6 67890F                  	mov [edi] , ecx	
   845                                  
   846                                   ;OpADR: [90]  ; Function Call					
   847                                  
   848 00000CB9 E8A4F8FFFF              		call print_array			
   849                                  
   850                                   ;OpADR: [91]  ; Function Call					
   851                                  
   852 00000CBE E841F8FFFF              		call liner			
   853                                  
   854                                   ;OpADR: [92]  ; Var Ref assignement					
   855                                  
   856 00000CC3 31C0                    	xor eax , eax
   857 00000CC5 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   858 00000CCC 678D3407                	lea esi , [edi+eax]	
   859 00000CD0 31C0                    	xor eax , eax
   860 00000CD2 8D3C25[CE020000]        	lea edi , [u_global.double_ref_var_1]	
   861 00000CD9 678D3C07                	lea edi , [edi+eax]	
   862 00000CDD 678937                  	mov [edi] , esi	
   863                                  
   864                                   ;OpADR: [93]  ; PUSH opcode 
   865                                  
   866                                  	vV_push 97 
   866                              <1> 
   866 00000CE0 41C70761000000      <1>  mov DWORD[vV_sp] , %1
   866 00000CE7 4983C704            <1>  add vV_sp , 4
   866                              <1> 
   867                                  
   868                                  
   869                                   ;OpADR: [94]  ; OUT opcode (8)			
   870                                  
   871                                  		
   872 00000CEB E85DF5FFFF              	call vV_io_out_char				
   873                                  						
   874                                  
   875                                   ;OpADR: [95]  ; PUSH opcode 
   876                                  
   877                                  	vV_push 42 
   877                              <1> 
   877 00000CF0 41C7072A000000      <1>  mov DWORD[vV_sp] , %1
   877 00000CF7 4983C704            <1>  add vV_sp , 4
   877                              <1> 
   878                                  
   879                                  
   880                                   ;OpADR: [96]  ; Var assignement					
   881                                  
   882 00000CFB 31C0                    	xor eax , eax
   883 00000CFD 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   884                                  	vV_pop ecx	
   884                              <1> 
   884 00000D04 4983EF04            <1>  sub vV_sp , 4
   884 00000D08 418B0F              <1>  mov %1 , [vV_sp]
   884                              <1> 
   885 00000D0B 678D3C07                	lea edi , [edi+eax]	
   886 00000D0F 678B3F                  	mov edi , [edi]	
   887 00000D12 67890F                  	mov [edi] , ecx	
   888                                  
   889                                   ;OpADR: [97]  ; Var invocation					
   890                                  
   891 00000D15 31C0                    	xor eax , eax
   892 00000D17 8D3C25[CE020000]        	lea edi , [u_global.double_ref_var_1]	
   893 00000D1E 678B0C07                	mov ecx , [edi+eax]	
   894 00000D22 678B09                  	mov ecx , [ecx]	
   895 00000D25 678B09                  	mov ecx , [ecx]	
   896                                  	vV_push ecx	
   896                              <1> 
   896 00000D28 41890F              <1>  mov DWORD[vV_sp] , %1
   896 00000D2B 4983C704            <1>  add vV_sp , 4
   896                              <1> 
   897                                  
   898                                   ;OpADR: [98]  ; OUT opcode (0)			
   899                                  
   900 00000D2F E8AFF4FFFF              	call vV_io_out_default			
   901                                  						
   902                                  
   903                                   ;OpADR: [99]  ; PUSH opcode 
   904                                  
   905                                  	vV_push 98 
   905                              <1> 
   905 00000D34 41C70762000000      <1>  mov DWORD[vV_sp] , %1
   905 00000D3B 4983C704            <1>  add vV_sp , 4
   905                              <1> 
   906                                  
   907                                  
   908                                   ;OpADR: [100]  ; OUT opcode (8)			
   909                                  
   910                                  		
   911 00000D3F E809F5FFFF              	call vV_io_out_char				
   912                                  						
   913                                  
   914                                   ;OpADR: [101]  ; Var Ref assignement					
   915                                  
   916 00000D44 31C0                    	xor eax , eax
   917 00000D46 8D3C25[86020000]        	lea edi , [u_global.ref_var_1]	
   918 00000D4D 678D3407                	lea esi , [edi+eax]	
   919 00000D51 31C0                    	xor eax , eax
   920 00000D53 8D3C25[8A020000]        	lea edi , [u_global.ref_var_2]	
   921 00000D5A 678D3C07                	lea edi , [edi+eax]	
   922 00000D5E 678B06                  	mov eax , [esi]	
   923 00000D61 678907                  	mov DWORD[edi] , eax	
   924                                  
   925                                   ;OpADR: [102]  ; PUSH opcode 
   926                                  
   927                                  	vV_push 99 
   927                              <1> 
   927 00000D64 41C70763000000      <1>  mov DWORD[vV_sp] , %1
   927 00000D6B 4983C704            <1>  add vV_sp , 4
   927                              <1> 
   928                                  
   929                                  
   930                                   ;OpADR: [103]  ; OUT opcode (8)			
   931                                  
   932                                  		
   933 00000D6F E8D9F4FFFF              	call vV_io_out_char				
   934                                  						
   935                                  
   936                                   ;OpADR: [104]  ; Var invocation					
   937                                  
   938 00000D74 31C0                    	xor eax , eax
   939 00000D76 8D3C25[8A020000]        	lea edi , [u_global.ref_var_2]	
   940 00000D7D 678B0C07                	mov ecx , [edi+eax]	
   941 00000D81 678B09                  	mov ecx , [ecx]	
   942                                  	vV_push ecx	
   942                              <1> 
   942 00000D84 41890F              <1>  mov DWORD[vV_sp] , %1
   942 00000D87 4983C704            <1>  add vV_sp , 4
   942                              <1> 
   943                                  
   944                                   ;OpADR: [105]  ; OUT opcode (0)			
   945                                  
   946 00000D8B E853F4FFFF              	call vV_io_out_default			
   947                                  						
   948                                  
   949                                   ;OpADR: [106]  ; PUSH opcode 
   950                                  
   951                                  	vV_push 100 
   951                              <1> 
   951 00000D90 41C70764000000      <1>  mov DWORD[vV_sp] , %1
   951 00000D97 4983C704            <1>  add vV_sp , 4
   951                              <1> 
   952                                  
   953                                  
   954                                   ;OpADR: [107]  ; OUT opcode (8)			
   955                                  
   956                                  		
   957 00000D9B E8ADF4FFFF              	call vV_io_out_char				
   958                                  						
   959                                  		
   960 00000DA0 C3                      		ret
   961                                  
   962                                  ;Transpiled from vV with vVc version 0.0.4
   963                                  		
   964                                  		
