%include "wcs/assembly/w_runtime/wio.asm"		
%include "wcs/assembly/w_runtime/w_runtime.asm"	


global w_entry_point



segment .text 




w_entry_point:


	mov rbp, rsp			;Setup Stack Frame
	
	
 ;OpADR: (0)
; PUSH opcode 

	mov DWORD [r15] , 0 
	add r15 , 4 

 ;OpADR: (1)
; PUSH opcode 

	mov DWORD [r15] , 24 
	add r15 , 4 


	wblock_0:		

;------------------------------------------------------


 ;OpADR: (2)
; SWAP opcode 

	mov rax, [r15-8]	
	mov rdx, [r15-4]	
	mov [r15-8] , rdx	
	mov [r15-4] , rax	

 ;OpADR: (3)
; PUSH opcode 

	mov DWORD [r15] , 1 
	add r15 , 4 

 ;OpADR: (4)
; ADD opcode 					

	mov eax , [r15 - 8]			
	add eax , [r15-4]			
	mov [r15-8] , eax			

	sub r15 , 4		

 ;OpADR: (5)
; SWAP opcode 

	mov rax, [r15-8]	
	mov rdx, [r15-4]	
	mov [r15-8] , rdx	
	mov [r15-4] , rax	

 ;OpADR: (6)
; DUP opcode (1)			

	mov ecx , 1			
	lea rsi , [r15-4]	
	mov rdi , r15				

	rep movsd				

	add r15 , 4		

 ;OpADR: (7)
; PUSH opcode 

	mov DWORD [r15] , 1 
	add r15 , 4 

 ;OpADR: (8)
; OR opcode					

	mov eax , [r15-4]			
	and DWORD[r15-8] , eax			

	sub r15 , 4				

 ;OpADR: (9)
; OUT opcode (0)			

						
	call wio_out				
						

 ;OpADR: (10)
; RSH opcode 					

	shr DWORD[r15-4] , 1			

 ;OpADR: (11)
; DUP opcode (1)			

	mov ecx , 1			
	lea rsi , [r15-4]	
	mov rdi , r15				

	rep movsd				

	add r15 , 4		

 ;OpADR: (12)
; PUSH opcode 

	mov DWORD [r15] , 4294967295 
	add r15 , 4 

 ;OpADR: (13)
; OR opcode					

	mov eax , [r15-4]			
	and DWORD[r15-8] , eax			

	sub r15 , 4				

 ;OpADR: (14)
; WHILE opcode					

	sub r15 , 4				
	or DWORD[r15] , 0			
	jne wblock_0	

 ;OpADR: (15)
; DROP opcode 

	sub r15 , 4	


	wblock_1:		

;------------------------------------------------------


 ;OpADR: (16)
; PUSH opcode 

	mov DWORD [r15] , 0 
	add r15 , 4 

 ;OpADR: (17)
; OUT opcode (0)			

						
	call wio_out				
						

 ;OpADR: (18)
; PUSH opcode 

	mov DWORD [r15] , 1 
	add r15 , 4 

 ;OpADR: (19)
; ADD opcode 					

	mov eax , [r15 - 8]			
	add eax , [r15-4]			
	mov [r15-8] , eax			

	sub r15 , 4		

 ;OpADR: (20)
; DUP opcode (1)			

	mov ecx , 1			
	lea rsi , [r15-4]	
	mov rdi , r15				

	rep movsd				

	add r15 , 4		

 ;OpADR: (21)
; PUSH opcode 

	mov DWORD [r15] , 8 
	add r15 , 4 

 ;OpADR: (22)
; LESS opcode					

	mov eax , [r15-4]			
	cmp DWORD[r15-8] , eax			

	jae short 0xb				

			mov DWORD[r15-8] , -1	

	jmp short 0x9				

			mov DWORD[r15-8] , 0	

	sub r15 , 4				

 ;OpADR: (23)
; WHILE opcode					

	sub r15 , 4				
	or DWORD[r15] , 0			
	jne wblock_1	

 ;OpADR: (24)
; PUSH opcode 

	mov DWORD [r15] , 0 
	add r15 , 4 
		
		ret

;Transpiled from w with wcs version 0.0.1 
		
		